[
  {
    "p_name": "p03494",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nfor var3 in range(10):\n\tfor var4 in range(var0):\n\t\tif var1[var4] % 2 == 0:\n\t\t\tvar1[var4] = var1[var4] / 2\n\t\telse:\n\t\t\tprint(var3)\n\t\t\tvar2 = 1\n\t\t\tbreak\n\tif var2 == 1:\n\t\tbreak",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nfor var3 in range(30):\n\tfor var4 in range(var0):\n\t\tif var1[var4] % 2 == 0:\n\t\t\tvar1[var4] = var1[var4] / 2\n\t\telse:\n\t\t\tprint(var3)\n\t\t\tvar2 = 1\n\t\t\tbreak\n\tif var2 == 1:\n\t\tbreak"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = input().split()\nvar2 = 0\nvar3 = 1\nwhile 2 * var2 <= var0 - 1:\n\tvar3 = var3 * int(var1[var2]) * int(var1[var0 - 1 - var2])\n\tvar2 += 1\nif var3 <= 1000000000000000000:\n\tprint(var3)\nelse:\n\tprint(-1)",
      "fixed_code": "var0 = int(input())\nvar1 = input().split()\nvar2 = 0\nvar3 = 1\nif var1.count('0') >= 1:\n\tprint(0)\nelse:\n\twhile var2 <= var0 - 1 and var3 <= 1000000000000000000:\n\t\tvar3 = var3 * int(var1[var2])\n\t\tvar2 += 1\n\tif var3 > 1000000000000000000:\n\t\tprint(-1)\n\telse:\n\t\tprint(var3)"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = [list((int(var3) for var3 in input().split())) for _ in range(var1)]\nvar4 = '000'\nvar5 = 0\nfor var6, var7 in var2:\n\tif var4[var6 - 1] != '0' and var4[var6 - 1] != str(var7):\n\t\tvar5 = 1\n\telif var6 == 1:\n\t\tvar4 = str(var7) + var4[1:]\n\telif var6 == 2:\n\t\tvar4 = var4[0] + str(var7) + var4[2]\n\telse:\n\t\tvar4 = var4[:2] + str(var7)\nprint(var4 if var5 == 0 and var4 != '000' else -1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = [list((int(var3) for var3 in input().split())) for _ in range(var1)]\nfor i in range(10 ** var0):\n\ti = str(i)\n\tif len(i) != var0:\n\t\tcontinue\n\tif all([i[var6 - 1] == str(var7) for var6, var7 in var2]):\n\t\tprint(i)\n\t\texit()\nprint(-1)"
    }
  },
  {
    "p_name": "p02693",
    "code": {
      "buggy_code": "k = int(input())\nvar0, var1 = list(map(int, input().split()))\nvar2 = float(var0 / k)\nvar3 = float(var1 / k)\nvar4 = var0 % k\nvar5 = var1 % k\nif var3 - var2 >= 1.0 or var4 == 0 or var5 == 0:\n\tprint('OK')\nelse:\n\tprint('NG')",
      "fixed_code": "k = int(input())\nvar0, var1 = list(map(int, input().split()))\nif var0 % k == 0 or var1 % k == 0:\n\tprint('OK')\nelif var1 // k - var0 // k >= 1:\n\tprint('OK')\nelif var1 / k - var0 / k < 1 and var0 % k > var1 % k:\n\tprint('OK')\nelse:\n\tprint('NG')"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 1\nvar3 = True\nfor i in range(var0):\n\tvar2 = var2 * var1[i]\n\tif var2 == 0:\n\t\tprint('0')\n\t\tvar3 = False\n\t\tbreak\n\telif var2 > 10 ** 18:\n\t\tprint('-1')\n\t\tvar3 = False\n\t\tbreak\nif var3:\n\tprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 1\nvar3 = True\nif 0 in var1:\n\tprint('0')\nelse:\n\tfor i in range(var0):\n\t\tvar2 = var2 * var1[i]\n\t\tif var2 > 10 ** 18:\n\t\t\tprint('-1')\n\t\t\tvar3 = False\n\t\t\tbreak\n\tif var3:\n\t\tprint(var2)"
    }
  },
  {
    "p_name": "p03438",
    "code": {
      "buggy_code": "import sys\nvar0 = int(sys.stdin.readline())\nvar1 = list(map(int, sys.stdin.readline().split()))\nvar2 = list(map(int, sys.stdin.readline().split()))\nvar3 = sum(var1)\nvar4 = sum(var2)\nvar5 = var4 - var3\nvar6 = 0\nvar7 = 0\nfor i in range(var0):\n\tif var1[i] > var2[i]:\n\t\tvar7 += var1[i] - var2[i]\n\telif var1[i] < var2[i]:\n\t\tvar8 = var2[i] - var1[i]\n\t\tvar6 += var8 // 2\nif var3 <= var4 and var5 >= var6 + var7:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "import sys\nvar0 = int(sys.stdin.readline())\nvar1 = list(map(int, sys.stdin.readline().split()))\nvar2 = list(map(int, sys.stdin.readline().split()))\nvar3 = sum(var1)\nvar4 = sum(var2)\nvar5 = var4 - var3\nvar6 = 0\nvar7 = 0\nfor i in range(var0):\n\tif var1[i] > var2[i]:\n\t\tvar7 += var1[i] - var2[i]\n\telif var1[i] < var2[i]:\n\t\tvar8 = var2[i] - var1[i]\n\t\tvar6 += var8 // 2\nif var3 <= var4 and var6 >= var7:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02682",
    "code": {
      "buggy_code": "var0 = input().split()\nvar1 = int(var0[0])\nvar2 = int(var0[1])\nvar3 = int(var0[2])\nk = int(var0[3])\nif var1 > k:\n\tprint(var1 - k)\n\texit()\nelif k - var1 == 0:\n\tprint(var1)\n\texit()\nelif k - var1 < var2:\n\tprint(var1)\n\texit()\nelif k - var1 == var2:\n\tprint(var1)\n\texit()\nelif k - var1 - var2 < var3:\n\tvar0 = k - var1 - var2\n\tprint(var1 - var0)\n\texit()\nelif k - var1 - var2 == var3:\n\tprint(var1 - var3)\nelif k - var1 - var2 > var3:\n\tprint(var1 - var3)",
      "fixed_code": "var0 = input().split()\nvar1 = int(var0[0])\nvar2 = int(var0[1])\nvar3 = int(var0[2])\nk = int(var0[3])\nif var1 > k:\n\tprint(k)\n\texit()\nelif var1 == k:\n\tprint(var1)\n\texit()\nelif var1 + var2 > k:\n\tprint(var1)\n\texit()\nelif k - var1 == var2:\n\tprint(var1)\n\texit()\nelse:\n\tvar0 = k - var1 - var2\n\tprint(var1 - var0)\n\texit()"
    }
  },
  {
    "p_name": "p02731",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = var0 // 3\nvar2 = (var0 - var1) // 2\nvar3 = var0 - var1 - var2\nprint(var1 * var2 * var3)",
      "fixed_code": "var0 = int(input())\nvar1 = var0 / 3\nprint(var1 ** 3)"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = []\nvar1 = map(int, input().split())\nvar2 = 1\nfor var3 in var1:\n\tvar2 *= var3\n\tif var2 > 10 ** 18:\n\t\tprint(-1)\n\t\tbreak\nelse:\n\tprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = []\nvar1 = map(int, input().split())\nvar1 = sorted(var1)\nvar2 = 1\nfor var3 in var1:\n\tvar2 *= var3\n\tif var2 > 10 ** 18:\n\t\tprint(-1)\n\t\tbreak\nelse:\n\tprint(var2)"
    }
  },
  {
    "p_name": "p02646",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2, var3 = map(int, input().split())\nvar4 = int(input())\nvar5 = var0 * var1 * var4\nvar6 = var2 * var3 * var4\nif var5 <= var6:\n\tprint('NO')\nelse:\n\tprint('YES')",
      "fixed_code": "var7, var8 = map(int, input().split())\nvar9, var10 = map(int, input().split())\nvar11 = int(input())\nif var7 < var9:\n\tif var8 <= var10:\n\t\tprint('NO')\n\telif var9 - var7 <= var11 * (var8 - var10):\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\nelif var7 > var9:\n\tif var8 <= var10:\n\t\tprint('NO')\n\telif var7 - var9 <= var11 * (var8 - var10):\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')"
    }
  },
  {
    "p_name": "p02755",
    "code": {
      "buggy_code": "var0 = input().split(' ')\nvar1 = int(var0[0])\nvar2 = int(var0[1])\nvar3 = var1 / 0.08\nif int(var3 * 0.1) == var2:\n\tprint(int(var3))\nelif int(var3 + 0.8) == int(var3):\n\tvar3 += 0.8\n\tif int(var3 * 0.1) == var2:\n\t\tprint(int(var3 * 0.1))\nelse:\n\tprint(-1)",
      "fixed_code": "var0 = input().split(' ')\nvar1 = int(var0[0])\nvar2 = int(var0[1])\nfor i in range(13, 1001):\n\tvar3 = int(i * 0.08)\n\tvar4 = int(i * 0.1)\n\tif var3 == var1 and var4 == var2:\n\t\tprint(i)\n\t\tbreak\n\tif i == 1000:\n\t\tprint(-1)\n\t\tbreak"
    }
  },
  {
    "p_name": "p02682",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nif var3 <= var0:\n\tprint(var0)\nelif var3 <= var0 + var1:\n\tprint(var0)\nelse:\n\tprint(2 * var0 + var1 - var3)",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nif var3 <= var0:\n\tprint(var3)\nelse:\n\tvar4 = [var0, var1, var2]\n\tvar5 = [1, 0, -1]\n\tvar6 = 0\n\tvar7 = var3\n\tfor i in range(3):\n\t\tvar7 -= var4[i]\n\t\tif var7 <= 0:\n\t\t\tvar6 += (var4[i] + var7) * var5[i]\n\t\t\tbreak\n\t\telse:\n\t\t\tvar6 += var4[i] * var5[i]\n\tprint(var6)"
    }
  },
  {
    "p_name": "p03319",
    "code": {
      "buggy_code": "import math\nvar0, k = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = var1.index(1)\nvar3 = var0 - var2 - 1\nif var0 == k:\n\tprint(1)\nelse:\n\tprint(math.ceil(var2 / (k - 1)) + math.ceil(var3 / (k - 1)))",
      "fixed_code": "import math\nvar0, k = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = var1.index(1)\nvar3 = var0 - var2 - 1\nvar4 = min(var2, var3)\nprint(math.ceil((var0 - 1) / (k - 1)))"
    }
  },
  {
    "p_name": "p02866",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = [0] * 10 ** 5\nvar3 = 0\nfor var4 in var1:\n\tvar2[var4] += 1\n\tvar3 = max(var3, var4)\nvar5 = 998244353\nif var1[0] == 1:\n\tprint(0)\n\texit()\nelif var2[1] == 0:\n\tprint(var2[0])\n\texit()\nvar6 = var2[0]\nfor i in range(1, var3):\n\tvar6 = var6 * var2[i] ** var2[i + 1] % var5\nprint(var6)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = [0] * 10 ** 5\nvar3 = 0\nfor var4 in var1:\n\tvar2[var4] += 1\n\tvar3 = max(var3, var4)\nvar5 = 998244353\nif var1[0] != 0:\n\tprint(0)\n\texit()\nelif var2[0] > 1:\n\tprint(0)\n\texit()\nvar6 = 1\nfor i in range(var3):\n\tif var2[i] == 0 or var2[i + 1] == 0:\n\t\tprint(0)\n\t\texit()\n\tvar6 *= var2[i] ** var2[i + 1]\n\tvar6 %= var5\nprint(var6)"
    }
  },
  {
    "p_name": "p03679",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nif var2 <= var1:\n\tprint('delicious')\nelif var2 <= var1 + var0:\n\tprint('safe')\nelse:\n\tprint('dengerous')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nif var2 <= var1:\n\tprint('delicious')\nelif var2 <= var1 + var0:\n\tprint('safe')\nelse:\n\tprint('dangerous')"
    }
  },
  {
    "p_name": "p03000",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 0\ni = 0\nwhile True:\n\tvar3 += var2[i]\n\tif var3 > var1 or i == var0 - 1:\n\t\tbreak\n\ti += 1\nprint(i + 1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 0\nvar4 = 1\nfor i in range(var0):\n\tvar3 += var2[i]\n\tif var3 <= var1:\n\t\tvar4 += 1\nprint(var4)"
    }
  },
  {
    "p_name": "p03773",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = var0 + var1\nif var2 > 24:\n\tvar2 = var2 - 24\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = var0 + var1\nif var2 >= 24:\n\tvar2 = var2 - 24\nprint(var2)"
    }
  },
  {
    "p_name": "p02731",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 10 ** 3\nvar2 = 0\nfor var3 in range(1, var1 + 1):\n\tfor var4 in range(1, var1 - var3):\n\t\tvar5 = var0 - var3 - var4\n\t\tvar6 = var3 * var4 * var5\n\t\tvar2 = max(var2, var6)\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar7 = var0 / 3\nvar6 = var7 ** 3\nprint(var6)"
    }
  },
  {
    "p_name": "p04011",
    "code": {
      "buggy_code": "var0 = int(input())\nk = int(input())\nvar1 = int(input())\nvar2 = int(input())\nprint(k * var1 + (var0 - k) * var2)",
      "fixed_code": "var0 = int(input())\nk = int(input())\nvar1 = int(input())\nvar2 = int(input())\nif var0 <= k:\n\tprint(var0 * var1)\nelse:\n\tprint(k * var1 + (var0 - k) * var2)"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "var0 = 2019\nvar1, var2 = map(int, input().split())\nvar3 = var1 % var0\nvar4 = var2 % var0\nvar5 = 2019 ** 2\nif var3 < var4:\n\tfor i in range(var3, var4 + 1):\n\t\tfor j in range(i + 1, var4 + 1):\n\t\t\tvar5 = min(var5, i * j % var0)\nelif var3 >= var4:\n\tvar6 = list(range(var3, 2020)) + list(range(1, var4 + 1))\n\tfor i in var6:\n\t\tfor j in var6:\n\t\t\tif i == j:\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tvar5 = min(var5, i * j % var0)\nprint(var5)",
      "fixed_code": "var0 = 2019\nvar1, var2 = map(int, input().split())\nvar3 = var1 % var0\nvar4 = var2 % var0\nvar5 = 2019 ** 2\nif var2 - var1 >= 2019:\n\tvar5 = 0\nelif var3 < var4:\n\tfor i in range(var3, var4 + 1):\n\t\tfor j in range(i + 1, var4 + 1):\n\t\t\tvar5 = min(var5, i * j % var0)\nelse:\n\tvar5 = 0\nprint(var5)"
    }
  },
  {
    "p_name": "p03352",
    "code": {
      "buggy_code": "import sys\n\ndef input():\n\treturn sys.stdin.readline().strip()\n\ndef method0():\n\tvar0 = int(input())\n\tfor i in range(var0, 0, -1):\n\t\tif i == 1:\n\t\t\tprint(1)\n\t\t\treturn\n\t\tj = 2\n\t\twhile True:\n\t\t\tk = i ** (1 / j)\n\t\t\tif int(k) <= 1:\n\t\t\t\tbreak\n\t\t\tif int(k) == k:\n\t\t\t\tprint(i)\n\t\t\t\treturn\n\t\t\tj += 1\nmethod0()",
      "fixed_code": "import sys\n\ndef input():\n\treturn sys.stdin.readline().strip()\n\ndef method0():\n\tvar0 = int(input())\n\tvar1 = 1\n\tfor i in range(2, var0 + 1):\n\t\tj = 2\n\t\twhile True:\n\t\t\tk = i ** j\n\t\t\tif k > var0:\n\t\t\t\tbreak\n\t\t\tif k > var1:\n\t\t\t\tvar1 = k\n\t\t\tj += 1\n\tprint(var1)\nmethod0()"
    }
  },
  {
    "p_name": "p02393",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = input().split()\n\tvar1 = int(var0[0])\n\tvar2 = int(var0[1])\n\tvar3 = int(var0[2])\n\tif var1 >= var3:\n\t\tvar4 = var1\n\t\tvar1 = var3\n\t\tvar3 = var4\n\tif var2 >= var3:\n\t\tvar4 = var2\n\t\tvar2 = var3\n\t\tvar3 = var4\n\tprint('{0} {1} {2}'.format(var1, var2, var3))\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "def method0():\n\tvar0 = input().split()\n\tvar1 = int(var0[0])\n\tvar2 = int(var0[1])\n\tvar3 = int(var0[2])\n\tif var1 > var2:\n\t\tvar4 = var1\n\t\tvar1 = var2\n\t\tvar2 = var4\n\tif var2 > var3:\n\t\tvar4 = var2\n\t\tvar2 = var3\n\t\tvar3 = var4\n\tif var1 > var2:\n\t\tvar4 = var1\n\t\tvar1 = var2\n\t\tvar2 = var4\n\tprint('{0} {1} {2}'.format(var1, var2, var3))\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02813",
    "code": {
      "buggy_code": "from itertools import permutations\nimport math\nvar0 = int(input())\nvar1 = list(map(str, input().split()))\nvar2 = list(map(str, input().split()))\nvar3 = int(''.join(var1))\nvar4 = int(''.join(var2))\nvar5 = []\nvar6 = ['1', '2', '3', '4', '5', '6', '7', '8']\nfor i in permutations(var6[:var0]):\n\tvar5.append(int(''.join(i)))\nvar5.sort()\nfor i in range(1, math.factorial(var0)):\n\tif var5[i] == var3:\n\t\tvar3 = i\n\tif var5[i] == var4:\n\t\tvar4 = i\nprint(abs(var3 - var4))",
      "fixed_code": "from itertools import permutations\nimport math\nvar0 = int(input())\nvar1 = list(map(str, input().split()))\nvar2 = list(map(str, input().split()))\nvar3 = int(''.join(var1))\nvar4 = int(''.join(var2))\nvar5 = []\nvar6 = ['1', '2', '3', '4', '5', '6', '7', '8']\nfor i in permutations(var6[:var0]):\n\tvar5.append(int(''.join(i)))\nvar5.sort()\nfor i in range(0, math.factorial(var0)):\n\tif var5[i] == var3:\n\t\tvar3 = i\n\tif var5[i] == var4:\n\t\tvar4 = i\nprint(abs(var3 - var4))"
    }
  },
  {
    "p_name": "p03208",
    "code": {
      "buggy_code": "def method0(var0: int, var1: int, var2: var3) -> int:\n\tvar4 = sorted(var2, var5=True)\n\treturn var4[0] - var4[var1 - 1]\nif __name__ == '__main__':\n\tvar0, var1 = [int(var6) for var6 in input().split()]\n\tvar2 = [int(input()) for _ in range(var0)]\n\tvar7 = method0(var0, var1, var2)\n\tprint(var7)",
      "fixed_code": "def method0(var0: int, var1: int, var2: var3) -> int:\n\tvar4 = sorted(var2, var5=True)\n\treturn min((var4[i] - var4[i + var1 - 1] for i in range(var0 - var1 + 1)))\nif __name__ == '__main__':\n\tvar0, var1 = [int(var6) for var6 in input().split()]\n\tvar2 = [int(input()) for _ in range(var0)]\n\tvar7 = method0(var0, var1, var2)\n\tprint(var7)"
    }
  },
  {
    "p_name": "p02419",
    "code": {
      "buggy_code": "import re\nvar0 = str(input())\nvar1 = []\nwhile True:\n\tvar2 = str(input())\n\tif var2 == 'END_OF_TEXT':\n\t\tbreak\n\tvar1 += var2.split()\nvar3 = 0\nfor var4 in var1:\n\tif re.fullmatch(var0, var4):\n\t\tvar3 += 1\nprint(var3)",
      "fixed_code": "var5 = str(input())\nvar1 = []\nwhile True:\n\tvar2 = str(input())\n\tif var2 == 'END_OF_TEXT':\n\t\tbreak\n\tvar1 += var2.lower().split()\nvar3 = 0\nfor var4 in var1:\n\tif var5 == var4:\n\t\tvar3 += 1\nprint(var3)"
    }
  },
  {
    "p_name": "p02866",
    "code": {
      "buggy_code": "var0 = 998244353\n\ndef method0(var1, var2):\n\tif var2 == 0:\n\t\treturn 1\n\tif var2 % 2 == 0:\n\t\treturn method0(var1 * var1 % var0, var2 // 2) % var0\n\telse:\n\t\treturn var1 * method0(var1, var2 - 1) % var0\nvar3 = int(input())\nvar4 = list(map(int, input().split()))\nvar5 = sorted(var4)\nvar6 = 1\nvar7 = 1\nvar8 = 1\nif var4[0] != 0:\n\tvar6 = 0\nif var3 > 1 and var5[1] == 0:\n\tvar6 = 0\nfor i in range(var3 - 1):\n\tif var5[i] == var5[i + 1]:\n\t\tvar7 += 1\n\telif var5[i] + 1 != var5[i + 1]:\n\t\tvar6 = 0\n\t\tbreak\n\telse:\n\t\tvar6 *= method0(var8, var7) % var0\n\t\tvar8 = var7\n\t\tvar7 = 1\n\t\tif i == var3 - 1:\n\t\t\tbreak\nelse:\n\tvar6 *= method0(var8, var7) % var0\nprint(var6)",
      "fixed_code": "var0 = 998244353\n\ndef method0(var1, var2):\n\tif var2 == 0:\n\t\treturn 1\n\tif var2 % 2 == 0:\n\t\treturn method0(var1 * var1 % var0, var2 // 2) % var0\n\telse:\n\t\treturn var1 * method0(var1, var2 - 1) % var0\nvar3 = int(input())\nvar4 = list(map(int, input().split()))\nvar5 = sorted(var4)\nvar6 = 1\nvar7 = 1\nvar8 = 1\nif var4[0] != 0:\n\tvar6 = 0\nif var3 >= 2 and var5[1] == 0:\n\tvar6 = 0\nfor i in range(var3 - 1):\n\tif var5[i] == var5[i + 1]:\n\t\tvar7 += 1\n\telif var5[i] + 1 != var5[i + 1]:\n\t\tvar6 = 0\n\t\tbreak\n\telse:\n\t\tvar6 *= method0(var8, var7)\n\t\tvar6 %= var0\n\t\tvar8 = var7\n\t\tvar7 = 1\n\t\tif i == var3 - 1:\n\t\t\tbreak\nelse:\n\tvar6 *= method0(var8, var7)\n\tvar6 %= var0\nprint(var6)"
    }
  },
  {
    "p_name": "p02843",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(str(var0))\nvar2 = int(var1[len(var1) - 2] + var1[len(var1) - 1])\nif 5 * (var0 // 100) >= var2:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0 = int(input())\nvar1 = list(str(var0))\nvar2 = int(var1[len(var1) - 2] + var1[len(var1) - 1])\nif 5 * (var0 // 100) >= var2:\n\tprint(1)\nelse:\n\tprint(0)"
    }
  },
  {
    "p_name": "p03252",
    "code": {
      "buggy_code": "import collections\nvar0 = input()\nvar1 = input()\nvar2 = collections.Counter(var0)\nvar3 = collections.Counter(var1)\nvar2 = sorted(var2.items(), var4=lambda var5: var5[1])\nvar3 = sorted(var3.items(), var4=lambda var5: var5[1])\nvar6 = []\nvar7 = []\nif len(var0) == len(var1):\n\tif len(var2) != len(var3):\n\t\tprint('No')\n\telse:\n\t\tfor var8, var9 in zip(var2, var3):\n\t\t\tif var8[1] > 1:\n\t\t\t\tvar6.append((i for i, var5 in enumerate(var0) if var5 == var8[0]))\n\t\t\t\tvar7.append((i for i, var5 in enumerate(var1) if var5 == var9[0]))\n\t\tif set(var6) == var7:\n\t\t\tprint('Yes')\n\t\telse:\n\t\t\tprint('No')\nelse:\n\tprint('No')",
      "fixed_code": "import collections\nvar0 = input()\nvar1 = input()\nvar2 = collections.Counter(var0)\nvar3 = collections.Counter(var1)\nvar2 = sorted(var2.items(), var4=lambda var5: var5[1])\nvar3 = sorted(var3.items(), var4=lambda var5: var5[1])\nvar6 = []\nvar7 = []\nif len(var0) == len(var1):\n\tif len(var2) != len(var3):\n\t\tprint('No')\n\telse:\n\t\tfor var8, var9 in zip(var2, var3):\n\t\t\tif var8[1] > 1:\n\t\t\t\tvar6.append(tuple([i for i, var5 in enumerate(var0) if var5 == var8[0]]))\n\t\t\t\tvar7.append(tuple([i for i, var5 in enumerate(var1) if var5 == var9[0]]))\n\t\tif set(var6) == set(var7):\n\t\t\tprint('Yes')\n\t\telse:\n\t\t\tprint('No')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02829",
    "code": {
      "buggy_code": "var0 = list(map(int, input().split()))\nprint(6 - sum(var0))",
      "fixed_code": "var0 = int(input())\nvar1 = int(input())\nprint(str(6 - sum([var0, var1])))"
    }
  },
  {
    "p_name": "p02795",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = int(input())\nvar2 = int(input())\nvar3 = 0\nif var0 > var1:\n\tfor i in range(var0):\n\t\tvar3 = var3 + var0\n\t\tif var2 <= var3:\n\t\t\tprint(int(var3 / var0))\n\t\t\tbreak\n\tif var2 > var3:\n\t\tfor i in range(var1):\n\t\t\tvar3 = var3 + var1 - 1\n\t\t\tif var2 <= var3:\n\t\t\t\tprint(int(var3 / var1))\n\t\t\t\tbreak\nelif var1 > var0:\n\tfor i in range(var1):\n\t\tvar3 = var3 + var1\n\t\tif var2 <= var3:\n\t\t\tprint(int(var3 / var1))\n\t\t\tbreak\n\tif var2 > var3:\n\t\tfor i in range(var0):\n\t\t\tvar3 = var3 + var0 - 1\n\t\t\tif var2 <= var3:\n\t\t\t\tprint(int(var3 / var0))\n\t\t\t\tbreak",
      "fixed_code": "var0 = int(input())\nvar1 = int(input())\nvar2 = int(input())\nvar3 = 0\nif var0 > var1:\n\tfor i in range(var0):\n\t\tvar3 = var3 + var0\n\t\tif var2 <= var3:\n\t\t\tprint(int(var3 / var0))\n\t\t\tbreak\nelse:\n\tfor i in range(var1):\n\t\tvar3 = var3 + var1\n\t\tif var2 <= var3:\n\t\t\tprint(int(var3 / var1))\n\t\t\tbreak"
    }
  },
  {
    "p_name": "p02712",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = var0 / 3\nvar2 = var0 / 5\nvar3 = var0 / 15\n\ndef method0(k):\n\treturn k * (k + 1) / 2\nvar4 = method0(var0) + 15 * method0(var3) - 3 * method0(var1) - 5 * method0(var2)\nprint(var4)",
      "fixed_code": "var0 = int(input())\nvar1 = var0 // 3\nvar2 = var0 // 5\nvar3 = var0 // 15\n\ndef method0(k):\n\treturn k * (k + 1) // 2\nvar4 = method0(var0) + 15 * method0(var3) - 3 * method0(var1) - 5 * method0(var2)\nprint(var4)"
    }
  },
  {
    "p_name": "p02711",
    "code": {
      "buggy_code": "var0 = input()\nfor i in range(3):\n\tif var0[i] == '7':\n\t\tprint('Yes')\nif var0[0] != '7' and var0[1] != '7' and (var0[2] != '7'):\n\tprint('No')",
      "fixed_code": "var0 = input()\nfor i in range(3):\n\tif var0[i] == '7':\n\t\tprint('Yes')\n\t\texit()\nif var0[0] != '7' and var0[1] != '7' and (var0[2] != '7'):\n\tprint('No')"
    }
  },
  {
    "p_name": "p02829",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = int(input())\nif var0 + var1 == 3:\n\tprint('3')\nelif var0 + var1 == 4:\n\tprint('2')",
      "fixed_code": "var0 = int(input())\nvar1 = int(input())\nif var0 + var1 == 3:\n\tprint('3')\nelif var0 + var1 == 4:\n\tprint('2')\nelse:\n\tprint('1')"
    }
  },
  {
    "p_name": "p04011",
    "code": {
      "buggy_code": "\nimport sys\nimport itertools\nimport numpy as var0\nvar1 = sys.stdin.buffer.var1\nvar2 = sys.stdin.buffer.var2\nvar3 = sys.stdin.buffer.var3\nvar4, var5, var6, var7 = map(int, var1().split())\nprint(var5 * var6 if var4 <= var5 else var5 * var6 + (var4 - var5) * var7)",
      "fixed_code": "\nimport sys\nimport itertools\nimport numpy as var0\nvar1 = sys.stdin.buffer.var1\nvar2 = sys.stdin.buffer.var2\nvar3 = sys.stdin.buffer.var3\nvar4, var5, var6, var7 = map(int, var1().split())\nprint(var4 * var6 if var4 <= var5 else var5 * var6 + (var4 - var5) * var7)"
    }
  },
  {
    "p_name": "p03387",
    "code": {
      "buggy_code": "import sys\nimport math\nvar0, var1, var2 = map(int, input().split())\nvar3 = max(var0, max(var1, var2))\nvar4 = min(var0, min(var1, var2))\nvar5 = var0 + var1 + var2 - var3 - var4\nvar6 = 0\nif (var3 - var5) % 2 == 0 and (var3 - var4) % 2 == 0:\n\tvar6 = (var3 - var5) // 2 + (var3 - var4) // 2\nelif (var5 - var4) % 2 == 1:\n\tvar7 = var5 - var4\n\tvar6 = var7 + (var3 + var7) - var5\nelif (var5 - var4) % 2 == 0:\n\tvar7 = var5 - var4\n\tvar6 = var7 // 2 + var3 - var5\nelif (var3 - var5) % 2 != 0 and (var3 - var4) % 2 != 0:\n\tvar6 = var3 - var4 + (var5 - var4)\nprint(var6)",
      "fixed_code": "import sys\nimport math\nvar0, var1, var2 = map(int, input().split())\nvar3 = max(var0, max(var1, var2))\nif 3 * var3 % 2 == (var0 + var1 + var2) % 2:\n\tprint((3 * var3 - (var0 + var1 + var2)) // 2)\nelse:\n\tprint((3 * (var3 + 1) - (var0 + var1 + var2)) // 2)"
    }
  },
  {
    "p_name": "p04001",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = len(var0)\nvar2 = 0\nfor i in range(1 << var1 - 1):\n\tvar3 = ''\n\tvar4 = format(i, 'var4').zfill(var1 - 1)\n\tfor j in range(len(var4)):\n\t\tvar3 += var0[j]\n\t\tif var4[j] == '1':\n\t\t\tvar3 += '+'\n\tvar3 += var0[-1]\n\tvar5 = sum(map(int, var3.split('+')))\n\tvar2 += var5\nprint(var2)",
      "fixed_code": "var0 = input()\nvar1 = len(var0)\nvar2 = 0\nif var1 == 1:\n\tprint(int(var0))\nelse:\n\tfor i in range(1 << var1 - 1):\n\t\tvar3 = ''\n\t\tvar4 = format(i, 'var4').zfill(var1 - 1)\n\t\tfor j in range(len(var4)):\n\t\t\tvar3 += var0[j]\n\t\t\tif var4[j] == '1':\n\t\t\t\tvar3 += '+'\n\t\tvar3 += var0[-1]\n\t\tvar5 = sum(map(int, var3.split('+')))\n\t\tvar2 += var5\n\tprint(var2)"
    }
  },
  {
    "p_name": "p02606",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = int((var1 - var0 + 1) / var2)\nprint(var3)",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar4 = 0\nfor i in range(var0, var1 + 1):\n\tif i % var2 == 0:\n\t\tvar4 += 1\nprint(var4)"
    }
  },
  {
    "p_name": "p03106",
    "code": {
      "buggy_code": "import math\nvar0, var1, var2 = map(int, input().split())\nvar3 = math.gcd(var0, var1)\nvar4 = []\nfor j in range(1, var3 + 1):\n\tif var3 % j == 0:\n\t\tvar4.append(j)\nprint(var4[var2 - 1])",
      "fixed_code": "import math\nvar0, var1, var2 = map(int, input().split())\nvar3 = math.gcd(var0, var1)\nvar4 = []\nfor j in range(1, var3 + 1):\n\tif var3 % j == 0:\n\t\tvar4.append(j)\nlist.sort(var4, var5=True)\nprint(var4[var2 - 1])"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = dict([(i, set()) for i in range(1, var0 + 1)])\nfor i in range(var1):\n\tvar3, var4 = map(int, input().split())\n\tvar2[var3].add(var4)\nvar5 = 1\nvar6 = ''\nfor i in range(1, var0 + 1):\n\tif len(var2[i]) > 1:\n\t\tvar5 = 0\n\t\tbreak\n\telif len(var2[i]) == 1:\n\t\tvar7 = str(list(var2[i])[0])\n\t\tif var7 == '0' and i == 1:\n\t\t\tif var0 == 1:\n\t\t\t\tvar6 = '0'\n\t\t\telse:\n\t\t\t\tvar5 = 0\n\t\t\t\tbreak\n\t\telse:\n\t\t\tvar6 += var7\n\telif len(var2[i]) == 0:\n\t\tvar6 += '1' if i == 1 else '0'\n\telse:\n\t\tprint('PROBLEMS!')\nif var5:\n\tprint(var6)\nelse:\n\tprint(-1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = dict([(i, set()) for i in range(1, var0 + 1)])\nfor i in range(var1):\n\tvar3, var4 = map(int, input().split())\n\tvar2[var3].add(var4)\nvar5 = 1\nvar6 = ''\nfor i in range(1, var0 + 1):\n\tif len(var2[i]) > 1:\n\t\tvar5 = 0\n\t\tbreak\n\telif len(var2[i]) == 1:\n\t\tvar7 = str(list(var2[i])[0])\n\t\tif var7 == '0' and i == 1:\n\t\t\tif var0 == 1:\n\t\t\t\tvar6 = '0'\n\t\t\telse:\n\t\t\t\tvar5 = 0\n\t\t\t\tbreak\n\t\telse:\n\t\t\tvar6 += var7\n\telif len(var2[i]) == 0:\n\t\tvar6 += '1' if i == 1 else '0'\n\telse:\n\t\tprint('PROBLEMS!')\nif var5:\n\tif var0 == 1 and var1 == 0:\n\t\tprint(0)\n\telse:\n\t\tprint(var6)\nelse:\n\tprint(-1)"
    }
  },
  {
    "p_name": "p03469",
    "code": {
      "buggy_code": "str = input()\nstr[3] == '8'\nprint(str)",
      "fixed_code": "str = input()\nprint(str.replace('7', '8', 1))"
    }
  },
  {
    "p_name": "p02646",
    "code": {
      "buggy_code": "import sys\nvar0 = sys.stdin.buffer.var0\nvar1 = sys.stdin.buffer.var1\nvar2 = sys.stdin.buffer.var2\nvar3, var4 = map(int, var1().split())\nvar5, var6 = map(int, var1().split())\nvar7 = int(var1())\nif var6 >= var4:\n\tprint('NO')\n\tsys.exit()\nif abs(var3 - var5) // (var4 - var6) <= var7:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "import sys\nvar0 = sys.stdin.buffer.var0\nvar1 = sys.stdin.buffer.var1\nvar2 = sys.stdin.buffer.var2\nvar3, var4 = map(int, var1().split())\nvar5, var6 = map(int, var1().split())\nvar7 = int(var1())\nif var6 >= var4:\n\tprint('NO')\n\tsys.exit()\nif abs(var3 - var5) / (var4 - var6) <= var7:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p02725",
    "code": {
      "buggy_code": "k, var0 = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = [''] * var0\nfor i in range(var0 - 1):\n\tvar2[i] = var1[i + 1] - var1[i]\nvar2[var0 - 1] = k + var1[0] - var1[var0 - 1]\nvar2.sort()\nprint(var2[var0 - 1])",
      "fixed_code": "k, var0 = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = [''] * var0\nfor i in range(var0 - 1):\n\tvar2[i] = var1[i + 1] - var1[i]\nvar2[var0 - 1] = k + var1[0] - var1[var0 - 1]\nvar2.sort()\nprint(k - var2[var0 - 1])"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "import math\nvar0, var1 = list(map(float, input().split()))\nvar2 = var0 * var1\nvar3 = math.floor(var2)\nprint(var3)",
      "fixed_code": "import math\nvar0, var1 = list(input().split())\nvar0 = int(var0)\nvar1 = var1.replace('.', '').ljust(3, '0')\nvar1 = int(var1)\nvar4 = var0 * var1\nvar4 = str(var4)\nvar4 = var4[0:-2]\nvar4 = 0 if var4 == '' else var4\nprint(var4)"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = []\nfor var3 in range(var1):\n\tvar2.append(list(map(int, input().split())))\nfor i in range(var1):\n\tfor j in range(i):\n\t\tif var2[i][0] == var2[j][0] and var2[i][1] != var2[j][1]:\n\t\t\tprint(-1)\n\t\t\texit()\nfor i in range(var1):\n\tif var2[i][1] == 0:\n\t\tprint(-1)\n\t\texit()\nvar4 = [0] * var0\nfor i in range(var1):\n\tvar4[var0 - var2[i][0]] = var2[i][1]\nif var4[0] == 0:\n\tvar4[0] = 1\nfor i in range(var0):\n\tvar4[i] = str(var4[i])\nprint(''.join(var4))",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = []\nfor var3 in range(var1):\n\tvar2.append(list(map(int, input().split())))\nfor i in range(var1):\n\tfor j in range(i):\n\t\tif var2[i][0] == var2[j][0] and var2[i][1] != var2[j][1]:\n\t\t\tprint(-1)\n\t\t\texit()\nfor i in range(var1):\n\tif var0 == var1 == 1:\n\t\tbreak\n\tif var2[i][1] == 0 and var2[i][0] == 1:\n\t\tprint(-1)\n\t\texit()\nvar4 = [0] * var0\nfor i in range(var1):\n\tvar4[var2[i][0] - 1] = var2[i][1]\nif var4[0] == 0 and var0 >= 2:\n\tvar4[0] = 1\nfor i in range(var0):\n\tvar4[i] = str(var4[i])\nprint(''.join(var4))"
    }
  },
  {
    "p_name": "p03289",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 0\nfor i in range(len(var0)):\n\tif var0[i] == 'A':\n\t\tif i != 0:\n\t\t\tprint('WA')\n\t\t\texit()\n\telif var0[i] == 'C':\n\t\tif 2 <= i <= len(var0) - 2:\n\t\t\tvar1 += 1\n\t\t\tif var1 >= 2:\n\t\t\t\tprint('WA')\n\t\t\t\texit()\n\t\telse:\n\t\t\tprint('WA')\n\t\t\texit()\n\telif not var0[i].islower():\n\t\tprint('WA')\n\t\texit()\nprint('AC') if var1 == 1 else print('WA')",
      "fixed_code": "var0 = input()\nvar1 = 0\nfor i in range(len(var0)):\n\tif i == 0:\n\t\tif var0[i] != 'A':\n\t\t\tprint('WA')\n\t\t\texit()\n\telif var0[i] == 'A':\n\t\tif i != 0:\n\t\t\tprint('WA')\n\t\t\texit()\n\telif var0[i] == 'C':\n\t\tif 2 <= i <= len(var0) - 2:\n\t\t\tvar1 += 1\n\t\t\tif var1 >= 2:\n\t\t\t\tprint('WA')\n\t\t\t\texit()\n\t\telse:\n\t\t\tprint('WA')\n\t\t\texit()\n\telif not var0[i].islower():\n\t\tprint('WA')\n\t\texit()\nprint('AC') if var1 == 1 else print('WA')"
    }
  },
  {
    "p_name": "p03471",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nfor i in range(var0):\n\tfor j in range(var0):\n\t\tif (var0 - i - j) * 10000 + i * 5000 + j * 1000 == var1:\n\t\t\tprint(var0 - i - j, i, j)\n\t\t\texit()\nprint(-1, -1, -1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nfor i in range(var0 + 1):\n\tfor j in range(var0 + 1):\n\t\tif (var0 - i - j) * 10000 + i * 5000 + j * 1000 == var1:\n\t\t\tif var0 - i - j < 0:\n\t\t\t\tcontinue\n\t\t\tprint(var0 - i - j, i, j)\n\t\t\texit()\nprint(-1, -1, -1)"
    }
  },
  {
    "p_name": "p02613",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = {'AC': 0, 'WA': 0, 'TLE': 0, 'RE': 0}\nfor i in range(var0):\n\tvar2 = input()\n\tvar1[var2] += 1\nvar3 = list(var1.keys())\nvar4 = list(var1.values())\nfor i in range(4):\n\tprint(var3[i], '×', var4[i])",
      "fixed_code": "var0 = int(input())\nvar1 = {'AC': 0, 'WA': 0, 'TLE': 0, 'RE': 0}\nfor i in range(var0):\n\tvar2 = input()\n\tvar1[var2] += 1\nfor var5 in var1.keys():\n\tprint(var5, 'x', var1[var5])"
    }
  },
  {
    "p_name": "p02693",
    "code": {
      "buggy_code": "k = int(input())\nvar0, var1 = map(int, input().split())\nif int(var0 / k) * k + k <= var1:\n\tprint('OK')\nelse:\n\tprint('NG')",
      "fixed_code": "k = int(input())\nvar0, var1 = map(int, input().split())\nif int(var0 / k) * k + k <= var1 or var0 % k == 0:\n\tprint('OK')\nelse:\n\tprint('NG')"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = []\ni = 0\nwhile i < 4096 and var0 + i <= var1:\n\tvar2.append((var0 + i) % 2019)\n\ti += 1\nvar3 = var2.pop(var2.index(min(var2)))\nprint(var3 * min(var2))",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = []\ni = 0\nwhile i < 1000 and var0 + i <= var1:\n\tvar2.append((var0 + i) % 2019)\n\ti += 1\nvar2.sort()\nvar4 = 10 ** 6\nfor i in range(len(var2)):\n\tfor j in range(i + 1, len(var2)):\n\t\tvar4 = min(var4, var2[i] * var2[j] % 2019)\nprint(var4)"
    }
  },
  {
    "p_name": "p03042",
    "code": {
      "buggy_code": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nvar0 = lambda: list(map(int, input().split()))\n\ndef method0():\n\tvar1 = input()\n\tvar2 = lambda var3: int(var3) > 0 and int(var3) <= 12\n\tif var2(var1[:2]) and int(var1[2:]) > 12:\n\t\tprint('MMYY')\n\telif int(var1[:2]) > 12 and var2(var1[2:]):\n\t\tprint('YYMM')\n\telif var2(var1[:2]) and var2(var1[2:]):\n\t\tprint('AMBIGUOUS')\n\telse:\n\t\tprint('NA')\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nvar0 = lambda: list(map(int, input().split()))\n\ndef method0():\n\tvar1 = input()\n\tvar2 = lambda var3: int(var3) > 0 and int(var3) <= 12\n\tvar4 = lambda var3: int(var3) > 12 or int(var3) == 0\n\tif var2(var1[:2]) and var4(var1[2:]):\n\t\tprint('MMYY')\n\telif var4(var1[:2]) and var2(var1[2:]):\n\t\tprint('YYMM')\n\telif var2(var1[:2]) and var2(var1[2:]):\n\t\tprint('AMBIGUOUS')\n\telse:\n\t\tprint('NA')\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p03835",
    "code": {
      "buggy_code": "k, var0 = map(int, input().split())\nvar1 = 0\nfor var2 in range(k + 1):\n\tfor var3 in range(var2, k + 1):\n\t\tfor var4 in range(var3, k + 1):\n\t\t\tif var2 + var3 + var4 == var0:\n\t\t\t\tif var2 == var3 and var3 == var4:\n\t\t\t\t\tvar1 += 1\n\t\t\t\telse:\n\t\t\t\t\tvar1 += 3\nprint(var1)",
      "fixed_code": "k, var0 = map(int, input().split())\nvar1 = 0\nfor var2 in range(k + 1):\n\tfor var3 in range(k + 1):\n\t\tvar4 = var0 - var2 - var3\n\t\tif var4 >= 0 and var4 <= k:\n\t\t\tvar1 += 1\nprint(var1)"
    }
  },
  {
    "p_name": "p02719",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split()))\nif var0 < var1 or var1 == 0:\n\tprint(var0)\nelse:\n\tvar2 = var0 % var1\n\tif var2 == 0:\n\t\tprint('0')\n\telse:\n\t\tprint(abs(var1 - var2))",
      "fixed_code": "var3, var4 = map(int, input().split())\nvar5 = var3 % var4\nvar6 = var4 - var5\nif var5 > var6:\n\tprint(var6)\nelse:\n\tprint(var5)"
    }
  },
  {
    "p_name": "p02987",
    "code": {
      "buggy_code": "var0 = list(input())\nif len(set(var0)) != 2:\n\tprint('NO')\nelif var0.count(var0[0]) == 2:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0 = list(input())\nif len(set(var0)) != 2:\n\tprint('No')\nelif var0.count(var0[0]) == 2:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "from math import sqrt\nvar0, var1, var2 = map(int, input().split())\nprint('Yes' if sqrt(var0) + sqrt(var1) < sqrt(var2) else 'No')\nvar0 + var1 - var2 < -2 * sqrt(var0 * var1)",
      "fixed_code": "from math import sqrt\nvar0, var1, var2 = map(int, input().split())\nvar3 = var2 - var0 - var1\nprint('Yes' if var3 > 0 and var3 ** 2 > 4 * var0 * var1 else 'No')"
    }
  },
  {
    "p_name": "p02688",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = [0 for i in range(var0)]\nfor i in range(var1):\n\tvar3 = int(input())\n\tvar4 = list(map(int, input().split()))\n\tfor j in range(var3):\n\t\tvar2[var4[j] - 1] += 1\nfor i in range(var0):\n\tif var2[i] == 0:\n\t\tprint(i + 1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar5 = [0] * var0\nfor i in range(var1):\n\tvar3 = int(input())\n\tvar4 = list(map(int, input().split()))\n\tfor j in range(var3):\n\t\tvar5[var4[j] - 1] += 1\nprint(var5.count(0))"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = int(var0[0])\nvar2 = int(var0[2])\nif var2 == 1:\n\tprint(1)\nelse:\n\tvar3 = (var1 * var2 + 1) / 2 if var1 % 2 != 0 and var2 % 2 != 0 else var1 * var2 / 2\n\tprint(int(var3))",
      "fixed_code": "var0 = input()\nvar0 = var0.split()\nvar1 = int(var0[0])\nvar2 = int(var0[1])\nif var2 == 1 or var1 == 1:\n\tprint(1)\nelse:\n\tvar3 = (var1 * var2 + 1) / 2 if var1 % 2 != 0 and var2 % 2 != 0 else var1 * var2 / 2\n\tprint(int(var3))"
    }
  },
  {
    "p_name": "p02767",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar1 = sorted(var1)\nk = 10 ** 6\nfor i in range(var1[0], (var1[-1] + 1) // 2 + 1):\n\tvar2 = 0\n\tfor var3 in var1:\n\t\tvar2 += (i - var3) ** 2\n\tk = min(k, var2)\nprint(k)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar1 = sorted(var1)\nk = 10 ** 6\nfor i in range(var1[0], var1[-1] + 1):\n\tvar2 = 0\n\tfor var3 in var1:\n\t\tvar2 += (i - var3) ** 2\n\tk = min(k, var2)\nprint(k)"
    }
  },
  {
    "p_name": "p03625",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = int(input())\n\tvar1 = list(map(int, input().split()))\n\tvar2 = sorted(var1, var3=True)\n\tvar4 = set(var2)\n\tvar5 = 0\n\tfor var6 in var4:\n\t\tif var2.count(var6) >= 2:\n\t\t\tif var5 == 0:\n\t\t\t\tvar5 = var6\n\t\t\t\tif var2.count(var6) >= 4:\n\t\t\t\t\tprint(var6 * var6)\n\t\t\t\t\texit()\n\t\t\telse:\n\t\t\t\tprint(var5 * var6)\n\t\t\t\texit()\n\tprint(0)\nmethod0()",
      "fixed_code": "import collections\n\ndef method0():\n\tvar0 = int(input())\n\tvar1 = list(map(int, input().split()))\n\tvar7 = collections.Counter(var1)\n\tvar8 = []\n\tfor k, var9 in var7.items():\n\t\tif var9 >= 2:\n\t\t\tvar8.append(k)\n\t\tif var9 >= 4:\n\t\t\tvar8.append(k)\n\tif len(var8) < 2:\n\t\tprint(0)\n\telse:\n\t\tvar8.sort()\n\t\tprint(var8[-1] * var8[-2])\nmethod0()"
    }
  },
  {
    "p_name": "p02947",
    "code": {
      "buggy_code": "from collections import Counter\nfrom numpy import cumsum\nvar0 = int(input())\ninput = [input() for i in range(var0)]\nvar1 = 0\nvar2 = [sorted(Counter(var3).elements()) for var3 in input]\nvar4 = [''.join(var3) for var3 in var2]\nvar5 = list(Counter(var4).values())\nfor var6 in var5:\n\tvar1 += cumsum(var6)\nprint(var1)",
      "fixed_code": "from collections import Counter\nvar0 = int(input())\ninput = [input() for i in range(var0)]\nvar1 = 0\nvar2 = [sorted(Counter(var3).elements()) for var3 in input]\nvar4 = [''.join(var3) for var3 in var2]\nvar5 = list(Counter(var4).values())\nfor var6 in var5:\n\tvar1 += sum((var7 for var7 in range(1, var6)))\nprint(var1)"
    }
  },
  {
    "p_name": "p03281",
    "code": {
      "buggy_code": "def method0(var0):\n\tvar1 = 0\n\tfor i in range(1, var0 + 1):\n\t\tif var0 % i == 0:\n\t\t\tvar1 += 1\n\treturn var1\nvar2 = int(input())\nvar1 = 0\nfor i in range(1, var2 + 1, 2):\n\tif method0(i) == 8:\n\t\tprint(i)\n\t\tvar1 += 1\nprint(var1)",
      "fixed_code": "def method0(var0):\n\tvar1 = 0\n\tfor i in range(1, var0 + 1):\n\t\tif var0 % i == 0:\n\t\t\tvar1 += 1\n\treturn var1\nvar2 = int(input())\nvar1 = 0\nfor i in range(1, var2 + 1, 2):\n\tif method0(i) == 8:\n\t\tvar1 += 1\nprint(var1)"
    }
  },
  {
    "p_name": "p03037",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = []\nvar3 = []\nfor var4 in range(var1):\n\tvar5, var6 = map(int, input().split())\n\tvar2.append(var5)\n\tvar3.append(var6)\nprint(min(var3) - max(var2) + 1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = []\nvar3 = []\nfor var4 in range(var1):\n\tvar5, var6 = map(int, input().split())\n\tvar2.append(var5)\n\tvar3.append(var6)\nprint(max(min(var3) - max(var2) + 1, 0))"
    }
  },
  {
    "p_name": "p03324",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nprint(var1 * 100 ** var0)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var1 == 100:\n\tprint(100 ** var0 * 101)\nelse:\n\tprint(100 ** var0 * var1)"
    }
  },
  {
    "p_name": "p03611",
    "code": {
      "buggy_code": "input()\nvar0 = sorted(map(int, input().split()))\nfrom bisect import *\nvar1 = 1\nfor i in range(var0[0], var0[-1]):\n\tvar1 = max(var1, bisect(var0, i + 1) - bisect_left(var0, i - 1))\nprint(var1)",
      "fixed_code": "input()\nvar0 = sorted(map(int, input().split()))\nfrom bisect import *\nvar1 = 0\nfor i in range(var0[0], var0[-1] + 1):\n\tvar1 = max(var1, bisect(var0, i + 1) - bisect_left(var0, i - 1))\nprint(var1)"
    }
  },
  {
    "p_name": "p02958",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [i for i in range(1, var0 + 1)]\nvar2 = list(map(int, input().split()))\nvar3 = 0\nfor j in range(var0):\n\tif var1[j] != var2[j]:\n\t\tvar3 += 1\nprint('YES' if var3 == 2 else 'NO')",
      "fixed_code": "var0 = int(input())\nvar1 = [i for i in range(1, var0 + 1)]\nvar2 = list(map(int, input().split()))\nvar3 = 0\nfor j in range(var0):\n\tif var1[j] != var2[j]:\n\t\tvar3 += 1\nprint('YES' if var3 == 2 or var3 == 0 else 'NO')"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "import math\nvar0, var1 = open(0).read().split()\nvar0 = int(var0)\nvar1 = float(var1)\nprint(math.floor(var0 * var1))",
      "fixed_code": "var0, var1 = open(0).read().split()\nvar0 = int(var0)\nvar1 = int(var1.replace('.', ''))\nprint(var0 * var1 // 100)"
    }
  },
  {
    "p_name": "p03456",
    "code": {
      "buggy_code": "import math\nvar0, var1 = input().split()\nvar2 = int(var0 + var1)\nif math.sqrt(var2).is_integer == True:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "import math\nvar0, var1 = input().split()\nvar2 = int(var0 + var1)\nif math.sqrt(var2).is_integer() == True:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03086",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = ['A', 'C', 'G', 'T']\nvar2 = 0\nvar3 = 0\nfor i in range(len(var0)):\n\tif var0[i] in var1:\n\t\tvar3 += 1\n\telse:\n\t\tvar2 = max(var2, var3)\n\t\tvar3 = 0\nprint(var2)",
      "fixed_code": "var0 = input()\nvar1 = ['A', 'C', 'G', 'T']\nvar2 = 0\nvar3 = 0\nfor i in range(len(var0)):\n\tif var0[i] in var1:\n\t\tvar3 += 1\n\telse:\n\t\tvar2 = max(var2, var3)\n\t\tvar3 = 0\nvar2 = max(var2, var3)\nprint(var2)"
    }
  },
  {
    "p_name": "p03838",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = abs(var1) - abs(var0)\nif var2 > 0:\n\tif var0 < 0 and var1 < 0:\n\t\tvar2 += 2\n\telif var0 * var1 < 0:\n\t\tvar2 += 1\nelif var2 < 0:\n\tif var0 > 0 and var1 > 0:\n\t\tvar2 = abs(var2) + 2\n\telif var0 * var1 < 0:\n\t\tvar2 = abs(var2) + 1\n\telse:\n\t\tvar2 = abs(var2)\nelse:\n\tvar2 += 1\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = abs(var1) - abs(var0)\nif var0 * var1 < 0:\n\tvar2 = abs(var2) + 1\nif var0 * var1 == 0:\n\tif var0 < var1:\n\t\tvar2 = var1 - var0\n\telif var0 > var1:\n\t\tvar2 = abs(var2) + 1\nelif var2 > 0:\n\tif var0 < 0 and var1 < 0:\n\t\tvar2 += 2\nelif var2 < 0:\n\tif var0 > 0 and var1 > 0:\n\t\tvar2 = abs(var2) + 2\n\telse:\n\t\tvar2 = abs(var2)\nprint(var2)"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar1.sort()\nvar2 = 1\nfor i in range(var0):\n\tvar3 = var1[i]\n\tvar2 *= var3\n\tif var2 <= 0:\n\t\tbreak\n\telif var2 > 10 ** 18:\n\t\tvar2 = -1\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar1.sort()\nvar2 = 1\nvar4 = 10 ** 18\nfor i in range(var0):\n\tvar3 = var1[i]\n\tvar2 *= var3\n\tif var2 > var4:\n\t\tvar2 = -1\n\t\tbreak\n\telif var2 == 0:\n\t\tbreak\nprint(var2)"
    }
  },
  {
    "p_name": "p03317",
    "code": {
      "buggy_code": "var0, k = map(int, input().split())\nprint((var0 + k - 2) // (k - 1))",
      "fixed_code": "import math\nvar0, k = map(int, input().split())\nvar1 = list(map(int, input().split()))\nprint(int(math.ceil((len(var1) - k) / (k - 1))) + 1)"
    }
  },
  {
    "p_name": "p02952",
    "code": {
      "buggy_code": "var0, = [list(map(int, s.split())) for s in open(0)][0]\nvar1 = 0\nvar2 = len(str(var0))\nif var2 == 1:\n\tvar1 += var0\nelse:\n\tif var2 % 2 != 0:\n\t\tvar1 += var0 % 10 ** (var2 - 1) + 1\n\tfor i in range(3, var2, 2):\n\t\tvar1 += 10 ** i - 10 ** (i - 1)\n\tvar1 += 9\nprint(int(var1))",
      "fixed_code": "var0, = [list(map(int, s.split())) for s in open(0)][0]\nvar1 = 0\nvar2 = len(str(var0))\nif var2 == 1:\n\tvar1 += var0\nelse:\n\tif var2 % 2 != 0:\n\t\tvar1 += var0 - 10 ** (var2 - 1) + 1\n\tfor i in range(3, var2, 2):\n\t\tvar1 += 10 ** i - 10 ** (i - 1)\n\tvar1 += 9\nprint(int(var1))"
    }
  },
  {
    "p_name": "p02731",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nprint(math.ceil(var0 / 3) * math.ceil(var0 / 3) * (var0 - math.ceil(var0 / 3) - math.ceil(var0 / 3)))",
      "fixed_code": "var0 = int(input())\nprint('{:.10f}'.format((var0 / 3) ** 3))"
    }
  },
  {
    "p_name": "p02881",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nvar1 = 0\nvar2 = 0\nvar3 = math.sqrt(var0)\nvar3 = math.ceil(var3)\nvar4 = []\nfor i in range(1, var3):\n\tif var0 % i == 0:\n\t\tvar4.append(i)\nvar1 = max(var4)\nvar2 = var0 / var1\nprint(int(var1 + var2 - 2))",
      "fixed_code": "import math\nvar5 = int(input())\nvar6 = []\nvar7 = math.ceil(math.sqrt(var5))\nfor i in range(var7):\n\tif var5 % (i + 1) == 0:\n\t\tvar6.append(i + 1)\nvar1 = max(var6)\nvar2 = round(var5 / var1)\nvar8 = var1 + var2 - 2\nprint(var8)"
    }
  },
  {
    "p_name": "p03309",
    "code": {
      "buggy_code": "import sys\nvar0 = sys.stdin.readline\n\ndef method0():\n\treturn list(map(int, var0().split()))\n\ndef method1():\n\treturn int(var0())\nvar1 = method1()\nvar2 = method0()\nvar3 = [var4 - i for var4, i in zip(var2, range(1, var1 + 1))]\nvar5 = sum(var3) // var1\nvar6 = 0\nvar7 = 0\nfor var8 in var3:\n\tvar6 += abs(var8 - var5)\n\tvar7 += abs(var8 - var5 - 1)\nprint(min(var6, var7))",
      "fixed_code": "import sys\nvar0 = sys.stdin.readline\n\ndef method0():\n\treturn var12(map(int, var0().split()))\n\ndef method1():\n\treturn int(var0())\n\nclass var9:\n\n\tdef method2(var10, var11: var12):\n\t\t\n\t\tfrom itertools import accumulate\n\t\tvar10.ls_accum = [0] + var12(accumulate(var11))\n\n\tdef method3(var10, i, j):\n\t\treturn var10.ls_accum[j] - var10.ls_accum[i]\nvar1 = method1()\nvar2 = method0()\nif var1 == 1:\n\tprint(0)\n\texit()\nvar3 = [var4 - i for var4, i in zip(var2, range(1, var1 + 1))]\nvar3.sort()\nvar13 = var9(var3)\nvar6 = 10 ** 15\nfor k in range(1, var1):\n\tvar14 = -var13.method3(0, k) + var13.method3(k, var1)\n\tvar15 = min((2 * k - var1) * var3[k - 1], (2 * k - var1) * var3[k])\n\tvar6 = min(var6, var14 + var15)\nprint(var6)"
    }
  },
  {
    "p_name": "p02725",
    "code": {
      "buggy_code": "k, var0 = map(int, input().split())\nvar1 = list(map(int, input().split()))\nfor i in range(var0):\n\tvar2 = (var1[i - 1] - var1[i]) % k\n\tvar3 = (var1[i] - var1[(i + 1) % var0]) % k\n\tvar4 = min(var2, var3)\nprint(var4)",
      "fixed_code": "k, var0 = map(int, input().split())\nvar5 = list(map(int, input().split()))\nvar4 = 10 ** 18\nfor i in range(var0):\n\tvar2 = (var5[i - 1] - var5[i]) % k\n\tvar3 = (var5[i] - var5[(i + 1) % var0]) % k\n\tvar4 = min(var4, var2, var3)\nprint(var4)"
    }
  },
  {
    "p_name": "p03720",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = [[] for i in range(var0)]\nfor i in range(var1):\n\tvar3, var4 = map(int, input().split())\n\tvar3 = var3 - 1\n\tvar4 = var4 - 1\n\tvar2[var3].append(var4)\n\tvar2[var4].append(var3)\nprint(var2)\nfor i in var2:\n\tvar5 = 0\n\tfor j in i:\n\t\tvar5 += 1\n\tprint(var5)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = [[] for i in range(var0)]\nfor i in range(var1):\n\tvar3, var4 = map(int, input().split())\n\tvar3 = var3 - 1\n\tvar4 = var4 - 1\n\tvar2[var3].append(var4)\n\tvar2[var4].append(var3)\nfor i in var2:\n\tvar5 = 0\n\tfor j in i:\n\t\tvar5 += 1\n\tprint(var5)"
    }
  },
  {
    "p_name": "p02993",
    "code": {
      "buggy_code": "var0 = input()\nif var0[0] != var0[1] and var0[1] != var0[2] and (var0[2] != var0[3]):\n\tprint('Bad')\nelse:\n\tprint('Good')",
      "fixed_code": "var0 = input()\nif var0[0] != var0[1] and var0[1] != var0[2] and (var0[2] != var0[3]):\n\tprint('Good')\nelse:\n\tprint('Bad')"
    }
  },
  {
    "p_name": "p02848",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = input()\nvar2 = list()\nfor i in var1:\n\tvar3 = ord(i) + 2\n\tif var3 <= ord('Z'):\n\t\tvar2.append(chr(var3))\n\telse:\n\t\tvar2.append(chr(var3 - (ord('Z') - ord('A')) - 1))\nfor i in var2:\n\tprint(i, var4='')",
      "fixed_code": "var0 = int(input())\nvar1 = input()\nvar2 = list()\nfor i in var1:\n\tvar3 = ord(i) + var0\n\tif var3 <= ord('Z'):\n\t\tvar2.append(chr(var3))\n\telse:\n\t\tvar2.append(chr(var3 - (ord('Z') - ord('A')) - 1))\nfor i in var2:\n\tprint(i, var4='')"
    }
  },
  {
    "p_name": "p03212",
    "code": {
      "buggy_code": "var0 = int(input())\n\ndef method0(var1, var2):\n\tif var1 == 0:\n\t\tif int(var2) <= var0:\n\t\t\treturn 1\n\t\telse:\n\t\t\treturn 0\n\telse:\n\t\treturn method0(var1 - 1, var2 + '0') + method0(var1 - 1, var2 + '3') + method0(var1 - 1, var2 + '5') + method0(var1 - 1, var2 + '7')\nvar1 = len(str(var0))\nvar3 = method0(var1, '')\nprint(var3)",
      "fixed_code": "var0 = int(input())\n\ndef method0(var1, var2):\n\tif var1 == 0:\n\t\tif '0' in str(int(var2)):\n\t\t\treturn 0\n\t\telif '3' in var2 and '5' in var2 and ('7' in var2):\n\t\t\tif int(var2) <= var0:\n\t\t\t\treturn 1\n\t\t\telse:\n\t\t\t\treturn 0\n\t\telse:\n\t\t\treturn 0\n\telse:\n\t\treturn method0(var1 - 1, var2 + '0') + method0(var1 - 1, var2 + '3') + method0(var1 - 1, var2 + '5') + method0(var1 - 1, var2 + '7')\nvar1 = len(str(var0))\nvar3 = method0(var1, '')\nprint(var3)"
    }
  },
  {
    "p_name": "p03838",
    "code": {
      "buggy_code": "def method0():\n\tvar0, var1 = map(int, input().split())\n\tvar2 = abs(abs(var0) - abs(var1))\n\tif var0 < 0 and var1 < 0 and (var0 < var1):\n\t\tvar3 = 0\n\telif var0 < 0 and var1 < 0 and (var0 > var1):\n\t\tvar3 = 2\n\telif var0 >= 0 and var1 >= 0:\n\t\tif var0 < var1:\n\t\t\tvar3 = 0\n\t\telse:\n\t\t\tvar3 = 2\n\telse:\n\t\tvar3 = 1\n\tprint(var2 + var3)\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "def method0():\n\tvar0, var1 = map(int, input().split())\n\tvar2 = abs(abs(var0) - abs(var1))\n\tif var0 * var1 > 0:\n\t\tif var0 < var1:\n\t\t\tvar3 = 0\n\t\telse:\n\t\t\tvar3 = 2\n\telif var0 == 0:\n\t\tif var0 < var1:\n\t\t\tvar3 = 0\n\t\telse:\n\t\t\tvar3 = 1\n\telif var1 == 0:\n\t\tif var0 < var1:\n\t\t\tvar3 = 0\n\t\telse:\n\t\t\tvar3 = 1\n\telse:\n\t\tvar3 = 1\n\tprint(var2 + var3)\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p03072",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 1\nfor i in range(1, var0):\n\tfor j in range(i):\n\t\tvar3 = True\n\t\tif var1[i] < var1[j]:\n\t\t\tvar3 = False\n\tif var3 == True:\n\t\tvar2 += 1\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 1\nfor i in range(1, var0):\n\tvar3 = True\n\tfor j in range(i):\n\t\tif var1[i] < var1[j]:\n\t\t\tvar3 = False\n\tif var3 == True:\n\t\tvar2 += 1\nprint(var2)"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "import math\nvar0, var1, var2 = map(int, input().split())\nif math.sqrt(var0) + math.sqrt(var1) < math.sqrt(var2):\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = var0 * var1\nif var2 - var0 - var1 > 0 and 4 * var0 * var1 < (var2 - var0 - var1) ** 2:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02747",
    "code": {
      "buggy_code": "var0 = input()\nif 'hi' in var0:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = input()\nvar1 = len(var0) // 2\nif var0 == 'hi' * var1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02596",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 1\nvar2 = '7'\nwhile int(var2) % var0 * var1 != 0:\n\tvar2 = '7' * var1\n\tvar1 += 1\n\tif int(var2) >= 10000000.0:\n\t\tprint(-1)\n\t\texit()\nprint(var1 - 1)",
      "fixed_code": "var0 = int(input())\nvar3 = 0\nfor i in range(1, 1000000):\n\tvar3 = var3 * 10 + 7\n\tvar3 = var3 % var0\n\tif var3 == 0:\n\t\tprint(i)\n\t\texit()\nprint(-1)"
    }
  },
  {
    "p_name": "p02582",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 0\nfor i in range(2):\n\tif var0[i] == 'R':\n\t\tvar1 += 1\nprint(var1)",
      "fixed_code": "var0 = input()\nif var0[0] == 'R' and var0[1] == 'R' and (var0[2] == 'R'):\n\tprint(3)\nelif var0[0] == 'R' and var0[1] == 'R':\n\tprint(2)\nelif var0[1] == 'R' and var0[2] == 'R':\n\tprint(2)\nelif var0[0] == 'R' and var0[1] == 'S' and (var0[2] == 'S'):\n\tprint(1)\nelif var0[0] == 'S' and var0[1] == 'R' and (var0[2] == 'S'):\n\tprint(1)\nelif var0[0] == 'S' and var0[1] == 'S' and (var0[2] == 'R'):\n\tprint(1)\nelif var0[0] == 'R' and var0[1] == 'S' and (var0[2] == 'R'):\n\tprint(1)\nelse:\n\tprint(0)"
    }
  },
  {
    "p_name": "p04043",
    "code": {
      "buggy_code": "var0 = list(map(int, input().split()))\nvar0.sort()\nif var0[0] == 5 and var0[1] == 5 and (var0[2] == 7):\n\tprint('yes')\nelse:\n\tprint('no')",
      "fixed_code": "var0 = list(map(int, input().split()))\nvar0.sort()\nif var0[0] == 5 and var0[1] == 5 and (var0[2] == 7):\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p03289",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 0\nfor i in range(len(var0)):\n\tif var0[i].isupper():\n\t\tvar1 += 1\nif var0[0] == 'A' and var0[2:-2].count('C') == 1 and (var1 == 2):\n\tprint('AC')\nelse:\n\tprint('WA')",
      "fixed_code": "var0 = input()\nvar1 = 0\nfor i in range(len(var0)):\n\tif var0[i].isupper():\n\t\tvar1 += 1\nif var0[0] == 'A' and var0[2:-1].count('C') == 1 and (var1 == 2):\n\tprint('AC')\nelse:\n\tprint('WA')"
    }
  },
  {
    "p_name": "p03284",
    "code": {
      "buggy_code": "var0 = input().split()\nvar1 = int(var0[0])\nvar2 = int(var0[1])\nif var1 >= var2:\n\tprint(var1 - var2 * (var1 // var2))\nelse:\n\tprint(1)",
      "fixed_code": "var0 = input().split()\nvar1 = int(var0[0])\nvar2 = int(var0[1])\nif var1 >= var2 and var1 % var2 == 0:\n\tprint(0)\nelse:\n\tprint(1)"
    }
  },
  {
    "p_name": "p03486",
    "code": {
      "buggy_code": "from functools import reduce\nvar0 = input()\nvar1 = input()\nvar2 = [var3 for var3 in var0]\nvar4 = [var3 for var3 in var1]\nvar2.sort()\nvar4.sort(var5=True)\nvar6 = reduce(lambda var7, var8: var7 + var8, var2, '')\nvar9 = reduce(lambda var7, var8: var7 + var8, var4)\nprint((var6, var9))\nprint('Yes' if var6 < var9 else 'No')",
      "fixed_code": "from functools import reduce\nvar0 = input()\nvar1 = input()\nvar2 = [var3 for var3 in var0]\nvar4 = [var3 for var3 in var1]\nvar2.sort()\nvar4.sort(var5=True)\nvar6 = reduce(lambda var7, var8: var7 + var8, var2, '')\nvar9 = reduce(lambda var7, var8: var7 + var8, var4)\nprint('Yes' if var6 < var9 else 'No')"
    }
  },
  {
    "p_name": "p03799",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nk = (2 * var1 - var0) // 6\nprint(var0 + k)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nk = min(var0, var1 // 2)\nvar2 += k\nvar1 -= 2 * k\nvar2 += var1 // 4\nprint(var2)"
    }
  },
  {
    "p_name": "p02754",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nprint(var0 // (var1 + var2) * var1 + min(var1, (var0 - var0 // (var1 + var2) * (var1 + var2)) % var1) if var1 != 0 else '0')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nif var1 == 0:\n\tprint(0)\n\texit(0)\nvar3 = var0 // (var1 + var2)\nvar4 = var0 - var3 * (var1 + var2)\nvar5 = var3 * var1 + (var1 if var4 >= var1 else var4 % var1)\nprint(var5)"
    }
  },
  {
    "p_name": "p03001",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = var0 * var1 / 2\nif var2 == var0 // 2 and var3 == var1 // 2:\n\tvar5 = 1\nelse:\n\tvar5 = 0\nprint('{} {}'.format(var4, var5))",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = var0 * var1 / 2\nif var2 == var0 / 2 and var3 == var1 / 2:\n\tvar5 = 1\nelse:\n\tvar5 = 0\nprint('{} {}'.format(var4, var5))"
    }
  },
  {
    "p_name": "p02719",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\n\ndef method0(var0, var1):\n\tif var1 == 1:\n\t\treturn 0\n\telif var0 < var1:\n\t\treturn var0\n\telse:\n\t\tvar0 = var0 % var1\n\t\tif abs(var0 - var1) <= var1:\n\t\t\tvar0 = abs(var0 - var1)\n\treturn\nprint(method0(var0, var1))",
      "fixed_code": "var0, var1 = map(int, input().split())\n\ndef method0(var0, var1):\n\tvar2 = var0 % var1\n\treturn min(var2, abs(var2 - var1))\nprint(method0(var0, var1))"
    }
  },
  {
    "p_name": "p03352",
    "code": {
      "buggy_code": "var0 = int(input())\nprint(int(var0 ** 0.5) ** 2)",
      "fixed_code": "var0 = int(input())\nvar1 = 0\nfor i in range(1, 1000):\n\tfor j in range(2, 10):\n\t\tif i ** j <= var0:\n\t\t\tvar1 = max(i ** j, var1)\nprint(var1)"
    }
  },
  {
    "p_name": "p03086",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 0\nvar2 = 0\nfor i in var0:\n\tif i == 'A' or i == 'T' or i == 'G' or (i == 'C'):\n\t\tvar2 += 1\n\telif var2 > var1:\n\t\tvar1 = var2\n\t\tvar2 = 0\nprint(var1)",
      "fixed_code": "var0 = input()\nvar1 = 0\nvar2 = 0\nfor i in var0:\n\tif i == 'A' or i == 'T' or i == 'G' or (i == 'C'):\n\t\tvar2 += 1\n\telif var2 > var1:\n\t\tvar1 = var2\n\t\tvar2 = 0\nif var2 > var1:\n\tvar1 = var2\nprint(var1)"
    }
  },
  {
    "p_name": "p03555",
    "code": {
      "buggy_code": "var0 = input().split()\nvar1 = input().split()\nvar1.reverse()\nif var0 == var1:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var2, var3 = (list(input()), list(input()))\nif var2[0] == var3[2] and var2[1] == var3[1] and (var2[2] == var3[0]):\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p02595",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar1 = var1 ** 2\nvar2 = 0\nfor i in range(var0):\n\tvar3, var4 = map(int, input().split())\n\tif var3 ** 2 + var4 ** 2 < var1:\n\t\tvar2 += 1\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar1 = var1 ** 2\nvar2 = 0\nfor i in range(var0):\n\tvar3, var4 = map(int, input().split())\n\tif var3 ** 2 + var4 ** 2 <= var1:\n\t\tvar2 += 1\nprint(var2)"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = var0 % 2019\nvar3 = var1 % 2019\nvar4 = var0 // 2019\nvar5 = var1 // 2019\nif var4 == var5:\n\tprint(var2 * (var2 + 1))\nelse:\n\tprint(0)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar4 = var0 // 2019\nvar5 = var1 // 2019\nvar6 = 2019\nif var4 == var5:\n\tfor i in range(var0, var1):\n\t\tfor j in range(i + 1, var1 + 1):\n\t\t\tif var6 > i * j % 2019:\n\t\t\t\tvar6 = i * j % 2019\n\t\t\tif i * j % 2019 == 0:\n\t\t\t\tprint(0)\n\t\t\t\texit()\n\tprint(var6)\nelse:\n\tprint(0)"
    }
  },
  {
    "p_name": "p03328",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = [int(i * (i + 1) / 2) for i in range(1, 1000)]\ni = 0\nwhile var2[i] < var0:\n\ti += 1\nprint(var2[i] - var0)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = [int(i * (i + 1) / 2) for i in range(1, 1000)]\nprint(var2[var1 - var0 - 1] - var1)"
    }
  },
  {
    "p_name": "p02891",
    "code": {
      "buggy_code": "def method0(var0, k, var1=None):\n\tvar2 = 0\n\tfor var3 in range(k):\n\t\tfor var4 in var0:\n\t\t\tif var4 == var1:\n\t\t\t\tvar2 += 1\n\t\t\t\tvar1 = None\n\t\t\telse:\n\t\t\t\tvar1 = var4\n\treturn var2\nif __name__ == '__main__':\n\tvar0 = input()\n\tk = int(input())\n\tif k <= 3:\n\t\tprint(method0(var0, k))\n\telse:\n\t\tvar5 = method0(var0, 3)\n\t\tvar6, var7 = divmod(k, 3)\n\t\tvar8 = var5 * var6\n\t\tif var7:\n\t\t\tvar8 += method0(var0, var7, var0[-1])\n\t\telif var0[0] == var0[-1]:\n\t\t\tvar8 += var6 - 1\n\t\tprint(var8)",
      "fixed_code": "def method0(var0, k, var1=None):\n\tvar2 = 0\n\tfor var3 in range(k):\n\t\tfor var4 in var0:\n\t\t\tif var4 == var1:\n\t\t\t\tvar2 += 1\n\t\t\t\tvar1 = None\n\t\t\telse:\n\t\t\t\tvar1 = var4\n\treturn (var2, var1)\nif __name__ == '__main__':\n\tvar0 = input()\n\tk = int(input())\n\tif len(set(var0)) == 1:\n\t\tprint(len(var0) * k // 2)\n\t\texit()\n\tif k <= 10 ** 8:\n\t\tprint(method0(var0, k)[0])\n\telse:\n\t\tvar5, var1 = method0(var0, 3)\n\t\tvar6, var7 = divmod(k, 3)\n\t\tvar8 = var5 * var6\n\t\tif var7:\n\t\t\tvar8 += method0(var0, var7, var1)[0]\n\t\telif var0[0] == var1:\n\t\t\tvar8 += var6 - 1\n\t\tprint(var8)"
    }
  },
  {
    "p_name": "p03329",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [1, 6, 9, 36, 81, 729, 1296, 6561, 7776, 46656, 59049]\nvar2 = [float('inf')] * 101000\nvar2[0] = 0\nfor i in range(1, var0 + 1):\n\tvar3 = float('inf')\n\tfor var4 in var1:\n\t\tif i >= var4:\n\t\t\tvar3 = min(var3, min(var2[i - 1] + 1, var2[i - var4] + 1))\n\tvar2[i] = var3\nprint(var2[var0])",
      "fixed_code": "var0 = int(input())\nvar1 = [1, 6, 9, 36, 81, 216, 729, 1296, 6561, 7776, 46656, 59049]\nvar2 = [float('inf')] * 101000\nvar2[0] = 0\nfor i in range(1, var0 + 1):\n\tvar3 = float('inf')\n\tfor var4 in var1:\n\t\tif i >= var4:\n\t\t\tvar3 = min(var3, min(var2[i - 1] + 1, var2[i - var4] + 1))\n\tvar2[i] = var3\nprint(var2[var0])"
    }
  },
  {
    "p_name": "p03328",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = var1 - var0\nvar3 = (1 + var2) * var2 / 2\nvar4 = var3 - var1\nprint(var4)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = var1 - var0\nvar3 = int((1 + var2) * var2 / 2)\nvar4 = var3 - var1\nprint(var4)"
    }
  },
  {
    "p_name": "p02719",
    "code": {
      "buggy_code": "var0 = input().split()\nvar1, k = (int(var0[0]), int(var0[1]))\nwhile True:\n\tvar2 = abs(var1 - k)\n\tif var2 < var1:\n\t\tvar1 = var2\n\t\tprint(var1)\n\telse:\n\t\tbreak\nprint(var1)",
      "fixed_code": "var0 = input().split()\nvar1, k = (int(var0[0]), int(var0[1]))\nprint(min(var1 % k, k - var1 % k))"
    }
  },
  {
    "p_name": "p03254",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = sorted(list(map(int, input().split())))\nif sum(var2) < var1:\n\tprint(var0 - 1)\nelse:\n\tvar3 = 0\n\tvar4 = [0] * var0\n\tfor i in range(var0):\n\t\tif var1 >= var2[i]:\n\t\t\tvar1 -= var2[i]\n\t\t\tvar4[i] = 1\n\tvar3 = var4.count(1)\n\tif var1 > 0:\n\t\tprint(max(var3 - 1, 0))\n\telse:\n\t\tprint(var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = sorted(list(map(int, input().split())))\nvar5 = sum(var2)\nif var5 < var1:\n\tprint(var0 - 1)\nelif var5 == var1:\n\tprint(var0)\nelse:\n\tvar3 = 0\n\tvar4 = [0] * var0\n\tfor i in range(var0):\n\t\tif var1 >= var2[i]:\n\t\t\tvar1 -= var2[i]\n\t\t\tvar4[i] = 1\n\tvar3 = var4.count(1)\n\tprint(var3)"
    }
  },
  {
    "p_name": "p03387",
    "code": {
      "buggy_code": "var0 = [int(i) for i in input().split()]\nvar0.sort()\nif (var0[2] - var0[1] + (var0[2] - var0[0])) % 2 == 0:\n\tprint((var0[2] - var0[1] + (var0[2] - var0[0])) / 2)\nelse:\n\tprint((var0[2] - var0[1] + (var0[2] - var0[0]) + 1) / 2 + 1)",
      "fixed_code": "var0 = [int(i) for i in input().split()]\nvar0.sort()\nif (var0[2] - var0[1] + (var0[2] - var0[0])) % 2 == 0:\n\tprint(int((var0[2] - var0[1] + (var0[2] - var0[0])) / 2))\nelse:\n\tprint(int((var0[2] - var0[1] + (var0[2] - var0[0]) + 1) / 2 + 1))"
    }
  },
  {
    "p_name": "p02712",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 0\nfor i in range(1, var0):\n\tif not i % 3 == 0:\n\t\tif not i % 5 == 0:\n\t\t\tvar1 += i\nprint(var1)",
      "fixed_code": "var0 = int(input())\nvar1 = 0\nfor i in range(1, var0 + 1):\n\tif not i % 3 == 0:\n\t\tif not i % 5 == 0:\n\t\t\tvar1 += i\nprint(var1)"
    }
  },
  {
    "p_name": "p02399",
    "code": {
      "buggy_code": "var0, var1 = map(float, input().split())\nprint(int(var0 / var1), int(var0 % var1), var0 * 100000 / (var1 * 100000))",
      "fixed_code": "var0, var1 = map(int, input().split())\nprint('{:.0f} {:.0f} {:.8f}'.format(int(var0 / var1), var0 % var1, var0 / var1))"
    }
  },
  {
    "p_name": "p02595",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nfor i in range(var0):\n\tvar3, var4 = map(int, input().split())\n\tif var3 ^ 2 + var4 ^ 2 <= var1 ^ 2:\n\t\tvar2 = var2 + 1\n\telse:\n\t\tvar2 = var2\nprint(var2)",
      "fixed_code": "var5, var6 = map(int, input().split())\nvar2 = 0\nfor i in range(var5):\n\tvar3, var4 = map(int, input().split())\n\tif var3 ** 2 + var4 ** 2 <= var6 ** 2:\n\t\tvar2 = var2 + 1\n\telse:\n\t\tvar2 = var2\nprint(var2)"
    }
  },
  {
    "p_name": "p03386",
    "code": {
      "buggy_code": "var0 = input().split()\nvar1, var2, var3 = (int(var0[0]), int(var0[1]), int(var0[2]))\nfor i in range(var1, min(var2 + 1, var1 + var3)):\n\tif i < var1 + var3 or i > var2 - var3:\n\t\tprint(i)\nfor i in range(max(var1 + var3 + 1, var2 - var3 + 1), var2 + 1):\n\tif i < var1 + var3 or i > var2 - var3:\n\t\tprint(i)",
      "fixed_code": "var0 = input().split()\nvar1, var2, var3 = (int(var0[0]), int(var0[1]), int(var0[2]))\nfor i in range(var1, min(var2 + 1, var1 + var3)):\n\tif i < var1 + var3 or i > var2 - var3:\n\t\tprint(i)\nfor j in range(max(i + 1, var2 - var3 + 1), var2 + 1):\n\tif j < var1 + var3 or j > var2 - var3:\n\t\tprint(j)"
    }
  },
  {
    "p_name": "p02866",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 998244353\nvar2 = [0] * (10 ** 5 + 1)\nvar3 = list(map(int, input().split()))\nvar4 = max(var3)\nvar5 = 0\nfor i in range(var0):\n\tvar2[var3[i]] += 1\nfor i in range(var4 + 1):\n\tif var2[i] == 0:\n\t\tvar5 = 0\n\t\tbreak\n\telif i == 0:\n\t\tif var2[i] != 1:\n\t\t\tvar5 = 0\n\t\t\tbreak\n\t\telse:\n\t\t\tvar5 = 1\n\telse:\n\t\tvar5 = var5 * (var2[i - 1] ** var2[i] % var1)\n\t\tvar5 = var5 % var1\nprint(var5 % var1)",
      "fixed_code": "var0 = int(input())\nvar1 = 998244353\nvar2 = [0] * (10 ** 5 + 1)\nvar3 = list(map(int, input().split()))\nvar4 = max(var3)\nvar5 = 0\nfor i in range(var0):\n\tvar2[var3[i]] += 1\nfor i in range(var4 + 1):\n\tif var2[i] == 0:\n\t\tvar5 = 0\n\t\tbreak\n\telif i == 0:\n\t\tif var2[i] != 1:\n\t\t\tvar5 = 0\n\t\t\tbreak\n\t\telse:\n\t\t\tvar5 = 1\n\telse:\n\t\tvar5 = var5 * (var2[i - 1] ** var2[i] % var1)\n\t\tvar5 = var5 % var1\nif var3[0] == 0:\n\tprint(var5)\nelse:\n\tprint(0)"
    }
  },
  {
    "p_name": "p03087",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(input())\nvar3 = [0] * var0\nvar4 = [0] * (var0 + 1)\nfor i in range(1, var0):\n\tif var2[i - 1] == 'A' and var2[i] == 'C':\n\t\tvar3[i] = 1\nfor i in range(var0):\n\tvar4[i + 1] = var4[i] + var3[i]\nfor i in range(var1):\n\tvar5, var6 = map(int, input().split())\n\tprint(var4[var5] - var4[var6 - 1])",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(input())\nvar3 = [0] * var0\nvar4 = [0] * (var0 + 1)\nfor i in range(1, var0):\n\tif var2[i - 1] == 'A' and var2[i] == 'C':\n\t\tvar3[i] = 1\nfor i in range(var0):\n\tvar4[i + 1] = var4[i] + var3[i]\nfor i in range(var1):\n\tvar5, var6 = map(int, input().split())\n\tprint(var4[var6] - var4[var5])"
    }
  },
  {
    "p_name": "p03386",
    "code": {
      "buggy_code": "var0, var1, var2 = [int(i) for i in input().split()]\nvar3 = set()\nfor i, j in enumerate(range(var0, var1 + 1)):\n\tif i + 1 > var2:\n\t\tbreak\n\tvar3.add(j)\nfor i, j in enumerate(range(var1, var0 + 1, -1)):\n\tif i + 1 > var2:\n\t\tbreak\n\tvar3.add(j)\nfor i in sorted(list(var3)):\n\tprint(i)",
      "fixed_code": "var0, var1, var2 = [int(i) for i in input().split()]\nvar3 = set()\nfor i, j in enumerate(range(var0, var1 + 1)):\n\tif i + 1 > var2:\n\t\tbreak\n\tvar3.add(j)\nfor i, j in enumerate(range(var1, var0, -1)):\n\tif i + 1 > var2:\n\t\tbreak\n\tvar3.add(j)\nfor i in sorted(list(var3)):\n\tprint(i)"
    }
  },
  {
    "p_name": "p03211",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = []\nfor i in range(len(var0) - 2):\n\tvar1.append(754 - int(var0[i:i + 2]))\nprint(abs(min(var1)))",
      "fixed_code": "var0 = input()\nvar1 = []\nfor i in range(len(var0) - 2):\n\tvar1.append(abs(753 - int(var0[i:i + 3])))\nprint(min(var1))"
    }
  },
  {
    "p_name": "p02747",
    "code": {
      "buggy_code": "var0 = list(input())\nvar1 = 0\nfor i in range(len(var0) - 1):\n\tif var0[i] == 'h':\n\t\tif var0[i + 1] == 'i':\n\t\t\tvar1 = 1\n\t\t\tbreak\nif var1 == 1:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = list(input())\nvar1 = 0\nif len(var0) % 2 == 1:\n\tvar1 = 1\nfor i in range(len(var0)):\n\tif i % 2 == 0:\n\t\tif var0[i] != 'h':\n\t\t\tvar1 = 1\n\t\t\tbreak\n\tif i % 2 == 1:\n\t\tif var0[i] != 'i':\n\t\t\tvar1 = 1\n\t\t\tbreak\nif var1 == 0:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02693",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1, var2 = (int(var3) for var3 in input().split())\nk = False\nfor i in range(var1, var2 + 1):\n\tif i % 7 == 0:\n\t\tk = True\nif k:\n\tprint('OK')\nelse:\n\tprint('No')",
      "fixed_code": "def method0():\n\tvar0 = int(input())\n\tvar1, var2 = (int(var3) for var3 in input().split())\n\tk = False\n\tfor i in range(var1, var2 + 1):\n\t\tif i % var0 == 0:\n\t\t\tk = True\n\tif k:\n\t\tprint('OK')\n\telse:\n\t\tprint('NG')\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02755",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nfor var2 in range(101):\n\tif var2 * 0.08 * 100 // 1 == var0 * 100 and var2 * 0.1 * 100 // 1 == var1 * 100 and (var2 // 1 == int(var2)):\n\t\tprint(int(var2))\n\t\texit()\nprint(-1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nfor var2 in range(1009):\n\tif var2 * 0.08 // 1 == var0 and var2 * 0.1 // 1 == var1 and (var2 // 1 == int(var2)):\n\t\tprint(int(var2))\n\t\texit()\nprint(-1)"
    }
  },
  {
    "p_name": "p02730",
    "code": {
      "buggy_code": "var0 = list(input())\nvar1 = len(var0)\nvar2 = var0[0:int((var1 - 1) / 2) + 1]\nvar3 = var2[::-1]\nvar4 = var0[int((var1 + 3) / 2) - 1:]\nvar5 = var4[::-1]\nif var2 == var3 and var4 == var5 and (var0 == var0[::-1]):\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = list(input())\nvar1 = len(var0)\nif var1 == 3:\n\tif var0[0] == var0[2]:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\nelse:\n\tvar2 = var0[0:int((var1 - 1) / 2)]\n\tvar3 = var2[::-1]\n\tvar4 = var0[int((var1 + 3) / 2) - 1:]\n\tvar5 = var4[::-1]\n\tif var2 == var3 and var4 == var5 and (var0 == var0[::-1]):\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')"
    }
  },
  {
    "p_name": "p03324",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nprint(var1 * 100 ** var0)",
      "fixed_code": "var0, var1 = map(int, input().split())\nprint((var1 + (var1 > 99)) * 100 ** var0)"
    }
  },
  {
    "p_name": "p03127",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [int(i) for i in input().split()]\nvar1 = sorted(var1)\nvar2 = True\nfor i in range(1, var0):\n\tif var1[i] % var1[0] != 0:\n\t\tvar2 = False\nprint(var1[0] if var2 else 1)",
      "fixed_code": "import fractions\nvar0 = int(input())\nvar1 = [int(i) for i in input().split()]\nfor i in range(1, var0):\n\tif i == 1:\n\t\tvar3 = fractions.gcd(var1[1], var1[0])\n\telse:\n\t\tvar3 = fractions.gcd(var3, var1[i])\nprint(var3)"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nif var0 ** 0.5 + var1 ** 0.5 < var2 ** 0.5:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nimport math\nif var2 - var0 - var1 <= 0:\n\tprint('No')\nelif (var2 - var0 - var1) ** 2 - 4 * var0 * var1 > 0:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02570",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nprint('Yes' if var2 * var1 <= var0 else 'No')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nprint('Yes' if var0 / var2 <= var1 else 'No')"
    }
  },
  {
    "p_name": "p04001",
    "code": {
      "buggy_code": "var0 = list(input())\nvar1 = [0] * (len(var0) - 1)\nvar2 = 0\n\ndef method0(i):\n\tglobal var2\n\tif i == len(var1):\n\t\tvar3 = var0[0]\n\t\tvar4 = []\n\t\tfor i in range(len(var1)):\n\t\t\tif var1[i] == 0:\n\t\t\t\tvar3 += var0[i + 1]\n\t\t\telse:\n\t\t\t\tvar4.append(var3)\n\t\t\t\tvar3 = var0[i + 1]\n\t\t\tif i == len(var1) - 1:\n\t\t\t\tvar4.append(var3)\n\t\tvar4 = list(map(int, var4))\n\t\tvar2 = var2 + sum(var4)\n\t\treturn\n\tmethod0(i + 1)\n\tvar1[i] = 1\n\tmethod0(i + 1)\n\tvar1[i] = 0\nmethod0(0)\nprint(var2)",
      "fixed_code": "var0 = list(input())\nvar1 = [0] * (len(var0) - 1)\nvar2 = 0\n\ndef method0(i):\n\tglobal var2\n\tif i == len(var1):\n\t\tvar3 = var0[0]\n\t\tvar4 = []\n\t\tfor i in range(len(var1)):\n\t\t\tif var1[i] == 0:\n\t\t\t\tvar3 += var0[i + 1]\n\t\t\telse:\n\t\t\t\tvar4.append(var3)\n\t\t\t\tvar3 = var0[i + 1]\n\t\t\tif i == len(var1) - 1:\n\t\t\t\tvar4.append(var3)\n\t\tvar4 = list(map(int, var4))\n\t\tvar2 = var2 + sum(var4)\n\t\treturn\n\tmethod0(i + 1)\n\tvar1[i] = 1\n\tmethod0(i + 1)\n\tvar1[i] = 0\nif len(var0) == 1:\n\tprint(var0[0])\nelse:\n\tmethod0(0)\n\tprint(var2)"
    }
  },
  {
    "p_name": "p03625",
    "code": {
      "buggy_code": "import collections\nvar0, var1 = (int(input()), collections.Counter(sorted(list(map(int, input().split())))))\nvar2, var3, var4, var5 = (list(var1.keys()), list(var1.values()), [], 0)\nfor i in range(len(var1)):\n\tif var3[i] >= 2:\n\t\tvar4.append([var2[i], var3[i]])\nvar5 = var4[-1][0] ** 2 if len(var4) >= 2 and var4[-1][1] >= 4 else var4[-1][0] * var4[-2][0] if len(var4) >= 2 else 0\nprint(var5)",
      "fixed_code": "import collections\nvar0, var1 = (int(input()), collections.Counter(sorted(list(map(int, input().split())))))\nvar2, var3, var4, var5 = (list(var1.keys()), list(var1.values()), [], 0)\nfor i in range(len(var1)):\n\tif var3[i] >= 2:\n\t\tvar4.append([var2[i], var3[i]])\nvar4.sort(var6=lambda var7: var7[0])\nvar5 = var4[-1][0] ** 2 if len(var4) >= 1 and var4[-1][1] >= 4 else var4[-1][0] * var4[-2][0] if len(var4) >= 2 else 0\nprint(var5)"
    }
  },
  {
    "p_name": "p02613",
    "code": {
      "buggy_code": "from sys import stdin\nvar0, *var1 = (x.rstrip() for x in stdin.readlines())\nvar2 = var1.count('AC')\nvar3 = var1.count('WA')\nvar4 = var1.count('TLE')\nvar5 = var1.count('RE')\nprint(f'AC × {var2}')\nprint(f'WA × {var3}')\nprint(f'TLE × {var4}')\nprint(f'RE × {var5}')",
      "fixed_code": "from sys import stdin\nvar0, *var1 = (x.rstrip() for x in stdin.readlines())\nvar2 = var1.count('AC')\nvar3 = var1.count('WA')\nvar4 = var1.count('TLE')\nvar5 = var1.count('RE')\nprint(f'AC x {var2}')\nprint(f'WA x {var3}')\nprint(f'TLE x {var4}')\nprint(f'RE x {var5}')"
    }
  },
  {
    "p_name": "p03363",
    "code": {
      "buggy_code": "from collections import *\nfrom itertools import *\nvar0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = list(accumulate(var1))\nvar3 = Counter(var2)\nvar4 = 0\nfor i in range(var0):\n\tvar3[var2[i]] -= 1\n\tvar4 += var3[var2[i] - var1[i]]\nprint(var4)",
      "fixed_code": "from collections import *\nfrom itertools import *\nvar0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = list(accumulate(var1))\nvar3 = Counter(var2)\nvar4 = 0\nfor i in range(var0):\n\tvar4 += var3[var2[i] - var1[i]]\n\tvar3[var2[i]] -= 1\nprint(var4)"
    }
  },
  {
    "p_name": "p02771",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = [var0, var1, var2]\nsorted(var3)\nif len(var3) == 2:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = [var0, var1, var2]\nvar3.sort()\nif var3[0] == var3[1] and var3[1] != var3[2]:\n\tprint('Yes')\nelif var3[0] != var3[1] and var3[1] == var3[2]:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03042",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = int(var0[:2])\nvar2 = int(var0[2:])\nif (var1 > 12) & (var2 > 12) or var1 == 0 or var2 == 0:\n\tprint('NA')\nelif (var1 > 0) & (var1 < 13) & ((var2 > 0) & (var2 < 13)):\n\tprint('AMBIGUOUS')\nelif var1 > 12:\n\tprint('YYMM')\nelse:\n\tprint('MMYY')",
      "fixed_code": "var0 = input()\nvar1 = int(var0[:2])\nvar2 = int(var0[2:])\nif (var1 > 12) & (var2 > 12) or (var1 == 0) & (var2 == 0) or (var1 == 0) & (var2 > 12) or (var1 > 12) & (var2 == 0):\n\tprint('NA')\nelif (var1 > 0) & (var1 < 13) & ((var2 > 0) & (var2 < 13)):\n\tprint('AMBIGUOUS')\nelif var1 > 12 or var1 == 0:\n\tprint('YYMM')\nelse:\n\tprint('MMYY')"
    }
  },
  {
    "p_name": "p03400",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = var1[1]\nfor i in range(var0):\n\tk = int(input())\n\tif k < var1[0] + 1:\n\t\tvar2 += var1[0] - 1 // k\n\telse:\n\t\tvar2 += 1\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = var1[1]\nfor i in range(var0):\n\tk = int(input())\n\tif k < var1[0] + 1:\n\t\tvar2 += (var1[0] - 1) // k + 1\n\telse:\n\t\tvar2 += 1\n\tk = 0\nprint(var2)"
    }
  },
  {
    "p_name": "p04011",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = [int(input()) for i in range(4)]\nprint(var2 * var1 + var3 * (var0 - var1 if var0 - var1 > 0 else 0))",
      "fixed_code": "var0, var1, var2, var3 = [int(input()) for i in range(4)]\nprint(var2 * var1 + var3 * (var0 - var1) if var0 - var1 > 0 else var2 * var0)"
    }
  },
  {
    "p_name": "p02953",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nif var0 == 1:\n\tprint('Yes')\nelse:\n\tk = 0\n\tfor i in range(var0 - 1):\n\t\tif var1[i] - var1[i + 1] >= 2:\n\t\t\tk += 1\n\tvar2 = 0\n\tfor j in range(var0 - 1):\n\t\tif var1[0] - var1[j + 1] >= 2:\n\t\t\tvar2 += 1\n\tvar3 = 0\n\tfor var4 in range(var0 - 1):\n\t\tif var1[i] - var1[i + 1] >= 1:\n\t\t\tvar3 += 1\n\tif k < 1 and var2 == 0 and (var3 >= 1):\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar5 = 0\nfor i in range(var0 - 1):\n\tif var5 > var1[i + 1]:\n\t\tprint('No')\n\t\texit()\n\tif var1[i + 1] - var1[i] >= -1:\n\t\tvar5 = max(var1[i + 1] - 1, var1[i] - 1, var5)\n\t\tif var1[i + 1] >= var1[i] and var1[i + 1] > var5:\n\t\t\tvar1[i + 1] -= 1\n\telse:\n\t\tprint('No')\n\t\texit()\nprint('Yes')"
    }
  },
  {
    "p_name": "p02641",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nif var1 == 0:\n\tprint(var0)\nelse:\n\tvar3 = []\n\tvar4 = var0\n\tvar5 = var0\n\tfor i in range(1, 101):\n\t\tif not i in var2:\n\t\t\tvar3.append(i)\n\twhile True:\n\t\tif var5 - 1 in var3:\n\t\t\tprint(var5 - 1)\n\t\t\tbreak\n\t\telif var4 + 1 in var3:\n\t\t\tprint(var4 + 1)\n\t\t\tbreak",
      "fixed_code": "var6, var7 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar2 = set(var2)\nfor i in range(200):\n\tif var6 - i not in var2:\n\t\tprint(var6 - i)\n\t\tbreak\n\tif var6 + i not in var2:\n\t\tprint(var6 + i)\n\t\tbreak"
    }
  },
  {
    "p_name": "p02917",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [int(i) for i in input().split()]\nvar2 = [0] * var0\nvar3 = [0] * var0\nvar4 = 0\nvar2[0] = var1[0]\nvar2[-1] = var1[-1]\nfor i in range(1, var0 - 2):\n\tvar2[i] = var1[i]\n\tvar2[i + 1] = var1[i]\n\tif var1[i] > var1[i + 1]:\n\t\tvar2[i] = var1[i - 1]\nvar2[0] = var1[0]\nvar2[-1] = var1[-1]\nvar2[var0 - 2] = var1[var0 - 3]\nfor i in range(var0):\n\tvar4 = var4 + var2[i]\nprint(var4)",
      "fixed_code": "var0 = int(input())\nvar1 = [int(i) for i in input().split()]\nvar2 = [0] * var0\nvar3 = [0] * var0\nvar4 = 0\nvar2[0] = var1[0]\nvar2[-1] = var1[-1]\nfor i in range(1, var0 - 2):\n\tvar2[i] = min(var1[i], var1[i - 1])\nvar2[0] = var1[0]\nvar2[-1] = var1[-1]\nvar2[var0 - 2] = min(var1[var0 - 2], var1[var0 - 3])\nfor i in range(var0):\n\tvar4 = var4 + var2[i]\nprint(var4)"
    }
  },
  {
    "p_name": "p02777",
    "code": {
      "buggy_code": "import sys\nsys.setrecursionlimit(10000000)\nvar0 = 10 ** 9 + 7\n\ndef method0():\n\treturn list(map(int, input().split()))\n\ndef method1():\n\tvar1, var2 = map(str, input().split())\n\tvar3, var4 = method0()\n\tvar5 = input()\n\tif var5 == 'red':\n\t\tprint(var3 - 1, var4)\n\telse:\n\t\tprint(var3, var4 - 1)\nif __name__ == '__main__':\n\tmethod1()",
      "fixed_code": "import itertools\nimport fractions\n\ndef method1():\n\tvar1, var2 = map(str, input().split())\n\tvar3, var4 = map(int, input().split())\n\tvar6 = input()\n\tif var1 == var6:\n\t\tvar3 -= 1\n\telse:\n\t\tvar4 -= 1\n\tprint(var3, var4)\nif __name__ == '__main__':\n\tmethod1()"
    }
  },
  {
    "p_name": "p02391",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var0 < var1:\n\tprint('var0 < var1')\nif var0 > var1:\n\tprint('var0 > var1')\nif var0 == var1:\n\tprint('var0 equals to var1')",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 < var1:\n\tprint('var0 < var1')\nif var0 > var1:\n\tprint('var0 > var1')\nif var0 == var1:\n\tprint('var0 == var1')"
    }
  },
  {
    "p_name": "p03693",
    "code": {
      "buggy_code": "var0, var1, var2 = list(map(int, input().split()))\nprint('YES' if 10 * (var1 + var2) % 4 == 0 else 'NO')",
      "fixed_code": "var0, var1, var2 = list(map(int, input().split()))\nprint('YES' if (10 * var1 + var2) % 4 == 0 else 'NO')"
    }
  },
  {
    "p_name": "p03854",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 0\nwhile 1:\n\tif len(var0) == 0:\n\t\tvar1 = 1\n\t\tbreak\n\telif var0[0:7] == 'dreamer':\n\t\tvar0 = var0[7:]\n\telif var0[0:6] == 'eraser':\n\t\tvar0 = var0[6:]\n\telif var0[0:5] == 'dream':\n\t\tvar0 = var0[5:]\n\telif var0[0:5] == 'erase':\n\t\tvar0 = var0[5:]\n\telse:\n\t\tbreak\n\tprint(var0)\nif var1 == 1:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0 = input()\nvar1 = 0\nwhile 1:\n\tif len(var0) == 0:\n\t\tvar1 = 1\n\t\tbreak\n\telif var0[-7:] == 'dreamer':\n\t\tvar0 = var0[0:-7]\n\telif var0[-6:] == 'eraser':\n\t\tvar0 = var0[0:-6]\n\telif var0[-5:] == 'dream':\n\t\tvar0 = var0[0:-5]\n\telif var0[-5:] == 'erase':\n\t\tvar0 = var0[0:-5]\n\telse:\n\t\tbreak\nif var1 == 1:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p03075",
    "code": {
      "buggy_code": "var0 = [int(input()) for _ in range(5)]\nvar1 = int(input())\nvar2 = False\nfor i in range(5):\n\tfor var3 in range(4 - i):\n\t\tif var0[var3] - var0[i] > 15:\n\t\t\tvar2 = True\nif var2:\n\tprint(':(')\nelse:\n\tprint('Yay!')",
      "fixed_code": "var0 = [int(input()) for _ in range(5)]\nvar1 = int(input())\nvar2 = False\nfor i in range(5):\n\tfor var3 in range(1, 5 - i):\n\t\tif var0[var3] - var0[i] > var1:\n\t\t\tvar2 = True\nif var2:\n\tprint(':(')\nelse:\n\tprint('Yay!')"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = [-1] * var1\nvar3 = [-1] * var1\nvar4 = [-1] * 3\nvar5 = 0\nfor i in range(var1):\n\tvar2[i], var3[i] = map(int, input().split())\nfor j, var6 in zip(var2, var3):\n\tif j == 1 and var6 == 0:\n\t\tprint(-1)\n\t\tbreak\n\telif var4[j - 1] == -1:\n\t\tvar4[j - 1] = var6\n\telif var4[j - 1] != var6:\n\t\tprint(-1)\n\t\tbreak\nelse:\n\tvar4 = list(map(lambda var0: var0 * 0 if var0 < 0 else var0, var4))\n\tfor k in var4:\n\t\tvar5 = var5 * 10 + k\n\tprint(var5)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = [-1] * var1\nvar3 = [-1] * var1\nfor i in range(var1):\n\tvar2[i], var3[i] = map(int, input().split())\nif var0 == 1:\n\tvar7 = 0\nelse:\n\tvar7 = 10 ** (var0 - 1)\nfor j in range(var7, 1000):\n\tvar4 = str(j)\n\tfor var8, var9 in zip(var2, var3):\n\t\tif var4[var8 - 1] != str(var9):\n\t\t\tbreak\n\telse:\n\t\tprint(j)\n\t\tbreak\nelse:\n\tprint(-1)"
    }
  },
  {
    "p_name": "p03951",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = input()\nvar2 = input()\nfor i in range(var0):\n\tif var2[i] == var1[-1 * i - 1]:\n\t\tcontinue\n\telse:\n\t\tbreak\nif i == 0:\n\tprint(var1 + var2)\nelse:\n\tprint(var1[:-1 * i] + var2)",
      "fixed_code": "var0 = int(input())\nvar1 = input()\nvar2 = input()\nvar3 = 0\nfor i in reversed(range(var0)):\n\tj = -1 * i - 1\n\tif var2[:i + 1] == var1[j:]:\n\t\tvar3 = 1\n\t\tbreak\n\telse:\n\t\tcontinue\nif i == 0 and var3 == 0:\n\tprint(len(var1 + var2))\nelse:\n\tprint(len(var1[:j] + var2))"
    }
  },
  {
    "p_name": "p02957",
    "code": {
      "buggy_code": "var0 = list(map(int, input().split()))\nif (var0[0] + var0[1]) // 2 == 0:\n\tprint(abs(var0[0] - (var0[0] + var0[1]) / 2))\nelse:\n\tprint('IMPOSSIBLE')",
      "fixed_code": "var0 = list(map(int, input().split()))\nif (var0[0] + var0[1]) % 2 == 0:\n\tprint(int((var0[0] + var0[1]) / 2))\nelse:\n\tprint('IMPOSSIBLE')"
    }
  },
  {
    "p_name": "p03721",
    "code": {
      "buggy_code": "import sys\nfrom collections import defaultdict\nvar0, var1 = map(int, input().split())\nvar2 = defaultdict(int)\nfor i in range(var0):\n\tvar3, var4 = map(int, input().split())\n\tvar2[var3] += var4\nvar5 = sorted(var2.items(), var6=lambda var7: var7[1])\nvar8 = 0\nfor i in range(len(var5)):\n\tvar8 += var5[i][1]\n\tif var8 >= var1:\n\t\tprint(var5[i][0])\n\t\tsys.exit()",
      "fixed_code": "import sys\nfrom collections import defaultdict\nvar0, var1 = map(int, input().split())\nvar5 = [0] * (10 ** 5 + 1)\nfor i in range(var0):\n\tvar3, var4 = map(int, input().split())\n\tvar5[var3] += var4\nvar8 = 0\nfor i in range(10 ** 5 + 1):\n\tvar8 += var5[i]\n\tif var1 <= var8:\n\t\tprint(i)\n\t\tsys.exit()"
    }
  },
  {
    "p_name": "p02677",
    "code": {
      "buggy_code": "import math\nvar0, var1, var2, var3 = list(map(int, input().split()))\nvar4 = (60 * var2 + var3) * 0.5\nprint(var4)\nvar5 = 6 * var3\nvar6 = var4 - var5\nvar7 = var0 ** 2 + var1 ** 2 - 2 * var0 * var1 * math.cos(math.radians(var6))\nprint(var7 ** 0.5)",
      "fixed_code": "import math\nvar0, var1, var2, var3 = list(map(int, input().split()))\nvar8 = var3 / 60 * 360\nvar9 = (60 * var2 + var3) / 720 * 360\nvar6 = abs(var9 - var8)\nvar6 = math.radians(min(360 - var6, var6))\nvar10 = var1 ** 2 + var0 ** 2 - 2 * var1 * var0 * math.cos(var6)\nprint(var10 ** 0.5)"
    }
  },
  {
    "p_name": "p02412",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nvar3 = []\nfor i in range(1, var0 + 1):\n\tfor j in range(1, var0 + 1):\n\t\tfor k in range(1, var0 + 1):\n\t\t\tif i + j + k == var1 and i != j != k and (i != j) and (i != k) and (j != k):\n\t\t\t\tvar4 = sorted([i, j, k])\n\t\t\t\tif var4 not in var3:\n\t\t\t\t\tvar3.append(var4)\n\t\t\t\t\tvar2 += 1\nprint(var2)",
      "fixed_code": "import itertools\nwhile True:\n\tvar0, var1 = map(int, input().split())\n\tif var0 == 0 and var1 == 0:\n\t\tbreak\n\tvar5 = [i for i in range(1, var0 + 1)]\n\tvar6 = [i for i in itertools.combinations(var5, 3)]\n\tvar7 = 0\n\tvar2 = 0\n\tfor i in range(len(var6)):\n\t\tfor j in range(3):\n\t\t\tvar7 += var6[i][j]\n\t\tif var7 == var1:\n\t\t\tvar2 += 1\n\t\tvar7 = 0\n\tprint(var2)"
    }
  },
  {
    "p_name": "p03807",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nvar3 = 0\nfor i in range(var0):\n\tif var1[i] % 2 == 0:\n\t\tvar2 += 1\n\telse:\n\t\tvar3 += 1\nif var3 > var2:\n\tif var3 % 2 != 0:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\nelse:\n\tprint('YES')",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nvar3 = 0\nfor i in range(var0):\n\tif var1[i] % 2 == 0:\n\t\tvar2 += 1\n\telse:\n\t\tvar3 += 1\nif var0 % 2 == 0 and var3 % 2 == 0:\n\tprint('YES')\nelif var0 % 2 != 0 and var3 % 2 == 0:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p03352",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 0\nfor i in range(1, 35):\n\tfor k in range(1, 10):\n\t\tif i ** k <= var0 and i ** k >= var1:\n\t\t\tvar1 = i ** k\nprint(var1)",
      "fixed_code": "var0 = int(input())\nvar1 = 0\nfor i in range(1, 35):\n\tfor k in range(2, 10):\n\t\tif i ** k <= var0 and i ** k >= var1:\n\t\t\tvar1 = i ** k\nprint(var1)"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = sorted([i % 2019 for i in range(var0, min(var1 + 1, var0 + 2019))])\nprint(var2[0] * var2[1])",
      "fixed_code": "import sys\nvar3, var4 = map(int, input().split())\nvar5 = 2019\nif var4 - var3 >= 2019:\n\tprint(0)\nelse:\n\tvar6 = 10 ** 8\n\tfor i in range(var3, var4):\n\t\tfor j in range(i + 1, var4 + 1):\n\t\t\tif i * j % var5 == 0:\n\t\t\t\tprint(0)\n\t\t\t\tsys.exit()\n\t\t\tvar6 = min(var6, i * j % var5)\n\tprint(var6)"
    }
  },
  {
    "p_name": "p03000",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 0\nvar4 = 0\nfor i in range(len(var2)):\n\tvar3 = var3 + var2[i]\n\tif var3 <= var1:\n\t\tcontinue\n\tprint(i + 1)\n\tbreak",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 0\nvar4 = 1\nfor i in range(len(var2)):\n\tvar3 = var3 + var2[i]\n\tif var3 <= var1:\n\t\tvar4 += 1\nprint(var4)"
    }
  },
  {
    "p_name": "p02571",
    "code": {
      "buggy_code": "import sys\nvar0 = input()\nvar1 = input()\nif var1 in var0:\n\tprint(0)\n\tsys.exit(0)\nvar2 = 0\nfor i in range(len(var0) - len(var1)):\n\tvar3 = 0\n\tfor j in range(len(var1)):\n\t\tif var0[i + j] == var1[j]:\n\t\t\tvar3 += 1\n\tif var2 < var3:\n\t\tvar2 = var3\nprint(len(var1) - var2)",
      "fixed_code": "import sys\nvar0 = input()\nvar1 = input()\nif var1 in var0:\n\tprint(0)\n\tsys.exit(0)\nvar2 = 0\nfor i in range(len(var0) - len(var1) + 1):\n\tvar3 = 0\n\tfor j in range(len(var1)):\n\t\tif var0[i + j] == var1[j]:\n\t\t\tvar3 += 1\n\tif var2 < var3:\n\t\tvar2 = var3\nprint(len(var1) - var2)"
    }
  },
  {
    "p_name": "p02699",
    "code": {
      "buggy_code": "var0, var1 = input().split()\nif var0 <= var1:\n\tprint('unsafe')\nelse:\n\tprint('safe')",
      "fixed_code": "var0, var1 = input().split()\nif int(var0) <= int(var1):\n\tprint('unsafe')\nelse:\n\tprint('safe')"
    }
  },
  {
    "p_name": "p02554",
    "code": {
      "buggy_code": "var0 = int(input())\nif var0 == 1:\n\tprint(0)\nelse:\n\tvar1 = 10 ** var0 % (10 ** 9 + 7)\n\tvar2 = 2 * 9 ** var0 % (10 ** 9 + 7)\n\tvar3 = 8 ** var0 % (10 ** 9 + 7)\n\tprint(var1 - var2 + var3)",
      "fixed_code": "var0 = int(input())\nif var0 == 1:\n\tprint(0)\nelse:\n\tvar1 = 10 ** var0 % (10 ** 9 + 7)\n\tvar2 = 2 * 9 ** var0 % (10 ** 9 + 7)\n\tvar3 = 8 ** var0 % (10 ** 9 + 7)\n\tprint((var1 - var2 + var3) % (10 ** 9 + 7))"
    }
  },
  {
    "p_name": "p02577",
    "code": {
      "buggy_code": "var0 = str(input())\nvar1 = 0\nfor i in range(len(var0)):\n\tvar1 = var1 + int(var0[i])\nif var1 // 9 == 0:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = str(input())\nvar1 = 0\nfor i in range(len(var0)):\n\tvar1 = var1 + int(var0[i])\nif var1 / 9 - var1 // 9 == 0:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02922",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = int((var1 - 1) / (var0 - 1)) + 1\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var1 == 1:\n\tprint(0)\n\texit()\nfor i in range(1, 21):\n\tif (var0 - 1) * i + 1 >= var1:\n\t\tprint(i)\n\t\texit()\nprint(0)"
    }
  },
  {
    "p_name": "p03252",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = input()\nfor i in range(len(var0)):\n\tif var0[i] == var1[i]:\n\t\tcontinue\n\telse:\n\t\tvar0 = var0.translate(str.maketrans({var0[i]: var1[i], var1[i]: var0[i]}))\n\t\tif var0 == var1:\n\t\t\tprint('Yes')\n\t\t\texit()\nprint('No')",
      "fixed_code": "var0 = input()\nvar1 = input()\nvar2 = {}\nvar3 = {}\nfor i in range(len(var0)):\n\tvar4 = var0[i]\n\tvar5 = var1[i]\n\tif var4 in var2 and var2[var4] != var5 or (var5 in var3 and var3[var5] != var4):\n\t\tprint('No')\n\t\texit()\n\tvar2[var4] = var5\n\tvar3[var5] = var4\nprint('Yes')"
    }
  },
  {
    "p_name": "p02641",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar2.sort()\nif var2:\n\tvar3 = max(var2)\nelse:\n\tvar3 = 0\nvar4 = var0\nfor i in range(101):\n\tif var0 in var2:\n\t\tpass\n\telse:\n\t\tvar4 = var0\n\t\tbreak\n\tif var0 - i in var2:\n\t\tpass\n\telif var0 - i >= 0:\n\t\tvar4 = var0 - i\n\t\tbreak\n\tif var0 + i in var2:\n\t\tpass\n\telif var0 + i <= 100:\n\t\tvar4 = var0 + i\n\t\tbreak\nprint(var4)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar2.sort()\nvar4 = var0\nfor i in range(100):\n\tif var0 in var2:\n\t\tpass\n\telse:\n\t\tvar4 = var0\n\t\tbreak\n\tif var0 - i in var2:\n\t\tpass\n\telif var0 - i >= 0:\n\t\tvar4 = var0 - i\n\t\tbreak\n\tif var0 + i in var2:\n\t\tpass\n\telif var0 + i <= 101:\n\t\tvar4 = var0 + i\n\t\tbreak\nprint(var4)"
    }
  },
  {
    "p_name": "p03285",
    "code": {
      "buggy_code": "import sys\n\ndef method0(var0):\n\tfor i in range(100):\n\t\tfor j in range(100):\n\t\t\tif 4 * i + 7 * j == var0:\n\t\t\t\treturn 'Yes'\n\t\t\telse:\n\t\t\t\treturn 'No'\n\ndef method1():\n\tvar1 = sys.stdin.readline().rstrip()\n\treturn int(var1)\n\ndef method2():\n\tvar2 = method1()\n\tvar3 = method0(var2)\n\tprint(var3)\nif __name__ == '__main__':\n\tmethod2()",
      "fixed_code": "import sys\n\ndef method0(var0):\n\tvar4 = 0\n\tfor i in range(26):\n\t\tfor j in range(20):\n\t\t\tif 4 * i + 7 * j == var0:\n\t\t\t\tvar4 = 4 * i + 7 * j\n\tif var4 == var0:\n\t\treturn 'Yes'\n\telse:\n\t\treturn 'No'\n\ndef method1():\n\tvar1 = sys.stdin.readline().rstrip()\n\treturn int(var1)\n\ndef method2():\n\tvar2 = method1()\n\tvar3 = method0(var2)\n\tprint(var3)\nif __name__ == '__main__':\n\tmethod2()"
    }
  },
  {
    "p_name": "p02712",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 0\nfor i in range(var0):\n\tif i % 3 == 0 and i % 5 == 0 or i % 3 == 0 or i % 5 == 0:\n\t\tpass\n\telse:\n\t\tvar1 = i + var1\nprint(var1)",
      "fixed_code": "var0 = int(input())\nvar1 = 0\nfor i in range(1, var0 + 1):\n\tif i % 3 == 0 and i % 5 == 0:\n\t\tpass\n\telif i % 3 == 0:\n\t\tpass\n\telif i % 5 == 0:\n\t\tpass\n\telse:\n\t\tvar1 = i + var1\nprint(var1)"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "import sys\nvar0, var1 = [int(var2) for var2 in input().strip().split()]\nvar3 = 10 ** 9 + 1\nvar4 = 10 ** 0 + 1\nfor i in range(var0, var1 + 1):\n\tfor j in range(var0, var1 + 1):\n\t\tif i < j:\n\t\t\tvar3 = i * j % 2019\n\t\t\tif var4 == 0:\n\t\t\t\tprint(0)\n\t\t\t\tsys.exit()\n\t\t\telif var3 < var4:\n\t\t\t\tvar4 = var3\nprint(var4)",
      "fixed_code": "import sys\nvar0, var1 = [int(var2) for var2 in input().strip().split()]\nvar3 = 10 ** 9 + 1\nvar4 = 10 ** 9 + 1\nfor i in range(var0, var1, 1):\n\tfor j in range(var0 + 1, var1 + 1, 1):\n\t\tif i < j:\n\t\t\tvar4 = min(i * j % 2019, var4)\n\t\t\tif var4 == 0:\n\t\t\t\tprint(0)\n\t\t\t\tsys.exit()\nprint(var4)"
    }
  },
  {
    "p_name": "p02718",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = input().split()\nvar3 = [int(var4) for var4 in var2]\nvar5 = sorted(var3, var6=True)\nvar7 = 1 / (4 * var1)\nif var5[var1 - 1] < var7:\n\tprint('No')\nelse:\n\tprint('Yes')",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = input().split()\nvar3 = [int(var4) for var4 in var2]\nvar5 = sorted(var3, var6=True)\nvar7 = sum(var3) / (4 * var1)\nif var5[var1 - 1] < var7:\n\tprint('No')\nelse:\n\tprint('Yes')"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 2018\nfor i in range(var0, var1):\n\tvar2 = min(i * (i + 1) % 2019, var2)\n\tif var2 == 0:\n\t\tbreak\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 0 if var1 - var0 >= 2019 else 2018\nvar3 = min(var1, (var0 // 2019 + 1) * 2019)\nfor i in range(var0, var3):\n\tfor j in range(i + 1, var3 + 1):\n\t\tvar2 = min(i * j % 2019, var2)\n\t\tif var2 == 0:\n\t\t\tbreak\nprint(var2)"
    }
  },
  {
    "p_name": "p03324",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = var1 * 100 ** var0\nprint(var2)",
      "fixed_code": "var3, var4 = map(int, input().split())\nif var4 != 100:\n\tprint(var4 * 100 ** var3)\nelse:\n\tprint((var4 + 1) * 100 ** var3)"
    }
  },
  {
    "p_name": "p02755",
    "code": {
      "buggy_code": "import math\nvar0, var1 = map(int, input().split())\nfor i in range(1, 102):\n\tif i == 101:\n\t\tprint(-1)\n\telif math.floor(i * 0.08) == var0 and math.floor(i * 0.1) == var1:\n\t\tprint(i)\n\t\tbreak",
      "fixed_code": "import math\nvar0, var1 = map(int, input().split())\nfor i in range(1, 1252):\n\tif i == 1251:\n\t\tprint(-1)\n\telif math.floor(i * 0.08) == var0 and math.floor(i * 0.1) == var1:\n\t\tprint(i)\n\t\tbreak"
    }
  },
  {
    "p_name": "p03266",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split()))\nprint(int((var0 // var1) ** 3) if var1 % 2 == 1 else int((var0 // (var1 // 2)) ** 3))",
      "fixed_code": "var0, var1 = list(map(int, input().split()))\nprint(int((var0 // var1) ** 3) if var1 % 2 == 1 else int((var0 // var1) ** 3) + int((var0 // (var1 // 2) - var0 // var1) ** 3))"
    }
  },
  {
    "p_name": "p02959",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar3 = 0\nfor i in range(var0):\n\tif var1[i] >= var2[i] and var1[i] >= 0:\n\t\tvar3 += var2[i]\n\t\tvar1[i] = var1[i] - var2[i]\n\telif var1[i] < var2[i] and var1[i] >= 0:\n\t\tif var1[i + 1] - var2[i] + var1[i] > 0:\n\t\t\tvar3 += var2[i]\n\t\telse:\n\t\t\tvar3 += var1[i] + var1[i + 1]\n\t\tvar1[i + 1] = -1\n\t\tvar1[i] = -1\n\telif var1[i] < 0:\n\t\tif var1[i + 1] >= var2[i]:\n\t\t\tvar3 += var2[i]\n\t\t\tvar1[i + 1] = var1[i + 1] - var2[i]\n\t\telse:\n\t\t\tvar3 += var1[i + 1]\n\t\t\tvar1[i + 1] -= var2[i]\nprint(var3)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar3 = 0\nfor i in range(var0):\n\tif var1[i] >= var2[i] and var1[i] >= 0:\n\t\tvar3 += var2[i]\n\t\tvar1[i] = var1[i] - var2[i]\n\telif var1[i] < var2[i] and var1[i] >= 0:\n\t\tif var1[i + 1] - var2[i] + var1[i] > 0:\n\t\t\tvar3 += var2[i]\n\t\telse:\n\t\t\tvar3 += var1[i] + var1[i + 1]\n\t\tvar1[i + 1] -= var2[i] - var1[i]\n\t\tvar1[i] = -1\n\telif var1[i] < 0:\n\t\tif var1[i + 1] >= var2[i]:\n\t\t\tvar3 += var2[i]\n\t\t\tvar1[i + 1] = var1[i + 1] - var2[i]\n\t\telse:\n\t\t\tvar3 += var1[i + 1]\n\t\t\tvar1[i + 1] -= var2[i]\nprint(var3)"
    }
  },
  {
    "p_name": "p03730",
    "code": {
      "buggy_code": "def method0(var0):\n\tvar1, var2, var3 = map(int, var0.split())\n\tfor i in range(var3):\n\t\tif (var1 + var1 * i) % var2 == var3:\n\t\t\tprint('YES')\n\t\t\treturn\n\tprint('NO')\nmethod0(input())",
      "fixed_code": "def method0(var0):\n\tvar1, var2, var3 = map(int, var0.split())\n\tfor i in range(var2):\n\t\tif (var1 + var1 * i) % var2 == var3:\n\t\t\tprint('YES')\n\t\t\treturn\n\tprint('NO')\nmethod0(input())"
    }
  },
  {
    "p_name": "p03544",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 2\nvar2 = 1\nfor var3 in range(var0 - 1):\n\tvar1, var2 = (var2, var1 + var2)\n\tprint(var1, var2)\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = 2\nvar2 = 1\nfor var3 in range(var0 - 1):\n\tvar1, var2 = (var2, var1 + var2)\nprint(var2)"
    }
  },
  {
    "p_name": "p03281",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1, var2 = (0, 0)\nif var0 == 105:\n\tprint(1)\nelif var0 <= 104:\n\tprint(0)\nelse:\n\tfor var3 in range(107, var0 + 1, 2):\n\t\tfor var4 in range(1, var3 + 1):\n\t\t\tif var3 % var4 == 0:\n\t\t\t\tvar1 += 1\n\t\tif var1 >= 8 and var3 % 2 != 0:\n\t\t\tvar2 += 1\n\tprint(var2 + 1)",
      "fixed_code": "var0 = int(input())\nvar1, var2 = (0, 0)\nif var0 == 105:\n\tprint(1)\nelif var0 <= 104:\n\tprint(0)\nelse:\n\tfor var3 in range(107, var0 + 1, 2):\n\t\tvar1 = 0\n\t\tfor var4 in range(1, var3 + 1):\n\t\t\tif var3 % var4 == 0:\n\t\t\t\tvar1 += 1\n\t\tif var1 == 8:\n\t\t\tvar2 += 1\n\tprint(var2 + 1)"
    }
  },
  {
    "p_name": "p03625",
    "code": {
      "buggy_code": "var0 = map(int, input().split())\nvar0 = var1(var0)\n\ndef method0(var1):\n\tif len(var1) < 2:\n\t\treturn var1\n\tvar2 = var1[0]\n\tvar3 = [var4 for var4 in var1[1:] if var4 <= var2]\n\tvar5 = [var4 for var4 in var1[1:] if var4 > var2]\n\treturn method0(var3) + [var2] + method0(var5)\n\ndef method1(var1):\n\tvar6 = method0(var1)\n\tvar6.reverse()\n\tvar7 = 0\n\tvar8 = 0\n\tvar9 = 0\n\tfor var10, var11 in enumerate(var6):\n\t\tif var10 + 1 >= len(var6):\n\t\t\tcontinue\n\t\telif var6[var10] == var6[var10 + 1] and var6[var10] >= 1:\n\t\t\tvar7 += 1\n\t\t\tif var7 == 1:\n\t\t\t\tvar8 = var6[var10]\n\t\t\telif var7 == 2:\n\t\t\t\tvar9 = var6[var10]\n\t\t\t\tprint(var8 * var9)\n\t\t\t\treturn\n\tif var7 < 2:\n\t\tprint('0')\nmethod1(var0)",
      "fixed_code": "var0 = int(input())\nvar12 = var1(map(int, input().split()))\nvar12.sort(var13=True)\nvar14 = []\nfor i in range(0, var0 - 1):\n\tif len(var14) == 2:\n\t\tbreak\n\tif var12[i] == var12[i + 1] and (not var12[i] == 0):\n\t\tvar14.append(var12[i])\n\t\tvar12[i + 1] = 0\nif len(var14) == 2:\n\tprint(var14[0] * var14[1])\nelse:\n\tprint('0')"
    }
  },
  {
    "p_name": "p03061",
    "code": {
      "buggy_code": "import fractions\nfrom functools import reduce\nimport random\nimport copy\n\ndef method0(var0):\n\treturn reduce(fractions.method0, var0)\nvar1 = int(input())\nvar2 = list(map(int, input().split()))\nvar3 = 1\nif var1 < 2000:\n\tfor i in range(var1):\n\t\tvar4 = copy.copy(var2)\n\t\tvar4.pop(i)\n\t\tvar5 = method0(var4)\n\t\tif var3 < var5:\n\t\t\tvar3 = var5\nelse:\n\tfor var6 in range(200):\n\t\tvar5 = method0(random.sample(var2, 50))\n\t\tif var3 < var5:\n\t\t\tvar3 = var5\nprint(var3)",
      "fixed_code": "import fractions\nfrom functools import reduce\nimport random\nimport copy\n\ndef method0(var0):\n\treturn reduce(fractions.method0, var0)\nvar1 = int(input())\nvar2 = list(map(int, input().split()))\nvar3 = 1\nif var1 < 1000:\n\tfor i in range(var1):\n\t\tvar4 = copy.copy(var2)\n\t\tvar4.pop(i)\n\t\tvar5 = method0(var4)\n\t\tif var3 < var5:\n\t\t\tvar3 = var5\nelse:\n\tfor var6 in range(200):\n\t\tvar5 = method0(random.sample(var2, 500))\n\t\tif var3 < var5:\n\t\t\tvar3 = var5\nprint(var3)"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "def method0(var0, var1):\n\tfor j, var2 in enumerate(str(var1)):\n\t\tif not j in var0:\n\t\t\tcontinue\n\t\tif var0[j] != int(var2):\n\t\t\treturn False\n\treturn True\nvar3, var4 = list(map(int, input().split()))\nvar5 = [list(map(int, input().split())) for _ in range(var4)]\nvar6 = {}\nfor var7, var8 in var5:\n\tif var7 - 1 in var6:\n\t\tif var6[var7 - 1] != var8:\n\t\t\tprint(-1)\n\t\t\texit()\n\tvar6[var7 - 1] = var8\nif var3 == 1:\n\tfor i in range(9):\n\t\tif method0(var6, i):\n\t\t\tprint(i)\n\t\t\texit()\n\tprint(-1)\n\texit()\nfor i in range(10 ** (var3 - 1), 10 ** var3):\n\tif method0(var6, i):\n\t\tprint(i)\n\t\texit()\nprint(-1)",
      "fixed_code": "def method0(var0, var1):\n\tfor j, var2 in enumerate(str(var1)):\n\t\tif not j in var0:\n\t\t\tcontinue\n\t\tif var0[j] != int(var2):\n\t\t\treturn False\n\treturn True\nvar3, var4 = list(map(int, input().split()))\nvar5 = [list(map(int, input().split())) for _ in range(var4)]\nvar6 = {}\nfor var7, var8 in var5:\n\tif var7 - 1 in var6:\n\t\tif var6[var7 - 1] != var8:\n\t\t\tprint(-1)\n\t\t\texit()\n\tvar6[var7 - 1] = var8\nif var3 == 1:\n\tfor i in range(10):\n\t\tif method0(var6, i):\n\t\t\tprint(i)\n\t\t\texit()\n\tprint(-1)\n\texit()\nfor i in range(10 ** (var3 - 1), 10 ** var3):\n\tif method0(var6, i):\n\t\tprint(i)\n\t\texit()\nprint(-1)"
    }
  },
  {
    "p_name": "p02719",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var0 == var1:\n\tprint(var0)\nelif var0 < var1:\n\tprint(var0)\nelif var0 > var1:\n\tvar2 = var0 % var1\n\tif var1 % 2 == 0:\n\t\tvar3 = var1 - var2\n\t\tvar4 = var2\n\t\tif var3 < var4:\n\t\t\tprint(var3)\n\t\telif var3 > var4:\n\t\t\tprint(var4)\n\telse:\n\t\tvar3 = var1 - var2\n\t\tvar4 = var2\n\t\tif var3 < var4:\n\t\t\tprint(var3)\n\t\telif var3 > var4:\n\t\t\tprint(var4)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar5 = var0 % var1\nprint(min(var5, var1 - var5))"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "var0, var1 = map(float, input().split())\nprint(int(var0 * var1))",
      "fixed_code": "from decimal import var2\nvar0, var1 = map(var2, input().split())\nprint(int(var0 * var1))"
    }
  },
  {
    "p_name": "p02700",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nwhile var0 <= 0 or var2 <= 0:\n\tvar2 -= var1\n\tif var2 <= 0:\n\t\tprint('Yes')\n\t\texit()\n\tvar0 -= var3\n\tif var0 <= 0:\n\t\tprint('No')\n\t\texit()",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nwhile var0 > 0 or var2 > 0:\n\tvar2 -= var1\n\tif var2 <= 0:\n\t\tprint('Yes')\n\t\texit()\n\tvar0 -= var3\n\tif var0 <= 0:\n\t\tprint('No')\n\t\texit()"
    }
  },
  {
    "p_name": "p03086",
    "code": {
      "buggy_code": "var0 = input()\n\ndef method0(var1):\n\tvar2 = 'ACGT'\n\tfor var3 in var1:\n\t\tif not var3 in var2:\n\t\t\treturn False\n\treturn True\nvar4 = 0\nfor i in range(len(var0)):\n\tfor j in range(1, len(var0) - i + 1):\n\t\tvar5 = var0[i:i + j]\n\t\tprint(var5)\n\t\tif method0(var5):\n\t\t\tvar4 = max(var4, len(var5))\nprint(var4)",
      "fixed_code": "var0 = input()\n\ndef method0(var1):\n\tvar2 = 'ACGT'\n\tfor var3 in var1:\n\t\tif not var3 in var2:\n\t\t\treturn False\n\treturn True\nvar4 = 0\nfor i in range(len(var0)):\n\tfor j in range(1, len(var0) - i + 1):\n\t\tvar5 = var0[i:i + j]\n\t\tif method0(var5):\n\t\t\tvar4 = max(var4, len(var5))\nprint(var4)"
    }
  },
  {
    "p_name": "p02755",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = var0 / 0.08\nvar3 = (var0 + 1) / 0.08\nvar4 = var1 / 0.1\nvar5 = (var1 + 1) / 0.1\nvar6 = {i for i in range(int(var2), int(var3) + 1)}\nvar7 = {i for i in range(int(var4), int(var5) + 1)}\nvar8 = var6 & var7\nif len(var8) == 0:\n\tprint('-1')\nelse:\n\tprint(min(var8))",
      "fixed_code": "var0, var1 = map(int, input().split())\nimport math\nvar2 = math.ceil(var0 / 0.08)\nvar3 = math.ceil((var0 + 1) / 0.08)\nvar4 = math.ceil(var1 / 0.1)\nvar5 = math.ceil((var1 + 1) / 0.1)\nvar6 = {i for i in range(int(var2), int(var3))}\nvar7 = {i for i in range(int(var4), int(var5))}\nvar8 = var6 & var7\nif len(var8) == 0:\n\tprint('-1')\nelse:\n\tprint(min(var8))"
    }
  },
  {
    "p_name": "p03814",
    "code": {
      "buggy_code": "import sys\ninput = sys.stdin.readline\nvar0 = input()\nprint(len(var0[var0.index('A'):var0.index('Z') + 1]))",
      "fixed_code": "import sys\ninput = sys.stdin.readline\nvar1 = input()\nprint(len(var1) - var1[::-1].index('Z') - var1.index('A'))"
    }
  },
  {
    "p_name": "p03324",
    "code": {
      "buggy_code": "import sys\ninput = sys.stdin.readline\nvar0, var1 = [int(i) for i in input().split()]\nprint(100 ** var0 * var1)",
      "fixed_code": "import sys\ninput = sys.stdin.readline\nvar0, var1 = [int(i) for i in input().split()]\nvar2 = 100 ** var0 * var1\nif var1 == 100:\n\tvar2 += 100 ** var0\nprint(var2)"
    }
  },
  {
    "p_name": "p02628",
    "code": {
      "buggy_code": "import itertools\nvar0, var1 = map(int, input().split())\nvar2 = [int(var3) for var3 in input().split()]\nif var1 == 1:\n\tprint(*var2)\nif var1 == 2:\n\tvar4 = list(itertools.combinations(var2, 2))\n\tprint(sum(min(var4)))\nif var1 >= 3:\n\tvar5 = list(itertools.combinations(var2, 3))\n\tprint(sum(min(var5)))",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = [int(i) for i in input().split()]\nvar2.sort()\nvar6 = 0\nif var1 == 1:\n\tprint(var2[0])\nelif var1 == 2:\n\tprint(var2[0] + var2[1])\nelse:\n\tfor i in range(var1):\n\t\tvar6 += var2[i]\n\tprint(var6)"
    }
  },
  {
    "p_name": "p02842",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nvar1 = ':('\nfor i in range(50000):\n\tif math.floor(i * 1.08) == var0:\n\t\tprint(i)\n\t\texit()\n\tif math.floor(i * 1.08) > var0:\n\t\tbreak\nprint(-1)",
      "fixed_code": "import math\nvar0 = int(input())\nvar1 = ':('\nfor i in range(50000):\n\tif math.floor(i * 1.08) == var0:\n\t\tprint(i)\n\t\texit()\n\tif math.floor(i * 1.08) > var0:\n\t\tbreak\nprint(var1)"
    }
  },
  {
    "p_name": "p02881",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nvar1 = 1000000000000.0\nfor i in range(1, int(math.sqrt(var0)) + 1):\n\tif var0 % i == 0:\n\t\tvar2 = var0 / i + i - 2\n\t\tif var2 < var1:\n\t\t\tvar1 = var2\nprint(var1)",
      "fixed_code": "import math\nvar0 = int(input())\nvar1 = 1000000000000.0\nfor i in range(1, int(math.sqrt(var0)) + 1):\n\tif var0 % i == 0:\n\t\tvar2 = var0 / i + i - 2\n\t\tif var2 < var1:\n\t\t\tvar1 = var2\nprint(int(var1))"
    }
  },
  {
    "p_name": "p02594",
    "code": {
      "buggy_code": "var0 = int(input())\nif var0 > 30:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = int(input())\nif var0 >= 30:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03331",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 0\nfor i in range(1, var0):\n\tvar1 = min(var1, sum(map(int, str(i))) + sum(map(int, str(var0 - i))))\nprint(var1)",
      "fixed_code": "var0 = int(input())\nvar1 = float('inf')\nfor i in range(1, var0):\n\tvar1 = min(var1, sum(map(int, str(i))) + sum(map(int, str(var0 - i))))\nprint(var1)"
    }
  },
  {
    "p_name": "p02772",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nfor i in range(var0):\n\tif var1[i] % 2 == 0:\n\t\tif var1[i] % 3 == 0 or var1[i] % 5 == 0:\n\t\t\tprint('APPROVED')\n\t\t\texit()\n\t\telse:\n\t\t\tprint('DENIED')\n\t\t\texit()\nprint('DENIED')",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = var3 = var4 = 0\nfor i in range(var0):\n\tif var1[i] % 2 == 0:\n\t\tif var1[i] % 3 == 0 or var1[i] % 5 == 0:\n\t\t\tvar2 += 1\n\t\telse:\n\t\t\tvar3 += 1\n\telse:\n\t\tvar4 += 1\nif var3 >= 1:\n\tprint('DENIED')\nelif var2 >= 1 or var4 >= 1:\n\tprint('APPROVED')"
    }
  },
  {
    "p_name": "p02398",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split(' '))\nvar3 = 0\nfor var4 in range(var0, var1):\n\tif var0 == var1:\n\t\tbreak\n\telif var2 % var4 == 0:\n\t\tvar3 += 1\nprint(var3)",
      "fixed_code": "var0, var1, var2 = map(int, input().split(' '))\nvar3 = 0\nfor var4 in range(var0, var1 + 1):\n\tif var2 % var4 == 0:\n\t\tvar3 += 1\nprint(var3)"
    }
  },
  {
    "p_name": "p02694",
    "code": {
      "buggy_code": "import sys\nsys.setrecursionlimit(10000000)\nimport math\nvar0 = int(input())\nvar1 = 100\nvar2 = 0\nwhile var1 < var0:\n\tvar1 += math.floor(var1 / 100)\n\tvar2 += 1\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = 100\nvar2 = 0\nwhile var1 < var0:\n\tvar1 += var1 // 100\n\tvar2 += 1\nprint(var2)"
    }
  },
  {
    "p_name": "p02627",
    "code": {
      "buggy_code": "var0 = str(input())\nif var0.islower is True:\n\tprint('a')\nelse:\n\tprint('A')",
      "fixed_code": "var0 = str(input())\nif var0.islower() is True:\n\tprint('a')\nelse:\n\tprint('A')"
    }
  },
  {
    "p_name": "p03986",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 0\nvar2 = 0\nfor var3 in var0:\n\tif var3 == 'S':\n\t\tvar2 += 1\n\telse:\n\t\tvar2 -= 1\n\tif var2 < 0:\n\t\tvar1 += 1\nprint(var1 + (var2 if var2 > 0 else 0))",
      "fixed_code": "var0 = input()\nvar4 = []\nfor var3 in var0:\n\tif var3 == 'S':\n\t\tvar4.append(var3)\n\telif not var4 or var4[-1] == 'T':\n\t\tvar4.append(var3)\n\telse:\n\t\tvar4.pop()\nprint(len(var4))"
    }
  },
  {
    "p_name": "p03252",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = input()\nvar2 = len(var0)\nvar3 = {}\nvar4 = True\nfor i in range(var2):\n\tif var1[i] in var3:\n\t\tif var3[var1[i]] != var0[i]:\n\t\t\tvar4 = False\n\t\t\tvar5\n\telse:\n\t\tvar3[var1[i]] = var0[i]\nif var4:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = input()\nvar1 = input()\nvar2 = len(var0)\nvar6 = {}\nvar7 = {}\nvar4 = True\nfor i in range(var2):\n\tif var1[i] in var6:\n\t\tif var6[var1[i]] != var0[i]:\n\t\t\tvar4 = False\n\t\t\tvar5\n\telse:\n\t\tvar6[var1[i]] = var0[i]\n\tif var0[i] in var7:\n\t\tif var7[var0[i]] != var1[i]:\n\t\t\tvar4 = False\n\t\t\tvar5\n\telse:\n\t\tvar7[var0[i]] = var1[i]\nif var4:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02891",
    "code": {
      "buggy_code": "var0 = list(input())\nk = int(input())\nvar1 = 0\nvar2 = 0\nfor i in range(len(var0) - 1):\n\tif var0[i] != var0[i + 1]:\n\t\tbreak\n\tvar2 += 1\nfor i in range(len(var0) - 1):\n\tif var0[i] == var0[i + 1]:\n\t\tvar0[i + 1] = str(var1)\n\t\tvar1 += 1\nif var0[0] is not var0[-1]:\n\tprint(var1 * k)\nelif var2 % 2 == 0:\n\tprint(var1 * k)\nelse:\n\tprint((var1 + 1) * (k - 1) + var1)",
      "fixed_code": "var0 = list(input())\nk = int(input())\nvar1 = 0\nvar2 = 0\nfor i in range(len(var0) - 1):\n\tif var0[i] != var0[i + 1]:\n\t\tbreak\n\tvar2 += 1\nfor i in range(len(var0) - 1):\n\tif var0[i] == var0[i + 1]:\n\t\tvar0[i + 1] = str(var1)\n\t\tvar1 += 1\nif var0[0] != var0[-1]:\n\tprint(var1 * k)\nelif var2 + 1 == len(var0):\n\tif len(var0) % 2 == 0:\n\t\tprint(k * len(var0) // 2)\n\telif k % 2 == 0:\n\t\tprint(var1 * k // 2 + (var1 + 1) * k // 2)\n\telse:\n\t\tprint(var1 * ((k - 1) // 2 + 1) + (var1 + 1) * (k - 1) // 2)\nelif (var2 + 1) % 2 == 0:\n\tprint(var1 * k)\nelse:\n\tprint((var1 + 1) * (k - 1) + var1)"
    }
  },
  {
    "p_name": "p02706",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar3 = sum(var2)\nif var3 > var0:\n\tprint(-1)\nelse:\n\tprint(var3 - var0)",
      "fixed_code": "var0, var1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar3 = sum(var2)\nif var3 > var0:\n\tprint(-1)\nelse:\n\tprint(var0 - var3)"
    }
  },
  {
    "p_name": "p02399",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = var0 // var1\nvar3 = var0 % var1\nvar4 = var0 / var1\nprint('{} {} {}'.format(var2, var3, var4))",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = var0 // var1\nvar3 = var0 % var1\nvar4 = var0 / var1\nprint('{} {} {:.5f}'.format(var2, var3, var4))"
    }
  },
  {
    "p_name": "p02725",
    "code": {
      "buggy_code": "k, var0 = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nfor i in range(var0):\n\tif i + 1 <= var0 - 1:\n\t\tif var1[i + 1] - var1[i] > var2:\n\t\t\tvar2 = var1[i + 1] - var1[i]\n\telif k - (var1[i] - var1[0]) > var2:\n\t\tvar2 = var1[i] - var1[0]\nprint(var2)",
      "fixed_code": "k, var0 = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nfor i in range(var0):\n\tif i + 1 <= var0 - 1:\n\t\tif var1[i + 1] - var1[i] > var2:\n\t\t\tvar2 = var1[i + 1] - var1[i]\n\telif k - (var1[i] - var1[0]) > var2:\n\t\tvar2 = k - (var1[i] - var1[0])\nprint(k - var2)"
    }
  },
  {
    "p_name": "p02730",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = len(var0)\nif var0[:int((var1 - 1) / 2)] == var0[int((var1 - 1) / 2 - 1)::-1] and var0[int((var1 + 3) / 2 - 1):] == var0[:int((var1 + 1) / 2 - 1):-1]:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = input()\nvar1 = len(var0)\nif var0 == var0[::-1] and var0[:int((var1 - 1) / 2)] == var0[int((var1 - 1) / 2 - 1)::-1] and (var0[int((var1 + 3) / 2 - 1):] == var0[:int((var1 + 1) / 2 - 1):-1]):\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03035",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = input().split()\n\tvar1 = []\n\tfor i in range(2):\n\t\tvar1.append(int(var0[i]))\n\tif var1[0] > 12:\n\t\tprint(var1[1])\n\telif var1[0] > 5:\n\t\tprint(int(var1[1]))\n\telse:\n\t\tprint(0)\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "def method0():\n\tvar0 = input().split()\n\tvar1 = []\n\tfor i in range(2):\n\t\tvar1.append(int(var0[i]))\n\tif var1[0] >= 13:\n\t\tprint(var1[1])\n\telif var1[0] >= 6:\n\t\tprint(int(var1[1] / 2))\n\telse:\n\t\tprint(0)\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p03455",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = var0 * var1\nif var2 % 2 == 0:\n\tprint('Even')\nelse:\n\tprint('0dd')",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = var0 * var1\nif var2 % 2 == 0:\n\tprint('Even')\nelse:\n\tprint('Odd')"
    }
  },
  {
    "p_name": "p02612",
    "code": {
      "buggy_code": "var0 = int(input())\nif var0 > 10000000:\n\tprint(f'{var0 - 10000000}')\nelse:\n\tprint(f'{var0 % 1000}')",
      "fixed_code": "var1 = int(input())\nprint((1000 - var1 % 1000) % 1000)"
    }
  },
  {
    "p_name": "p03079",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nif var0 == var1:\n\tif var0 == var1:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nif var0 == var1:\n\tif var0 == var2:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p04029",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 1\nfor i in range(var0 + 1):\n\tvar1 = var1 + i\nprint(var1)",
      "fixed_code": "var0 = int(input())\nvar1 = 0\nfor i in range(var0 + 1):\n\tvar1 = var1 + i\nprint(var1)"
    }
  },
  {
    "p_name": "p02773",
    "code": {
      "buggy_code": "import collections\nvar0 = int(input())\nvar1 = []\nfor i in range(var0):\n\tvar1.append(input())\nvar1.sort()\nvar2 = collections.Counter(var1)\nprint(var2.most_common()[0][0])\nfor i in range(1, len(var2)):\n\tif var2.most_common()[0][1] == var2.most_common()[i][1]:\n\t\tprint(var2.most_common()[i][0])\n\telse:\n\t\tbreak",
      "fixed_code": "var0 = int(input())\nvar3 = {}\nfor i in range(var0):\n\tvar4 = input()\n\tif var4 in var3:\n\t\tvar3[var4] += 1\n\telse:\n\t\tvar3[var4] = 1\nvar5 = max(var3.values())\nvar3 = sorted(var3.items())\nfor j in var3:\n\tif j[1] == var5:\n\t\tprint(j[0])"
    }
  },
  {
    "p_name": "p02818",
    "code": {
      "buggy_code": "var0, var1, k = map(int, input().split())\nif var0 <= k:\n\tprint(0, var1 + var0 - k)\nelse:\n\tprint(var0 - k, var1)",
      "fixed_code": "var0, var1, k = map(int, input().split())\nif var0 <= k:\n\tvar2 = 0\n\tvar3 = var1 + var0 - k\n\tif var3 < 0:\n\t\tvar3 = 0\nelse:\n\tvar2 = var0 - k\n\tvar3 = var1\nprint(var2, var3)"
    }
  },
  {
    "p_name": "p02881",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [0 for i in range(50)]\nvar2 = 2\nvar3 = 0\nwhile var0 >= var2 and var2 <= 10 ** 6:\n\tif var0 % var2 == 0:\n\t\tvar0 /= var2\n\t\tvar1[var3] = var2\n\t\tvar3 += 1\n\telse:\n\t\tvar2 += 1\nvar1.sort(var4=True)\nvar5 = [1, 1]\nif var1[0] != 0:\n\tfor i in range(50):\n\t\tif var1[i] != 0:\n\t\t\tif var5[0] <= var5[1]:\n\t\t\t\tvar5[0] *= var1[i]\n\t\t\telse:\n\t\t\t\tvar5[1] *= var1[i]\n\tprint(sum(var5) - 2)\nelse:\n\tprint(var0 - 1)",
      "fixed_code": "var0 = int(input())\nvar6 = var0 + 1\nfor i in range(2, 10 ** 6 + 1):\n\tif var0 % i == 0:\n\t\tvar6 = min(var6, i + var0 // i)\nprint(var6 - 2)"
    }
  },
  {
    "p_name": "p02958",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nj = 1\nvar2 = 0\nfor var3 in var1:\n\tif var3 != j:\n\t\tvar2 += 0.5\n\tj += 1\nprint('Yes' if var2 == 0 or var2 == 1 else 'No')",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nj = 1\nvar2 = 0\nfor var3 in var1:\n\tif var3 != j:\n\t\tvar2 += 0.5\n\tj += 1\nprint('YES' if var2 == 0 or var2 == 1 else 'NO')"
    }
  },
  {
    "p_name": "p03711",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = [1, 3, 5, 7, 8, 10, 2]\nvar3 = [4, 6, 9, 11]\nif var0 in var2 and var1 in var2:\n\tprint('Yes')\nelif var0 in var3 and var1 in var3:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = [1, 3, 5, 7, 8, 10, 12]\nvar3 = [4, 6, 9, 11]\nif var0 in var2 and var1 in var2 or (var0 in var3 and var1 in var3):\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02842",
    "code": {
      "buggy_code": "var0 = int(input())\n\ndef method0(var0):\n\tfor i in range(var0):\n\t\tif int(i * 1.08) == var0:\n\t\t\treturn i\n\treturn ':('\nprint(method0(var0))",
      "fixed_code": "var0 = int(input())\n\ndef method0(var0):\n\tfor i in range(var0 + 1):\n\t\tif int(i * 1.08) == var0:\n\t\t\treturn i\n\treturn ':('\nprint(method0(var0))"
    }
  },
  {
    "p_name": "p02772",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = input()\nvar2 = var1.split()\nvar3 = []\nfor i in var2:\n\ti = int(i)\n\tif i % 2 == 0 and (i % 3 == 0 or i % 5 == 0):\n\t\tprint('APROVED')\n\t\tbreak\n\telse:\n\t\tprint('DENIED')\n\t\tbreak",
      "fixed_code": "var0 = input()\nvar1 = input()\nvar2 = var1.split()\nvar4 = []\nvar3 = ''\nfor i in var2:\n\ti = int(i)\n\tif i % 2 == 0:\n\t\tvar4.append(i)\n\telse:\n\t\tvar3 = 'APPROVED'\nfor var1 in var4:\n\tif var1 % 3 == 0 or var1 % 5 == 0:\n\t\tvar3 = 'APPROVED'\n\telse:\n\t\tvar3 = 'DENIED'\n\t\tbreak\nprint(var3)"
    }
  },
  {
    "p_name": "p03434",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = input()\nvar1 = var1.split()\nvar2 = 0\nvar3 = 0\nvar4 = 0\nfor i in range(var0):\n\tif i % 2 == 0:\n\t\tvar2 = var2 + int(var1[i])\n\telse:\n\t\tvar3 = var3 + int(var1[i])\nprint(var2 - var3)",
      "fixed_code": "var0 = int(input())\nvar1 = input()\nvar1 = var1.split()\nfor i in range(var0):\n\tvar1[i] = int(var1[i])\nvar1 = sorted(var1)\nvar1.reverse()\nvar2 = var1[0]\nvar3 = 0\nfor i in range(1, var0):\n\tif i % 2 == 0:\n\t\tvar2 = var2 + var1[i]\n\telse:\n\t\tvar3 = var3 + var1[i]\nprint(var2 - var3)"
    }
  },
  {
    "p_name": "p02934",
    "code": {
      "buggy_code": "import math",
      "fixed_code": "import fractions\n\ndef method0(var0, var1):\n\treturn var0 * var1 // fractions.gcd(var0, var1)\n\ndef method1(var2, var3):\n\treturn var3 // var2\nvar4 = input()\nvar5 = input()\nvar6 = var5.split(' ')\nvar7 = list(map(lambda var0: int(var0), var6))\nvar3 = 1\nfor var2 in var7:\n\tvar3 = method0(var3, var2)\nvar8 = 0\nfor var2 in var7:\n\tvar8 += method1(var2, var3)\nvar9 = var3 / var8\nprint(var9)"
    }
  },
  {
    "p_name": "p03699",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = []\nfor i in range(var0):\n\tvar1.append(int(input()))\nvar2 = []\nfor var3 in var1:\n\tif var3 % 10 != 0:\n\t\tvar2.append(var3)\nif len(var2) == 0:\n\tprint(0)\nelse:\n\tprint(sum(var1) - min(var2))",
      "fixed_code": "var0 = int(input())\nvar1 = []\nfor i in range(var0):\n\tvar1.append(int(input()))\nvar2 = []\nfor var3 in var1:\n\tif var3 % 10 != 0:\n\t\tvar2.append(var3)\nvar4 = sum(var1)\nif var4 % 10 != 0:\n\tprint(var4)\nelif len(var2) == 0:\n\tprint(0)\nelse:\n\tprint(var4 - min(var2))"
    }
  },
  {
    "p_name": "p03997",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = int(input())\nvar2 = int(input())\nvar3 = (var0 + var1) * var2 / var2\nprint(int(var3))",
      "fixed_code": "var0 = int(input())\nvar1 = int(input())\nvar2 = int(input())\nvar3 = (var0 + var1) * var2 / 2\nprint(int(var3))"
    }
  },
  {
    "p_name": "p02866",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 998244353\nif var1[0] != 0:\n\tprint(0)\n\texit()\nif var0 == 1:\n\tprint(1)\n\texit()\nvar1.sort()\nif var1[1] == 0:\n\tprint(0)\n\texit()\nvar3 = []\nvar4 = 1\nif var0 == 2:\n\tif var1 == [0, 1]:\n\t\tprint(1)\n\telse:\n\t\tprint(0)\n\texit()\nfor i in range(1, var0 - 1):\n\tif var1[i] == var1[i + 1]:\n\t\tvar4 += 1\n\telif var1[i + 1] >= var1[i] + 1:\n\t\tvar3.append(var4)\n\t\tvar4 = 1\n\telse:\n\t\tprint(0)\n\t\texit()\nvar3.append(var4)\nvar5 = 1\nfor i in range(len(var3) - 1):\n\tvar5 *= var3[i] ** var3[i + 1]\n\tvar5 %= var2\nprint(var5)",
      "fixed_code": "from collections import Counter\nvar2 = 998244353\nvar0 = int(input())\nvar1 = list(map(int, input().split()))\nvar6 = Counter(var1)\nif var6[0] != 1 or var1[0] != 0:\n\tprint(0)\n\texit()\nvar5 = 1\nfor i in range(1, max(var1) + 1):\n\tvar5 *= pow(var6[i - 1], var6[i], var2)\n\tvar5 %= var2\nprint(var5)"
    }
  },
  {
    "p_name": "p03592",
    "code": {
      "buggy_code": "var0, var1, k = map(int, input().split())\nfor i in range(var0):\n\tfor j in range(var1):\n\t\tif i * (var1 - j) + j * (var0 - i) == k:\n\t\t\tprint('Yes')\n\t\t\texit()\nprint('No')",
      "fixed_code": "var0, var1, k = map(int, input().split())\nfor i in range(var0 + 1):\n\tfor j in range(var1 + 1):\n\t\tif i * (var1 - j) + j * (var0 - i) == k:\n\t\t\tprint('Yes')\n\t\t\texit()\nprint('No')"
    }
  },
  {
    "p_name": "p03827",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = str(input())\nvar2 = var1.count('I')\nvar3 = var1.count('D')\nvar4 = var2 - var3 + 1\nif var4 < 0:\n\tprint(0)\nelse:\n\tprint(var4)",
      "fixed_code": "var0 = int(input())\nvar1 = str(input())\nvar4 = 0\nvar5 = 0\nfor i in range(var0):\n\tif var1[i] == 'I':\n\t\tvar4 += 1\n\t\tvar5 = max(var5, var4)\n\telse:\n\t\tvar4 -= 1\nprint(var5)"
    }
  },
  {
    "p_name": "p03208",
    "code": {
      "buggy_code": "var0, k = map(int, input().split(' '))\nvar1 = []\nfor i in range(var0):\n\tvar1.append(int(input()))\nvar1 = sorted(var1, var2=True)\nprint(var1)\nvar3 = sum(var1) / len(var1)\nvar4 = 10000000000.0\nif abs(max(var1) - var3) > abs(min(var1) - var3):\n\tfor i in range(var0)[k - 1:]:\n\t\tprint(i)\n\t\tif var4 > abs(var1[i] - var1[i - k + 1]):\n\t\t\tvar4 = abs(var1[i] - var1[i - k + 1])\nelse:\n\tfor i in range(var0 - k + 1):\n\t\tif var4 > abs(var1[i + k - 1] - var1[i]):\n\t\t\tvar4 = abs(var1[i + k - 1] - var1[i])\nprint(var4)",
      "fixed_code": "var0, k = map(int, input().split(' '))\nvar1 = []\nfor i in range(var0):\n\tvar1.append(int(input()))\nvar1 = sorted(var1, var2=True)\nvar3 = sum(var1) / len(var1)\nvar4 = 10000000000.0\nif abs(max(var1) - var3) > abs(min(var1) - var3):\n\tfor i in range(var0)[k - 1:]:\n\t\tif var4 > abs(var1[i] - var1[i - k + 1]):\n\t\t\tvar4 = abs(var1[i] - var1[i - k + 1])\nelse:\n\tfor i in range(var0 - k + 1):\n\t\tif var4 > abs(var1[i + k - 1] - var1[i]):\n\t\t\tvar4 = abs(var1[i + k - 1] - var1[i])\nprint(var4)"
    }
  },
  {
    "p_name": "p03477",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nif var0 + var1 >> var2 + var3:\n\tprint('Left')\nelif var0 + var1 == var2 + var3:\n\tprint('Balanced')\nelif var0 + var1 << var2 + var3:\n\tprint('Right')",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nif var0 + var1 > var2 + var3:\n\tprint('Left')\nelif var0 + var1 == var2 + var3:\n\tprint('Balanced')\nelif var0 + var1 < var2 + var3:\n\tprint('Right')"
    }
  },
  {
    "p_name": "p03035",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var0 <= 12 or var0 >= 6:\n\tvar1 /= 2\nelif var0 < 6:\n\tvar1 = 0\nprint(var1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 <= 12 and var0 >= 6:\n\tvar1 /= 2\nelif var0 < 6:\n\tvar1 = 0\nprint(int(var1))"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "import math\nvar0, var1 = input().split()\nvar0 = int(var0)\nvar1 = float(var1)\nprint(math.floor(var0 * var1))",
      "fixed_code": "var0, var1 = input().split()\nvar0 = int(var0)\nvar1 = int(var1[0] + var1[2] + var1[3])\nprint(var0 * var1 // 100)"
    }
  },
  {
    "p_name": "p02687",
    "code": {
      "buggy_code": "var0 = 'ABC'\nif var0 == 'ABC':\n\tprint('ARC')\nif var0 == 'ARC':\n\tprint('ABC')",
      "fixed_code": "var0 = input()\nif var0 == 'ABC':\n\tprint('ARC')\nelse:\n\tprint('ABC')"
    }
  },
  {
    "p_name": "p02953",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = True\nvar3 = max(var1)\nif var3 - var1[var0 - 1] > 1 and var3 != var1[var0 - 1]:\n\tvar2 = False\nif var2:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar4 = var1\nvar2 = True\nvar3 = max(var1)\nvar5 = var1.index(max(var1))\nif var3 - var1[var0 - 1] > 1 and var3 != var1[var0 - 1]:\n\tvar2 = False\nif var5 == var0 - 1 and var0 != 1:\n\tdel var1[var0 - 1]\n\tvar3 = max(var1)\n\tvar1 = var4\n\tvar5 = var1.index(var3)\nif var2:\n\tfor i in range(var0 - 1):\n\t\tif i > var5:\n\t\t\tif var1[i] + 1 < var1[var5]:\n\t\t\t\tvar2 = False\nif var2:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02682",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nif var3 > var0 + var1:\n\tprint(var0 - var2)\nelse:\n\tprint(var0)",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nif var3 > var0 + var1:\n\tprint(var0 - (var3 - var0 - var1))\nelif var3 < var0:\n\tprint(var3)\nelse:\n\tprint(var0)"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "var0, var1 = input().split()\nvar0 = int(var0)\nvar1 = float(var1)\nvar2 = 0\nvar1 *= 100\nfor i in range(int(var1)):\n\tvar2 += var0\nprint(int(var2 // 100))",
      "fixed_code": "var0, var1 = input().split()\nvar0 = int(var0)\nvar1 = list(var1.split('.'))\nvar1 = int(var1[0]) * 100 + int(var1[1])\nprint(var0 * var1 // 100)"
    }
  },
  {
    "p_name": "p03150",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 'keyence'\nfor i in range(len(var1)):\n\tprint(var0[:i], var0[i - len(var1):])\n\tif var1[:i] == var0[:i] and var1[i - len(var1):] == var0[i - len(var1):]:\n\t\tprint('YES')\n\t\texit()\nif var1 == var0[:len(var1)] or var1 == var0[-len(var1):]:\n\tprint('YES')\n\texit()\nprint('NO')",
      "fixed_code": "var0 = input()\nvar1 = 'keyence'\nfor i in range(len(var1)):\n\tif var1[:i] == var0[:i] and var1[i - len(var1):] == var0[i - len(var1):]:\n\t\tprint('YES')\n\t\texit()\nif var1 == var0[:len(var1)] or var1 == var0[-len(var1):]:\n\tprint('YES')\n\texit()\nprint('NO')"
    }
  },
  {
    "p_name": "p02818",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nif var0 <= var2:\n\tprint('0 {}'.format(var1 - (var2 - var0)))\nelse:\n\tprint('{} {}'.format(var0 - var2, var1))",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nif var0 <= var2:\n\tprint('0 {}'.format(max(0, var1 - (var2 - var0))))\nelse:\n\tprint('{} {}'.format(var0 - var2, var1))"
    }
  },
  {
    "p_name": "p03838",
    "code": {
      "buggy_code": "import math\nvar0 = 0\nvar1, var2 = map(int, input().split())\nvar3 = math.fabs(var1)\nvar4 = math.fabs(var2)\nvar0 += int(math.fabs(var3 - var4))\nif var1 > var2:\n\tif var1 >= 0 and var2 <= 0:\n\t\tvar0 += 1\n\tif var1 > 0 and var2 > 0:\n\t\tvar0 += 1\n\tif var1 < 0 and var2 < 0:\n\t\tvar0 += 2\nif var1 < var2:\n\tif var1 < 0 and var2 > 0:\n\t\tvar0 += 1\nprint(var0)",
      "fixed_code": "import math\nvar0 = 0\nvar1, var2 = map(int, input().split())\nvar3 = math.fabs(var1)\nvar4 = math.fabs(var2)\nvar0 += int(math.fabs(var3 - var4))\nif var1 > var2:\n\tif var1 >= 0 and var2 <= 0:\n\t\tvar0 += 1\n\tif var1 > 0 and var2 > 0:\n\t\tvar0 += 2\n\tif var1 < 0 and var2 < 0:\n\t\tvar0 += 2\nif var1 < var2:\n\tif var1 < 0 and var2 > 0:\n\t\tvar0 += 1\nprint(var0)"
    }
  },
  {
    "p_name": "p02640",
    "code": {
      "buggy_code": "import sys\nvar0 = 1 << 60\nvar1 = 10 ** 9 + 7\nsys.setrecursionlimit(2147483647)\ninput = lambda: sys.stdin.readline().rstrip()\n\ndef method0():\n\tvar2, var3 = map(int, input().split())\n\tif var3 & 1:\n\t\tprint('No')\n\tprint('Yes' if 2 * var2 <= var3 <= 4 * var2 else 'No')\nmethod0()",
      "fixed_code": "import sys\nvar0 = 1 << 60\nvar1 = 10 ** 9 + 7\nsys.setrecursionlimit(2147483647)\ninput = lambda: sys.stdin.readline().rstrip()\n\ndef method0():\n\tvar2, var3 = map(int, input().split())\n\tif var3 & 1:\n\t\tprint('No')\n\t\treturn\n\tprint('Yes' if 2 * var2 <= var3 <= 4 * var2 else 'No')\nmethod0()"
    }
  },
  {
    "p_name": "p02640",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nfor i in range(var0):\n\tj = var0 - i\n\tif 2 * i + 4 * j == var1:\n\t\tprint('Yes')\n\t\texit()\nprint('No')",
      "fixed_code": "var0, var1 = map(int, input().split())\nfor i in range(var0 + 1):\n\tj = var0 - i\n\tif 2 * i + 4 * j == var1:\n\t\tprint('Yes')\n\t\texit()\nprint('No')"
    }
  },
  {
    "p_name": "p03137",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = sorted(list(map(int, input().split())))\nvar3 = sorted([var2[i + 1] - var2[i] for i in range(var1 - 1)])\nif var3 != []:\n\tprint(sum(var3[:var1 - var0]))\nelse:\n\tprint(0)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = sorted(list(map(int, input().split())))\nvar3 = sorted([var2[i + 1] - var2[i] for i in range(var1 - 1)])\nif var3 != []:\n\tif len(var3) == 1:\n\t\tprint(*var3)\n\telif var0 == 1:\n\t\tprint(sum(var3))\n\telse:\n\t\tprint(sum(var3[:-(var0 - 1)]))\nelse:\n\tprint(0)"
    }
  },
  {
    "p_name": "p02886",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nfor i in range(var0):\n\tfor j in range(var0 - 1):\n\t\tvar2 = var2 + var1[i] * var1[j + 1]\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nfor i in range(var0):\n\tfor j in range(i + 1, var0):\n\t\tvar2 = var2 + var1[i] * var1[j]\nprint(var2)"
    }
  },
  {
    "p_name": "p02571",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = input()\nvar2 = float('inf')\nfor i in range(len(var0) - len(var1)):\n\tvar3 = 0\n\tfor j in range(len(var1)):\n\t\tif var0[i + j] != var1[j]:\n\t\t\tvar3 += 1\n\tvar2 = min(var3, var2)\nprint(var2)",
      "fixed_code": "var0 = input()\nvar1 = input()\nvar2 = float('inf')\nfor i in range(len(var0) - len(var1) + 1):\n\tvar3 = 0\n\tfor j in range(len(var1)):\n\t\tif var0[i + j] != var1[j]:\n\t\t\tvar3 += 1\n\tvar2 = min(var3, var2)\nprint(var2)"
    }
  },
  {
    "p_name": "p02682",
    "code": {
      "buggy_code": "var0, var1, var2, k = map(int, input().split())\nif k <= var0 + var1:\n\tprint(var0)\nelse:\n\tprint(var0 - (k - var0 - var1))",
      "fixed_code": "var0, var1, var2, k = map(int, input().split())\nvar3 = min(var0, k)\nk -= var3\nvar4 = min(var1, k)\nk -= var4\nvar5 = k\nprint(var3 - var5)"
    }
  },
  {
    "p_name": "p03943",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = [int(var1) for var1 in input().split()]\n\tif var0[0] > var0[1] + var0[2]:\n\t\tprint('No')\n\t\treturn\n\telif var0[1] > var0[2] + var0[0]:\n\t\tprint('No')\n\t\treturn\n\telif var0[2] > var0[0] + var0[1]:\n\t\tprint('No')\n\t\treturn\n\telse:\n\t\tprint('Yes')\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "def method0():\n\tvar2, var3, var4 = map(int, input().split())\n\tif var2 == var3 + var4 or var3 == var4 + var2 or var4 == var2 + var3:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02766",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nwhile var0 / var1 >= 1:\n\tvar0 = var0 / var1\n\tvar2 += 1\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 1\nwhile var0 >= var1 ** var2:\n\tvar2 += 1\nprint(var2)"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = var0 * (var1 // 2) + (var0 + 1) // 2\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 == 1 or var1 == 1:\n\tprint(1)\nelse:\n\tvar2 = var0 * (var1 // 2) + (var0 + 1) // 2 * (var1 % 2)\n\tprint(var2)"
    }
  },
  {
    "p_name": "p03438",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = int(input())\n\tvar1 = list(map(int, input().split()))\n\tvar2 = list(map(int, input().split()))\n\tvar3 = sum(var2) - sum(var1)\n\tif var3 < 0:\n\t\tprint('No')\n\t\treturn\n\tvar4 = [var5 - var6 for var5, var6 in zip(var1, var2)]\n\tvar7 = sum((var8 for var8 in var4 if var8 < 0))\n\tprint(var3, var7)\n\tif abs(var7) > var3 * 2:\n\t\tprint('No')\n\t\treturn\n\tassert var3 * 2 + sum((var8 for var8 in var4 if var8 > 0)) + var7 == var3\n\tprint('Yes')\nmethod0()",
      "fixed_code": "def method0():\n\tvar0 = int(input())\n\tvar1 = list(map(int, input().split()))\n\tvar2 = list(map(int, input().split()))\n\tvar3 = sum(var2) - sum(var1)\n\tif var3 < 0:\n\t\tprint('No')\n\t\treturn\n\tvar4 = [var5 - var6 for var5, var6 in zip(var1, var2)]\n\tvar7 = sum(((abs(var8) + 1) // 2 for var8 in var4 if var8 < 0))\n\tif abs(var7) > var3:\n\t\tprint('No')\n\t\treturn\n\tprint('Yes')\nmethod0()"
    }
  },
  {
    "p_name": "p02700",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nif var2 // var1 <= var0 // var3:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nif var2 // var1 <= var0 // var3 and var0 / var3 != var0 // var3:\n\tprint('Yes')\nelif var2 // var1 == var0 // var3 and var0 / var3 == var0 // var3 and (var2 // var1 == var2 / var1):\n\tprint('Yes')\nelif var2 // var1 - 1 == var0 // var3 and var2 // var1 == var2 / var1 and (var0 // var3 != var0 / var3):\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 2019\nvar3 = var0 % var2\nvar4 = (var0 + 1) % var2\nif var3 == 0 or var0 + 2019 - var3 <= var1:\n\tprint(0)\nelse:\n\tprint(var3 * var4 % var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 2019\nif var1 - var0 >= 2020:\n\tprint(0)\n\texit()\nelse:\n\tvar5 = []\n\tfor i in range(var0, var1 + 1):\n\t\tvar5.append(i % var2)\nvar6 = 2018\nfor i in var5:\n\tfor j in var5:\n\t\tif i != j:\n\t\t\tvar6 = min(var6, i * j % var2)\nprint(var6)"
    }
  },
  {
    "p_name": "p02571",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = input()\nvar2 = 10 ** 18\nvar3 = 0\nfor i in range(len(var0) - len(var1) + 1):\n\tfor j in range(len(var1)):\n\t\tif var1[j] != var0[i + j]:\n\t\t\tvar3 += 1\n\t\t\tvar3 = min(var3, var2)\nprint(var3)",
      "fixed_code": "var0 = input()\nvar1 = input()\nvar2 = 10 ** 18\nfor i in range(len(var0) - len(var1) + 1):\n\tvar3 = 0\n\tfor j in range(len(var1)):\n\t\tif var1[j] != var0[i + j]:\n\t\t\tvar3 += 1\n\tvar2 = min(var3, var2)\nprint(var2)"
    }
  },
  {
    "p_name": "p03767",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = input().split()\nvar1 = [int(i) for i in var1]\nvar2 = var1[var0:len(var1) + 1]\nprint(sum([var2[i] for i in range(1, 2 * var0 + 1, 2)]))",
      "fixed_code": "var0 = int(input())\nvar1 = input().split()\nvar1 = [int(i) for i in var1]\nvar1 = sorted(var1)\nvar2 = var1[var0:len(var1) + 1]\nprint(sum([var2[i] for i in range(0, 2 * var0, 2)]))"
    }
  },
  {
    "p_name": "p02724",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = int(var0 / 500)\nvar2 = (var0 - 500 * var1) % 5\nprint('{}'.format(1000 * var1 + 5 * var2))",
      "fixed_code": "var0 = int(input())\nvar1 = int(var0 / 500)\nvar2 = int((var0 - 500 * var1) / 5)\nprint('{}'.format(1000 * var1 + 5 * var2))"
    }
  },
  {
    "p_name": "p03286",
    "code": {
      "buggy_code": "import math\n\ndef method0(var0):\n\tif var0 >= 0:\n\t\treturn -1 * (var0 // 2)\n\telse:\n\t\treturn math.ceil(-1 * (var0 / 2))\nvar1 = int(input())\nvar2 = ''\nwhile var1 != 1:\n\tif var1 % 2 == 1:\n\t\tvar2 = '1' + var2\n\telse:\n\t\tvar2 = '0' + var2\n\tvar1 = method0(var1)\n\tprint(var1)\nprint('1' + var2)",
      "fixed_code": "import math\n\ndef method0(var0):\n\tif var0 >= 0:\n\t\treturn -1 * (var0 // 2)\n\telse:\n\t\treturn math.ceil(-1 * (var0 / 2))\nvar1 = int(input())\nvar2 = ''\nif var1 == 0:\n\tprint(0)\nelse:\n\twhile var1 != 1:\n\t\tif var1 % 2 == 1:\n\t\t\tvar2 = '1' + var2\n\t\telse:\n\t\t\tvar2 = '0' + var2\n\t\tvar1 = method0(var1)\n\tprint('1' + var2)"
    }
  },
  {
    "p_name": "p03721",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = []\nfor i in range(var0):\n\tvar3, var4 = map(int, input().split())\n\tif len(var2) < 4 or var3 < var2[-1]:\n\t\tvar2.extend([var3] * var4)\n\t\tvar2.sort()\n\t\tvar2 = var2[:4]\nprint(var2[-1])",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar5 = []\nfor i in range(var0):\n\tvar5.append(tuple(map(int, input().split())))\nvar5.sort(var6=lambda var7: (var7[0], -var7[1]))\nvar8 = 0\nvar9 = 0\nfor var3, var4 in var5:\n\tvar8 += var4\n\tvar9 = var3\n\tif var8 >= var1:\n\t\tbreak\nprint(var9)"
    }
  },
  {
    "p_name": "p02681",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = input()\nif var1.startswith(var0):\n\tif len(var1) == len(var0) + 1:\n\t\tprint('YES')\nelse:\n\tprint('No')",
      "fixed_code": "var2 = input()\nvar3 = input()\nif var3.startswith(var2) and str.isalpha(var3):\n\tif len(var3) == len(var2) + 1:\n\t\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "from math import sqrt\nvar0, var1, var2 = map(int, input().split())\nvar3 = sqrt(var0 * var1)\nif var0 + var1 + 2 * var3 < var2:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "from numpy import sqrt\nvar0, var1, var2 = map(int, input().split())\nif 4 * var0 * var1 < (var2 - var0 - var1) ** 2 and var2 - var0 - var1 > 0:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03061",
    "code": {
      "buggy_code": "from fractions import *\n\ndef method0(k, var0):\n\tk += var1 - 1\n\tvar2[k] = var0\n\twhile k + 1:\n\t\tk = ~-k // 2\n\t\tvar2[k] = gcd(var2[2 * k + 1], var2[2 * k + 2])\n\ndef method1(var3, var4):\n\tvar5, var6 = (var3 + var1, var4 + var1)\n\tvar7 = 0\n\twhile var5 < var6:\n\t\tif var6 & 1:\n\t\t\tvar6 -= 1\n\t\t\tvar7 = gcd(var7, var2[var6 - 1])\n\t\tif var5 & 1:\n\t\t\tvar7 = gcd(var7, var2[var5 - 1])\n\t\t\tvar5 += 1\n\t\tvar5 >>= 1\n\t\tvar6 >>= 1\n\treturn var7\nvar8, *var9 = map(int, open(0).read().split())\nvar1 = 2 ** (var8 - 1).bit_length()\nvar2 = [0] * 2 * var1\nfor i in range(var8):\n\tmethod0(i, var9[i])\nprint(max((gcd(method1(0, i), method1(i + 1, var8)) for i in range(var8 - 1))))",
      "fixed_code": "from fractions import *\n\ndef method0(k, var0):\n\tk += var1 - 1\n\tvar2[k] = var0\n\twhile k + 1:\n\t\tk = ~-k // 2\n\t\tvar2[k] = gcd(var2[2 * k + 1], var2[2 * k + 2])\n\ndef method1(var3, var4):\n\tvar5, var6 = (var3 + var1, var4 + var1)\n\tvar7 = 0\n\twhile var5 < var6:\n\t\tif var6 & 1:\n\t\t\tvar6 -= 1\n\t\t\tvar7 = gcd(var7, var2[var6 - 1])\n\t\tif var5 & 1:\n\t\t\tvar7 = gcd(var7, var2[var5 - 1])\n\t\t\tvar5 += 1\n\t\tvar5 >>= 1\n\t\tvar6 >>= 1\n\treturn var7\nvar8, *var9 = map(int, open(0).read().split())\nvar1 = 2 ** (var8 - 1).bit_length()\nvar2 = [0] * 2 * var1\nfor i in range(var8):\n\tmethod0(i, var9[i])\nprint(max((gcd(method1(0, i), method1(i + 1, var8)) for i in range(var8))))"
    }
  },
  {
    "p_name": "p03729",
    "code": {
      "buggy_code": "var0, var1, var2 = input().split()\nif var0[-1] == var1[0] and var1[-1] == var2[0]:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2 = input().split()\nif var0[-1] == var1[0] and var1[-1] == var2[0]:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p03137",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = sorted(list(map(int, input().split())))\nif var0 >= var1:\n\tprint(0)\nelse:\n\tvar3 = [0] * (var1 - 1)\n\tfor i in range(var1 - 1):\n\t\tvar3[i] = var2[i + 1] - var2[i]\n\tvar3.sort(var4=True)\n\tprint(sum(var3) - sum(var3[0:var1 - var0 - 2]))",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = sorted(list(map(int, input().split())))\nif var0 >= var1:\n\tprint(0)\nelse:\n\tvar3 = [0] * (var1 - 1)\n\tfor i in range(var1 - 1):\n\t\tvar3[i] = var2[i + 1] - var2[i]\n\tvar3.sort()\n\tprint(sum(var3[0:var1 - var0]))"
    }
  },
  {
    "p_name": "p02700",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nwhile True:\n\tvar2 -= var1\n\tif var2 <= 0:\n\t\tprint('No')\n\t\tbreak\n\tvar0 -= var3\n\tif var0 <= 0:\n\t\tprint('Yes')\n\t\tbreak",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nwhile True:\n\tvar2 -= var1\n\tif var2 <= 0:\n\t\tprint('Yes')\n\t\tbreak\n\tvar0 -= var3\n\tif var0 <= 0:\n\t\tprint('No')\n\t\tbreak"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "from collections import defaultdict, deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys, random, itertools, math\nsys.setrecursionlimit(10 ** 5)\ninput = sys.stdin.readline\nvar0 = math.var0\n\ndef method0():\n\treturn var2(map(int, input().split()))\n\ndef method1():\n\treturn var2(map(float, input().split()))\n\ndef method2():\n\treturn var2(map(lambda var1: int(var1) - 1, input().split()))\n\ndef method3():\n\treturn int(input())\n\ndef method4():\n\treturn float(input())\n\ndef method5():\n\treturn var2(map(var2, input().split()))\n\ndef method6():\n\treturn var2(input().rstrip())\n\ndef method7(var3):\n\treturn [method3() for _ in range(var3)]\n\ndef method8(var3):\n\treturn [method0() for _ in range(var3)]\n\ndef method9(var3):\n\treturn [method4() for _ in range(var3)]\n\ndef method10(var3):\n\treturn [method0() for _ in range(var3)]\n\ndef method11(var3):\n\treturn [method2() for _ in range(var3)]\n\ndef method12(var3):\n\treturn [method6() for _ in range(var3)]\n\ndef method13(var3):\n\treturn [method5() for _ in range(var3)]\nvar4 = 1000000007\nvar5 = 10000000000.0\n\ndef method14():\n\tvar6, var7, var8 = method0()\n\tprint('Yes' if 4 * var6 * var7 < (var8 - var6 - var7) ** 2 else 'No')\n\treturn\nif __name__ == '__main__':\n\tmethod14()",
      "fixed_code": "from collections import defaultdict, deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys, random, itertools, math\nsys.setrecursionlimit(10 ** 5)\ninput = sys.stdin.readline\nvar0 = math.var0\n\ndef method0():\n\treturn var2(map(int, input().split()))\n\ndef method1():\n\treturn var2(map(float, input().split()))\n\ndef method2():\n\treturn var2(map(lambda var1: int(var1) - 1, input().split()))\n\ndef method3():\n\treturn int(input())\n\ndef method4():\n\treturn float(input())\n\ndef method5():\n\treturn var2(map(var2, input().split()))\n\ndef method6():\n\treturn var2(input().rstrip())\n\ndef method7(var3):\n\treturn [method3() for _ in range(var3)]\n\ndef method8(var3):\n\treturn [method0() for _ in range(var3)]\n\ndef method9(var3):\n\treturn [method4() for _ in range(var3)]\n\ndef method10(var3):\n\treturn [method0() for _ in range(var3)]\n\ndef method11(var3):\n\treturn [method2() for _ in range(var3)]\n\ndef method12(var3):\n\treturn [method6() for _ in range(var3)]\n\ndef method13(var3):\n\treturn [method5() for _ in range(var3)]\nvar4 = 1000000007\nvar5 = 10000000000.0\n\ndef method14():\n\tvar6, var7, var8 = method0()\n\tprint('No' if 4 * var6 * var7 >= (var8 - var6 - var7) ** 2 or var8 - var6 - var7 < 0 else 'Yes')\n\treturn\nif __name__ == '__main__':\n\tmethod14()"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = input()\nvar2 = list(map(int, var1.split(' ')))\nvar3 = var2[0]\nfor i in range(1, var0):\n\tvar3 *= var2[i]\n\tif var3 >= 1e+18:\n\t\tprint(-1)\n\t\tbreak\nif var3 < 1e+18:\n\tprint(var3)",
      "fixed_code": "import sys\nvar0 = int(input())\nvar1 = input()\nvar4 = 1\nvar1 = list(map(int, var1.split(' ')))\nvar1.sort()\nfor i in range(var0):\n\tvar5 = var1[i]\n\tvar4 *= var5\n\tif var4 > 1000000000000000000:\n\t\tprint(-1)\n\t\tsys.exit()\nprint(var4)"
    }
  },
  {
    "p_name": "p02646",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2, var3 = map(int, input().split())\nvar4 = int(input())\nvar5 = abs(var0 - var2)\nvar6 = var1 - var3\nif var6 <= 0:\n\tprint('NO')\nelif (var5 / var6 <= var4) & (var5 % var6 == 0):\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2, var3 = map(int, input().split())\nvar4 = int(input())\nvar5 = abs(var0 - var2)\nvar6 = var1 - var3\nif var6 <= 0:\n\tprint('NO')\nelif var5 / var6 <= var4:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "import sys, re, os\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import permutations, combinations, product, accumulate\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom fractions import gcd\n\ndef input():\n\treturn sys.stdin.readline().strip()\n\ndef method0():\n\treturn input()\n\ndef method1():\n\treturn int(input())\n\ndef method2():\n\treturn map(int, input().split())\n\ndef method3():\n\treturn map(str, input().split())\n\ndef method4():\n\treturn list(map(int, input().split()))\n\ndef method5():\n\treturn list(map(str, input().split()))\nsys.setrecursionlimit(10 ** 9)\nvar0 = sys.maxsize\nvar1 = 10 ** 9 + 7\nvar2, var3, var4 = method2()\nvar5 = 'No'\nvar6 = pow(10, 4)\nvar7 = pow(var2 - var3, 2) - pow(var2, 2)\nvar8 = pow(var3 - var4, 2) - pow(var3, 2)\nvar9 = pow(var4 - var2, 2) - pow(var4, 2)\nif 0 < var7 + var8 + var9:\n\tvar5 = 'Yes'\nprint(var5)",
      "fixed_code": "import sys, re, os\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import permutations, combinations, product, accumulate\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom fractions import gcd\n\ndef input():\n\treturn sys.stdin.readline().strip()\n\ndef method0():\n\treturn input()\n\ndef method1():\n\treturn int(input())\n\ndef method2():\n\treturn map(int, input().split())\n\ndef method3():\n\treturn map(str, input().split())\n\ndef method4():\n\treturn list(map(int, input().split()))\n\ndef method5():\n\treturn list(map(str, input().split()))\nsys.setrecursionlimit(10 ** 9)\nvar0 = sys.maxsize\nvar1 = 10 ** 9 + 7\nfrom decimal import *\nvar2, var3, var4 = method2()\nif var4 - var2 - var3 > 0 and (var4 - var2 - var3) ** 2 > 4 * var2 * var3:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03211",
    "code": {
      "buggy_code": "1234567876",
      "fixed_code": "var0 = input()\nvar1 = 999\nfor i in range(len(var0) - 2):\n\tvar2 = int(var0[i:i + 3]) - 753\n\tif abs(var2) < var1:\n\t\tvar1 = abs(var2)\nprint(var1)"
    }
  },
  {
    "p_name": "p03095",
    "code": {
      "buggy_code": "import collections\nvar0 = int(input())\nvar1 = input()\nvar1 = collections.Counter(var1)\nvar2 = []\nfor i in var1.values():\n\tvar2.append(i)\nvar3 = 1\nwhile var2:\n\tvar3 *= var2.pop() + 1\nprint(var3 - 1)",
      "fixed_code": "import collections\nvar0 = int(input())\nvar1 = input()\nvar1 = collections.Counter(var1)\nvar3 = 1\nfor i in var1.values():\n\tvar3 *= i + 1\nprint((var3 - 1) % 1000000007)"
    }
  },
  {
    "p_name": "p03359",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nprint(min(var0, var1))",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 > var1:\n\tprint(var0 - 1)\nelse:\n\tprint(min(var0, var1))"
    }
  },
  {
    "p_name": "p03386",
    "code": {
      "buggy_code": "var0 = list(map(int, input().split()))\nvar1 = []\nif var0[0] + var0[2] - 1 >= var0[1] - var0[2]:\n\tfor i in range(var0[0], var0[1] + 1):\n\t\tprint(i)\n\tquit()\nfor i in range(var0[0], var0[0] + var0[2]):\n\tvar1.append(i)\nfor i in range(var0[1] - var0[2] + 1, var0[1] + 1):\n\tvar1.append(i)\nprint(var1)",
      "fixed_code": "var0 = list(map(int, input().split()))\nvar1 = []\nif var0[0] + var0[2] - 1 >= var0[1] - var0[2]:\n\tfor i in range(var0[0], var0[1] + 1):\n\t\tprint(i)\n\tquit()\nfor i in range(var0[0], var0[0] + var0[2]):\n\tvar1.append(i)\nfor i in range(var0[1] - var0[2] + 1, var0[1] + 1):\n\tvar1.append(i)\nfor i in var1:\n\tprint(i)"
    }
  },
  {
    "p_name": "p02987",
    "code": {
      "buggy_code": "import sys\nfrom fractions import gcd\nfrom collections import defaultdict\nsys.setrecursionlimit(10 ** 7)\nvar0 = 10 ** 18\nvar1 = 10 ** 9 + 7\n\ndef method0():\n\treturn var2(map(int, sys.stdin.readline().split()))\n\ndef method1():\n\treturn int(sys.stdin.readline())\n\ndef method2():\n\treturn var2(map(var2, sys.stdin.readline().split()))\n\ndef method3():\n\treturn var2(sys.stdin.readline())\n\ndef method4():\n\tvar3 = method3()\n\tvar4 = defaultdict(int)\n\tfor i in range(4):\n\t\tvar4[var3[i]] += 1\n\tif len(var4) == 2:\n\t\tfor var5 in var4.values():\n\t\t\tif var5 != 2:\n\t\t\t\tbreak\n\t\telse:\n\t\t\tprint('YES')\n\t\t\treturn\n\tprint('BAD')\nif __name__ == '__main__':\n\tmethod4()",
      "fixed_code": "import sys\nfrom fractions import gcd\nfrom collections import defaultdict\nsys.setrecursionlimit(10 ** 7)\nvar0 = 10 ** 18\nvar1 = 10 ** 9 + 7\n\ndef method0():\n\treturn var2(map(int, sys.stdin.readline().split()))\n\ndef method1():\n\treturn int(sys.stdin.readline())\n\ndef method2():\n\treturn var2(map(var2, sys.stdin.readline().split()))\n\ndef method3():\n\treturn var2(sys.stdin.readline())\n\ndef method4():\n\tvar3 = method3()\n\tvar4 = defaultdict(int)\n\tfor i in range(4):\n\t\tvar4[var3[i]] += 1\n\tif len(var4) == 2:\n\t\tfor var5 in var4.values():\n\t\t\tif var5 != 2:\n\t\t\t\tbreak\n\t\telse:\n\t\t\tprint('Yes')\n\t\t\treturn\n\tprint('No')\nif __name__ == '__main__':\n\tmethod4()"
    }
  },
  {
    "p_name": "p02922",
    "code": {
      "buggy_code": "var0, var1 = [int(i) for i in input().split()]\nvar2 = 0\nvar3 = 0\nwhile var3 < var1:\n\tvar2 += 1\n\tvar3 += var0 - 1\n\tvar3 += 1\nprint(var2)",
      "fixed_code": "var0, var1 = [int(i) for i in input().split()]\nvar4 = 0\nvar5 = 1\nwhile var5 < var1:\n\tvar5 += var0 - 1\n\tvar4 += 1\nprint(var4)"
    }
  },
  {
    "p_name": "p03075",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = int(input())\nvar2 = int(input())\nvar3 = int(input())\nvar4 = int(input())\nk = int(input())\nif var4 - var0 < k:\n\tprint('Yay!')\nelse:\n\tprint(':(')",
      "fixed_code": "var5 = []\nfor i in range(5):\n\tvar0 = int(input())\n\tvar5.append(var0)\nk = int(input())\nvar6 = True\nfor i in range(5):\n\tfor j in range(5):\n\t\tif abs(var5[i] - var5[j]) > k:\n\t\t\tvar6 = False\nif var6:\n\tprint('Yay!')\nelse:\n\tprint(':(')"
    }
  },
  {
    "p_name": "p02853",
    "code": {
      "buggy_code": "var0, var1 = input().split()\nvar2 = 0\nvar3 = 0\ntry:\n\tif 1 <= int(var0) <= 205 and 1 <= int(var1) <= 205:\n\t\tif int(var0) == 1 or int(var1) == 1:\n\t\t\tvar2 = 400000\n\t\tif int(var0) == 1:\n\t\t\tvar3 += 300000\n\t\telif int(var0) == 2:\n\t\t\tvar3 += 200000\n\t\telif int(var0) == 3:\n\t\t\tvar3 += 100000\n\t\tif int(var1) == 1:\n\t\t\tvar3 += 300000\n\t\telif int(var1) == 2:\n\t\t\tvar3 += 200000\n\t\telif int(var1) == 3:\n\t\t\tvar3 += 100000\n\tprint(var3 + var2)\nexcept:\n\tprint(var3 + var2)",
      "fixed_code": "var0, var1 = input().split()\nvar3 = 0\ntry:\n\tif 1 <= int(var0) <= 205 and 1 <= int(var1) <= 205:\n\t\tif int(var0) == 1 and int(var1) == 1:\n\t\t\tvar3 += 400000\n\t\tif int(var0) == 1:\n\t\t\tvar3 += 300000\n\t\telif int(var0) == 2:\n\t\t\tvar3 += 200000\n\t\telif int(var0) == 3:\n\t\t\tvar3 += 100000\n\t\tif int(var1) == 1:\n\t\t\tvar3 += 300000\n\t\telif int(var1) == 2:\n\t\t\tvar3 += 200000\n\t\telif int(var1) == 3:\n\t\t\tvar3 += 100000\n\tprint(var3)\nexcept:\n\tprint(var3)"
    }
  },
  {
    "p_name": "p02755",
    "code": {
      "buggy_code": "import numpy as var0\nvar1 = list(map(int, input().split()))\nvar2 = var1[0] / 0.08\nvar3 = (var1[0] + 1) / 0.08\nvar4 = var1[1] / 0.1\nvar5 = (var1[1] + 1) / 0.1\nvar6 = 20000\nif var2 < var4:\n\tvar7 = var2\nelse:\n\tvar7 = var4\nvar8 = int(var0.ceil(var7))\nfor i in range(var8, 10001):\n\tif i >= var2 and i <= var3:\n\t\tif i >= var4 and i <= var5:\n\t\t\tvar6 = i\n\t\t\tbreak\nif var6 == 20000:\n\tprint(-1)\nelse:\n\tprint(var6)",
      "fixed_code": "import numpy as var0\nvar1 = list(map(int, input().split()))\nvar2 = var1[0] / 0.08\nvar3 = (var1[0] + 1) / 0.08\nvar4 = var1[1] / 0.1\nvar5 = (var1[1] + 1) / 0.1\nvar6 = 20000\nif var2 < var4:\n\tvar7 = var2\nelse:\n\tvar7 = var4\nvar8 = int(var0.floor(var7))\nfor i in range(var8, 10001):\n\tif i >= var2 and i < var3:\n\t\tif i >= var4 and i < var5:\n\t\t\tvar6 = i\n\t\t\tbreak\nif var6 == 20000:\n\tprint(-1)\nelse:\n\tprint(var6)"
    }
  },
  {
    "p_name": "p03208",
    "code": {
      "buggy_code": "import collections\nvar0, k = input().split()\nvar0 = int(var0)\nk = int(k)\nvar1 = []\nfor i in range(var0):\n\tvar1.append(int(input()))\nvar1 = sorted(var1)\nvar2 = collections.Counter(var1)\nvar3 = False\nfor i in var2:\n\tif var2[i] >= 3:\n\t\tprint(0)\n\t\tvar3 = True\n\t\tbreak\nvar4 = []\nfor i in range(0, var0 - k, k):\n\tvar4.append(abs(var1[i] - var1[i + k - 1]))\nprint(min(var4))",
      "fixed_code": "import collections\nvar0, k = input().split()\nvar0 = int(var0)\nk = int(k)\nvar1 = []\nfor i in range(var0):\n\tvar1.append(int(input()))\nvar1.sort(var5=True)\nvar4 = []\nfor i in range(0, var0 - k + 1):\n\tvar4.append(abs(var1[i] - var1[i + k - 1]))\nprint(min(var4))"
    }
  },
  {
    "p_name": "p03723",
    "code": {
      "buggy_code": "var0 = list(map(int, input().split()))\nvar1 = 0\nwhile var1 < 30:\n\tvar1 += 1\n\tvar0 = list((int((sum(var0) - var2) / 2) for var2 in var0))\n\tif sum((1 for var2 in var0 if var2 % 2 == 1)) > 0:\n\t\tbreak\nelse:\n\tvar1 = -1\nprint(var1)",
      "fixed_code": "\n\ndef method0():\n\treturn int(input())\n\ndef method1():\n\treturn list(map(int, input().split()))\n\ndef method2(var2, var3, var4):\n\tif (var2 | var3 | var4) & 1:\n\t\treturn 0\n\tif var2 == var3 and var2 == var4:\n\t\treturn -1\n\tvar5 = (var3 + var4) // 2\n\tvar6 = (var2 + var4) // 2\n\tvar7 = (var2 + var3) // 2\n\treturn method2(var5, var6, var7) + 1\nvar0, var8, var9 = method1()\nprint(method2(var0, var8, var9))"
    }
  },
  {
    "p_name": "p03105",
    "code": {
      "buggy_code": "var0 = str(input())\nvar1 = 0\nvar2 = 0\nfor i in range(len(list(var0))):\n\tif var0[i] == '0':\n\t\tvar1 += 1\n\telse:\n\t\tvar2 += 1\nprint(min(var2, var1) * 2)",
      "fixed_code": "var3, var4, var5 = map(int, input().split())\nif var5 >= var4 / var3:\n\tprint(int(var4 / var3))\nelse:\n\tprint(var5)"
    }
  },
  {
    "p_name": "p03293",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = input()\nvar2 = len(var0)\nvar3 = False\nfor i in range(var2):\n\tvar4 = var0[-1] + var0[:-1]\n\tif var4 == var1:\n\t\tvar3 = True\n\t\tbreak\nif var3:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = input()\nvar1 = input()\nvar2 = len(var0)\nvar3 = False\nfor i in range(var2):\n\tvar4 = var0[-1] + var0[:-1]\n\tvar0 = var4\n\tif var4 == var1:\n\t\tvar3 = True\n\t\tbreak\nif var3:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "import math\nvar0, var1, var2 = list(map(int, input().split()))\nif var0 ** (1 / 2) + var1 ** (1 / 2) < var2 ** (1 / 2):\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2 = list(map(int, input().split()))\nif var2 - var0 - var1 > 0 and (var2 - var0 - var1) ** 2 > 4 * var0 * var1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02866",
    "code": {
      "buggy_code": "from collections import *\nfrom fractions import gcd\nfrom functools import *\nfrom itertools import *\nfrom operator import mul, itemgetter\nfrom bisect import *\nfrom heapq import *\nfrom math import factorial, pi\nfrom copy import deepcopy\nimport sys\nsys.setrecursionlimit(10 ** 8)\nvar0 = 998244353\n\ndef method0(var1, var2):\n\tif var1 - var2 < 0:\n\t\treturn 0\n\telse:\n\t\treturn factorial(var1) // factorial(var2) // factorial(var1 - var2)\n\ndef method1():\n\tvar1, *var3 = map(int, open(0).read().split())\n\tvar4 = set(var3)\n\tvar5 = 1\n\tif var4 == set(range(len(var4))):\n\t\tvar3 = Counter(var3)\n\t\tfor i in range(len(var4) - 1):\n\t\t\tvar5 *= pow(var3[i], var3[i + 1], var0) % var0\n\t\tprint(var5)\n\telse:\n\t\tprint(0)\nif __name__ == '__main__':\n\tmethod1()",
      "fixed_code": "from collections import *\nfrom fractions import gcd\nfrom functools import *\nfrom itertools import *\nfrom operator import mul, itemgetter\nfrom bisect import *\nfrom heapq import *\nfrom math import factorial, pi\nfrom copy import deepcopy\nimport sys\nsys.setrecursionlimit(10 ** 8)\nvar0 = 998244353\n\ndef method1():\n\tvar1, *var3 = map(int, open(0).read().split())\n\tif var3[0] != 0:\n\t\tprint(0)\n\t\texit()\n\tfor i in var3[1:]:\n\t\tif i == 0:\n\t\t\tprint(0)\n\t\t\texit()\n\tvar5 = 1\n\tvar3 = Counter(var3)\n\tfor i in range(len(var3) - 1):\n\t\tvar5 *= pow(var3[i], var3[i + 1], var0) % var0\n\tprint(var5 % var0)\nif __name__ == '__main__':\n\tmethod1()"
    }
  },
  {
    "p_name": "p02675",
    "code": {
      "buggy_code": "var0 = int(input())\nif var0 == 2 or var0 == 4 or var0 == 5 or (var0 == 7) or (var0 == 9):\n\tprint('hon')\nelif var0 == 0 or var0 == 1 or var0 == 6 or (var0 == 8):\n\tprint('pon')\nelse:\n\tprint('bon')",
      "fixed_code": "var1 = int(input())\nvar0 = var1 % 10\nif var0 == 2 or var0 == 4 or var0 == 5 or (var0 == 7) or (var0 == 9):\n\tprint('hon')\nelif var0 == 0 or var0 == 1 or var0 == 6 or (var0 == 8):\n\tprint('pon')\nelif var0 == 3:\n\tprint('bon')"
    }
  },
  {
    "p_name": "p03644",
    "code": {
      "buggy_code": "import sys\nfrom collections import deque\nimport numpy as var0\nimport math\nsys.setrecursionlimit(10 ** 6)\n\ndef method0():\n\treturn sys.stdin.readline().rstrip()\n\ndef method1():\n\treturn map(str, sys.stdin.readline().rstrip().split())\n\ndef method2():\n\treturn int(sys.stdin.readline().rstrip())\n\ndef method3():\n\treturn map(int, sys.stdin.readline().rstrip().split())\n\ndef method4():\n\tif var1 < 2:\n\t\tprint(var1)\n\t\treturn\n\tvar2 = 2\n\twhile var2 * 2 < var1:\n\t\tvar2 *= 2\n\tprint(var2)\n\treturn\nif __name__ == '__main__':\n\tvar1 = method2()\n\tmethod4()",
      "fixed_code": "import sys\nfrom collections import deque\nimport numpy as var0\nimport math\nsys.setrecursionlimit(10 ** 6)\n\ndef method0():\n\treturn sys.stdin.readline().rstrip()\n\ndef method1():\n\treturn map(str, sys.stdin.readline().rstrip().split())\n\ndef method2():\n\treturn int(sys.stdin.readline().rstrip())\n\ndef method3():\n\treturn map(int, sys.stdin.readline().rstrip().split())\n\ndef method4():\n\tif var1 < 2:\n\t\tprint(var1)\n\t\treturn\n\tvar2 = 2\n\twhile var2 * 2 <= var1:\n\t\tvar2 *= 2\n\tprint(var2)\n\treturn\nif __name__ == '__main__':\n\tvar1 = method2()\n\tmethod4()"
    }
  },
  {
    "p_name": "p03631",
    "code": {
      "buggy_code": "var0 = list(input())\nvar1 = var0.sort()\nif var0 == var1:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = list(input())\nvar2 = ''.join(var0)\nvar0.reverse()\nvar3 = ''.join(var0)\nif var2 == var3:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03556",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = int(input())\n\tvar1 = 1\n\tfor i in range(1, 6):\n\t\tif var0 >= (10 ** i) ** 2 and var0 < (10 ** (i + 1)) ** 2:\n\t\t\tfor j in range(10 ** i, 10 ** (i + 1)):\n\t\t\t\tif j ** 2 > 10 ** 9 or j ** 2 > var0:\n\t\t\t\t\tprint(var1)\n\t\t\t\t\treturn\n\t\t\t\telse:\n\t\t\t\t\tvar1 = j ** 2\n\tprint(var1)\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "def method0():\n\tvar0 = int(input())\n\tvar1 = 1\n\tfor i in range(6):\n\t\tif var0 >= (10 ** i) ** 2 and var0 < (10 ** (i + 1)) ** 2:\n\t\t\tfor j in range(10 ** i, 10 ** (i + 1)):\n\t\t\t\tif j ** 2 > 10 ** 9 or j ** 2 > var0:\n\t\t\t\t\tprint(var1)\n\t\t\t\t\treturn\n\t\t\t\telse:\n\t\t\t\t\tvar1 = j ** 2\n\tprint(var1)\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "import sys, math\ninput = sys.stdin.readline\n\ndef method0():\n\tvar0 = input()\n\tvar1 = int(var0.split()[0])\n\tvar2 = float(var0.split()[1])\n\tvar2 = int(var2 * 100)\n\tprint(math.floor(var1 * var2 // 100))\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "import sys, math\ninput = sys.stdin.readline\n\ndef method0():\n\tvar0 = input()\n\tvar1 = int(var0.split()[0])\n\tvar2 = var0.split()[1]\n\tvar2 = int(var2[0] + var2[2:4])\n\tprint(math.floor(var2 * var1 // 100))\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p03672",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = list(var0)\nvar2 = 0\nfor i in var0[-1::-1]:\n\tvar1.remove(i)\n\tif len(var1) % 2 == 0:\n\t\tvar3 = ''.join(var1[0:int(len(var1) / 2)])\n\t\tif var0.count(var3) == 2:\n\t\t\tvar2 = len(var1)\n\t\t\tbreak\nprint(var2)",
      "fixed_code": "var0 = input()\nvar1 = list(var0)\nvar2 = 0\nfor i in range(len(var0)):\n\tdel var1[-1]\n\tif len(var1) % 2 == 0:\n\t\tvar3 = ''.join(var1[0:int(len(var1) / 2)])\n\t\tif ''.join(var1).count(var3) == 2:\n\t\t\tvar2 = len(var1)\n\t\t\tbreak\nprint(var2)"
    }
  },
  {
    "p_name": "p04029",
    "code": {
      "buggy_code": "var0 = int(input())\nif var0 % 2 == 1:\n\tprint((var0 + 1) * (var0 // 2) + (var0 + 1) / 2)\nif var0 % 2 == 0:\n\tprint((var0 + 1) * var0 / 2)",
      "fixed_code": "var0 = int(input())\nprint(var0 * (var0 + 1) // 2)"
    }
  },
  {
    "p_name": "p04031",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = math.ceil(sum(var1) / var0)\nvar3 = 0\nfor i in range(var0):\n\tvar3 += (var2 - var1[i]) ** 2\nprint(var3)",
      "fixed_code": "import math\nvar0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = round(sum(var1) / var0)\nvar3 = 0\nfor i in range(var0):\n\tvar3 += (var2 - var1[i]) ** 2\nprint(var3)"
    }
  },
  {
    "p_name": "p02783",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split()))\nif var1 == 1:\n\tprint(var0 // var1)\nelse:\n\tprint(var0 // var1 + 1)",
      "fixed_code": "var0, var1 = list(map(int, input().split()))\nif var0 % var1 == 0:\n\tprint(var0 // var1)\nelse:\n\tprint(var0 // var1 + 1)"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "var0, var1 = input().split(' ')\nvar0 = int(var0)\nvar1 = int(var1)\nif var1 == 0 and var0 == 1:\n\tprint(0)\n\texit()\nif var1 == 0 and var0 != 1:\n\tprint(-1)\n\texit()\nvar2 = []\nvar3 = []\nvar4 = []\nvar5 = []\nvar6 = []\nfor i in range(var1):\n\tvar7, var8 = input().split(' ')\n\tvar7 = int(var7)\n\tvar8 = int(var8)\n\tvar2.append(var7)\n\tvar3.append(var8)\n\tif var7 == 1:\n\t\tvar4.append(var8)\n\telif var7 == 2:\n\t\tvar5.append(var8)\n\telif var7 == 3:\n\t\tvar6.append(var8)\n\telse:\n\t\tprint('Error')\nif len(set(var4)) > 1:\n\tprint(-1)\n\texit()\nif len(set(var5)) > 1:\n\tprint(-1)\n\texit()\nif len(set(var6)) > 1:\n\tprint(-1)\n\texit()\nvar9 = ''\nfor i in range(var0):\n\tvar9 += '0'\nvar10 = list(var9)\nfor i in range(var1):\n\tvar10[var2[i] - 1] = str(var3[i])\nif var0 > 1:\n\tif var10[0] == '0':\n\t\tprint(-1)\n\t\texit()\nprint(''.join(var10))",
      "fixed_code": "var0, var1 = input().split(' ')\nvar0 = int(var0)\nvar1 = int(var1)\nvar2 = []\nvar3 = []\nvar4 = []\nvar5 = []\nvar6 = []\nfor i in range(var1):\n\tvar7, var8 = input().split(' ')\n\tvar7 = int(var7)\n\tvar8 = int(var8)\n\tvar2.append(var7)\n\tvar3.append(var8)\n\tif var7 == 1:\n\t\tvar4.append(var8)\n\telif var7 == 2:\n\t\tvar5.append(var8)\n\telif var7 == 3:\n\t\tvar6.append(var8)\n\telse:\n\t\tprint('Error')\nif len(set(var4)) > 1:\n\tprint(-1)\n\texit()\nif len(set(var5)) > 1:\n\tprint(-1)\n\texit()\nif len(set(var6)) > 1:\n\tprint(-1)\n\texit()\nvar9 = ''\nfor i in range(var0):\n\tvar9 += '-'\nvar10 = list(var9)\nfor i in range(var1):\n\tvar10[var2[i] - 1] = str(var3[i])\nif var0 > 1:\n\tif var10[0] == '0':\n\t\tprint(-1)\n\t\texit()\nvar10 = list(''.join(var10).replace('-', '0'))\nif var0 != 1:\n\tif var10[0] == '0':\n\t\tvar10[0] = '1'\nprint(''.join(var10))"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "var0, var1 = map(float, input().split())\nvar0 = int(var0)\nvar1 = int(var1 * 100)\nvar2 = var0 * var1 / 100\nvar3 = str(var2)[:-2]\nprint(var3)",
      "fixed_code": "from decimal import Decimal\nvar0, var1 = input().split()\nvar0 = int(var0)\nif len(var1) == 1:\n\tvar1 = int(var1[0] + '00')\nelif len(var1) == 3:\n\tvar1 = int(var1[0] + var1[2] + '0')\nelse:\n\tvar1 = int(var1[0] + var1[2] + var1[3])\nvar2 = str(var0 * var1)\nprint(var2[:-2] if len(var2) > 2 else 0)"
    }
  },
  {
    "p_name": "p02397",
    "code": {
      "buggy_code": "while True:\n\tvar0 = [int(i) for i in input().split(' ')]\n\tvar1 = var0[0]\n\tvar2 = var0[1]\n\tif var1 <= var2:\n\t\tprint(var1, var2)\n\telif var1 > var2:\n\t\tprint(var2, var1)\n\tif var1 == 0 and var2 == 0:\n\t\tbreak",
      "fixed_code": "while True:\n\tvar0 = [int(i) for i in input().split(' ')]\n\tvar1 = var0[0]\n\tvar2 = var0[1]\n\tif var1 == 0 and var2 == 0:\n\t\tbreak\n\telif var1 <= var2:\n\t\tprint(var1, var2)\n\telif var1 > var2:\n\t\tprint(var2, var1)"
    }
  },
  {
    "p_name": "p02939",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = ''\nvar2 = ''\nvar3 = 0\nfor var4 in var0:\n\tvar1 += var4\n\tif var2 != var4:\n\t\tvar3 += 1\n\t\tvar2 = var1\n\t\tvar1 = ''\nprint(var3)",
      "fixed_code": "var0 = input()\nvar1 = ''\nvar2 = ''\nvar3 = 0\nfor var4 in var0:\n\tif var1 == '':\n\t\tvar1 = var4\n\telif var1 == var2:\n\t\tvar1 += var4\n\telse:\n\t\tvar2 = var1\n\t\tvar1 = var4\n\t\tvar3 += 1\nif var1 != '' and var1 != var2:\n\tvar3 += 1\nprint(var3)"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "import math\nvar0, var1 = map(float, input().split())\nvar0 = int(var0)\nprint(math.floor(var0 * var1))",
      "fixed_code": "from decimal import *\nfrom math import floor\nvar0, var1 = map(float, input().split())\nvar2 = Decimal(str(var0)) * Decimal(str(var1))\nprint(floor(var2))"
    }
  },
  {
    "p_name": "p04011",
    "code": {
      "buggy_code": "var0 = int(input())\nk = int(input())\nvar1 = int(input())\nvar2 = int(input())\nprint(k * var1 + max(0, var0 - k) * var2)",
      "fixed_code": "var0 = int(input())\nk = int(input())\nvar1 = int(input())\nvar2 = int(input())\nprint(min(var0, k) * var1 + max(0, var0 - k) * var2)"
    }
  },
  {
    "p_name": "p03659",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [int(var2) for var2 in input().split()]\nvar3 = []\nvar4 = []\nfor var2 in var1:\n\tif var2 < 0:\n\t\tvar3.append(var2)\n\telse:\n\t\tvar4.append(var2)\nvar3.sort(var5=True)\nvar4.sort()\nvar6 = sum(var3) // 2\nvar7 = sum(var4) // 2\nvar8 = 0\nvar9 = 0\nfor i in range(len(var4)):\n\tif var8 + var4[i] <= var7:\n\t\tvar8 += var4[i]\n\telse:\n\t\tvar9 += sum(var4[i:])\n\t\tbreak\nvar10 = 0\nvar11 = 0\nfor i in range(len(var3)):\n\tif var11 + var3[i] >= var6:\n\t\tvar11 += var3[i]\n\telse:\n\t\tvar10 += sum(var3[i:])\n\t\tbreak\nprint(abs(var8 + var10 - (var9 + var11)))",
      "fixed_code": "var0 = int(input())\nvar1 = [int(var2) for var2 in input().split()]\nvar12 = 0\nvar13 = sum(var1)\nvar14 = []\nfor i in range(var0 - 1):\n\tvar12 += var1[i]\n\tvar13 -= var1[i]\n\tvar14.append(abs(var12 - var13))\nprint(min(var14))"
    }
  },
  {
    "p_name": "p02939",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = ''\nvar2 = ''\nvar3 = 0\nfor var4 in var0:\n\tvar1 += var4\n\tif var2 != var4:\n\t\tvar3 += 1\n\t\tvar2 = var1\n\t\tvar1 = ''\nif var1 != '' and var1 != var2:\n\tvar3 += 1\nprint(var3)",
      "fixed_code": "var0 = input()\nvar1 = ''\nvar2 = ''\nvar3 = 0\nfor var4 in var0:\n\tif var1 == '':\n\t\tvar1 = var4\n\telif var1 == var2:\n\t\tvar1 += var4\n\telse:\n\t\tvar2 = var1\n\t\tvar1 = var4\n\t\tvar3 += 1\nif var1 != '' and var1 != var2:\n\tvar3 += 1\nprint(var3)"
    }
  },
  {
    "p_name": "p02730",
    "code": {
      "buggy_code": "var0 = str(input())\nvar1 = len(var0)\nvar2 = [4 * i + 1 for i in range(1, 25)]\ni = 0\nif var1 in var2:\n\tprint('No')\nelse:\n\tvar3 = 0\n\tif var1 == 3:\n\t\tif var0[0] == var0[2]:\n\t\t\tprint('Yes')\n\t\telse:\n\t\t\tprint('No')\n\telse:\n\t\tfor i in range(int((var1 - 1) / 4)):\n\t\t\tif var0[i] != var0[int((var1 - 1) / 2) - 1 - i] or var0[i] != var0[int((var1 + 3) / 2 - 1 + i)] or var0[i] != var0[var1 - 1 - i]:\n\t\t\t\tprint('No')\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tvar3 += 1\n\t\tif var3 == int((var1 - 1) / 4):\n\t\t\tprint('Yes')",
      "fixed_code": "var4 = input()\nvar5 = len(var4)\nvar6 = var5 // 2\nif var4[:var6] == var4[var6 + 1:]:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03611",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = [0] * (max(var1) + 1)\nfor i in var1:\n\tvar2[i] += 1\nvar3 = 0\nfor i in range(1, max(var1) + 1):\n\tvar4 = sum(var2[i - 1:i + 2])\n\tif var4 > var3:\n\t\tvar3 = var4\nif len(var1) == 1:\n\tvar3 = 1\nprint(var3)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar5 = max(var1)\nvar2 = [0] * (var5 + 1)\nfor i in var1:\n\tvar2[i] += 1\nvar3 = 0\nfor i in range(1, var5):\n\tvar4 = sum(var2[i - 1:i + 2])\n\tif var4 > var3:\n\t\tvar3 = var4\nif len(var2) <= 3:\n\tvar3 = sum(var2)\nprint(var3)"
    }
  },
  {
    "p_name": "p02675",
    "code": {
      "buggy_code": "var0 = str(input())\nvar1 = var0[-1]\nk = int(var1)\nif k == 2 or k == 4 or k == 5 or (k == 7) or (k == 9):\n\tprint('hon')\nelif k == 0 or k == 1 or k == 6 or (k == 8):\n\tprint('pon')\nelse:\n\tprint('bon')\nprint(k)",
      "fixed_code": "var0 = str(input())\nvar1 = var0[-1]\nk = int(var1)\nif k == 2 or k == 4 or k == 5 or (k == 7) or (k == 9):\n\tprint('hon')\nelif k == 0 or k == 1 or k == 6 or (k == 8):\n\tprint('pon')\nelse:\n\tprint('bon')"
    }
  },
  {
    "p_name": "p03005",
    "code": {
      "buggy_code": "var0, k = map(int, input().split())\nif k == 1:\n\tvar1 = 0\nelse:\n\tvar1 = var0 - k",
      "fixed_code": "var0, k = map(int, input().split())\nif k == 1:\n\tvar1 = 0\nelse:\n\tvar1 = var0 - k\nprint(var1)"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = int(var0 * var1 / 2) + var0 * var1 % 2\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar3 = 1 if var0 == 1 or var1 == 1 else (var0 * var1 + 1) // 2\nprint(var3)"
    }
  },
  {
    "p_name": "p03351",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nif abs(var0 - var2) <= var3:\n\tprint('Yes')\nelif abs(var0 - var1) <= var3 and abs(var1 - var2):\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nif abs(var0 - var2) <= var3:\n\tprint('Yes')\nelif abs(var0 - var1) <= var3 and abs(var1 - var2) <= var3:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03207",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [int(input()) for i in range(var0)]\nprint(sum(var1) - min(var1) // 2)",
      "fixed_code": "var0 = int(input())\nvar1 = [int(input()) for i in range(var0)]\nprint(sum(var1) - max(var1) // 2)"
    }
  },
  {
    "p_name": "p03048",
    "code": {
      "buggy_code": "import numpy as var0\nvar1, var2, var3, var4 = (int(var5) for var5 in input().split())\nvar6 = var0.array([var1, var2, var3])\nvar6 = var0.sort(var6)\nvar7 = var6[2]\nvar8 = var6[1]\nvar9 = var6[0]\nvar10 = int(var4 / var7)\nvar11 = 0\nfor i in range(var10 + 1):\n\tvar12 = var4 - var7 * i\n\tvar13 = int(var12 / var8)\n\tfor j in range(var13 + 1):\n\t\tvar14 = var12 - var8 * j\n\t\tif var14 % var6[0]:\n\t\t\tvar11 += 1\nprint(var11)",
      "fixed_code": "var1, var2, var3, var4 = (int(var5) for var5 in input().split())\nvar6 = [var1, var2, var3]\nvar6 = sorted(var6)\nvar7 = var6[2]\nvar8 = var6[1]\nvar9 = var6[0]\nvar10 = int(var4 / var7)\nvar11 = 0\nfor i in range(var10 + 1):\n\tvar12 = var4 - var7 * i\n\tvar13 = int(var12 / var8)\n\tfor j in range(var13 + 1):\n\t\tvar14 = var12 - var8 * j\n\t\tif var14 % var6[0] == 0:\n\t\t\tvar11 += 1\nprint(var11)"
    }
  },
  {
    "p_name": "p02923",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = map(int, input().split())\nvar2 = float('inf')\nvar3, var4 = (0, 0)\nfor var5 in var1:\n\tif var2 >= var5:\n\t\tvar4 += 1\n\telse:\n\t\tvar3 = max(var3, var4)\n\t\tvar4 = 0\n\tvar2 = var5\nprint(max(var3, var4))",
      "fixed_code": "var0 = input()\nvar1 = map(int, input().split())\nvar2 = float('inf')\nvar4 = -1\nvar3 = 0\nfor var5 in var1:\n\tif var5 <= var2:\n\t\tvar4 += 1\n\telse:\n\t\tvar3 = max(var3, var4)\n\t\tvar4 = 0\n\tvar2 = var5\nvar3 = max(var3, var4)\nprint(var3)"
    }
  },
  {
    "p_name": "p03000",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 0\nvar4 = 0\nwhile var4 <= var1 and var3 <= var0 - 1:\n\tvar4 += var2[var3]\n\tvar3 += 1\nprint(var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 0\nvar5 = 1\nfor i in range(var0):\n\tif var3 + var2[i] <= var1:\n\t\tvar5 += 1\n\t\tvar3 += var2[i]\n\telse:\n\t\tbreak\nprint(var5)"
    }
  },
  {
    "p_name": "p02682",
    "code": {
      "buggy_code": "var0 = input('')\nvar1 = int(var0.split(' ')[0])\nvar2 = int(var0.split(' ')[1])\nvar3 = int(var0.split(' ')[2])\nk = int(var0.split(' ')[3])\nvar4 = 0\nvar5 = k\nif var1 > k:\n\tvar5 = 0\n\tvar4 = var1\nelse:\n\tvar5 -= var1\n\tvar4 += var1\nif var5 > 0:\n\tvar5 -= var2\nif var5 > 0:\n\tvar4 -= var5\nprint(var4)",
      "fixed_code": "var0 = input('')\nvar1 = int(var0.split(' ')[0])\nvar2 = int(var0.split(' ')[1])\nvar3 = int(var0.split(' ')[2])\nk = int(var0.split(' ')[3])\nvar4 = 0\nvar5 = k\nif var1 > k:\n\tvar5 = 0\n\tvar4 = k\nelse:\n\tvar5 = k - var1\n\tvar4 = var1\nif var5 > 0:\n\tvar5 -= var2\nif var5 > 0:\n\tvar4 -= var5\nprint(var4)"
    }
  },
  {
    "p_name": "p03289",
    "code": {
      "buggy_code": "import re\nvar0 = input()\nvar1 = '^A\\\\w{1}[a-x]*C{1}[a-x]*\\\\w{1}$'\nif re.match(var1, var0):\n\tprint('AC')\nelse:\n\tprint('WA')",
      "fixed_code": "import re\nvar0 = input()\nvar1 = '^A[a-z][a-z]*C{1}[a-z]*[a-z]$'\nif re.match(var1, var0):\n\tprint('AC')\nelse:\n\tprint('WA')"
    }
  },
  {
    "p_name": "p03284",
    "code": {
      "buggy_code": "var0, k = map(int, input().split())\nprint(var0 % k)",
      "fixed_code": "var0, k = map(int, input().split())\nprint(1 if var0 % k >= 1 else 0)"
    }
  },
  {
    "p_name": "p03583",
    "code": {
      "buggy_code": "var0 = int(input())\n\ndef method0(var1):\n\tif isinstance(var1, int):\n\t\treturn True\n\tif isinstance(var1, float):\n\t\treturn var1.is_integer()\n\treturn False\nfor var2 in range(1, 3501):\n\tif 1 / var2 < 4 / var0:\n\t\tfor var1 in range(1, var2):\n\t\t\tif 1 / var2 + 1 / var1 < 4 / var0:\n\t\t\t\tvar3 = 1 / (4 / var0 - 1 / var2 - 1 / var1)\n\t\t\t\tif var3.is_integer():\n\t\t\t\t\tprint(var2, var1, int(var3))\n\t\t\t\t\texit()",
      "fixed_code": "var0 = int(input())\nfor var2 in range(1, 3501):\n\tfor var1 in range(var2, 3501):\n\t\tif 4 * var2 * var1 - var0 * var1 - var2 * var0 == 0:\n\t\t\tcontinue\n\t\tvar3 = var0 * var2 * var1 / (4 * var2 * var1 - var0 * var1 - var2 * var0)\n\t\tif var3.is_integer() and 1 <= var3 < 3501:\n\t\t\tprint(var2, var1, int(var3))\n\t\t\texit()"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "var0, var1 = map(float, input().split())\nimport math\nvar2 = str(var1)\nvar3 = int(var2[0])\nvar4 = int(var2[2])\nif len(var2) == 4:\n\tvar5 = int(var2[3])\nelse:\n\tvar5 = 0\nvar6 = var0 * var3 + var0 * var4 / 10 + var0 * var5 / 100\nprint(math.floor(var6))",
      "fixed_code": "var0, var1 = map(float, input().split())\nimport math\nfrom decimal import *\nvar2 = str(var1)\nvar3 = int(var2[0])\nvar4 = int(var2[2])\nif len(var2) == 4:\n\tvar5 = int(var2[3])\nelse:\n\tvar5 = 0\nvar6 = Decimal(var0) * var3 + Decimal(var0) * var4 / 10 + Decimal(var0) * var5 / 100\nprint(math.floor(var6))"
    }
  },
  {
    "p_name": "p02987",
    "code": {
      "buggy_code": "var0 = list(input())\nif len(var0) == 2:\n\tif var0[0] == var0[1] and var0[2] == var0[3] or (var0[0] == var0[2] and var0[1] == var0[3]) or (var0[0] == var0[3] and var0[1] == var0[2]):\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = sorted(list(input()))\nif var0.count(var0[0]) == 2 and var0.count(var0[3]) == 2:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03289",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 'AC'\nif var0[0] != 'A':\n\tvar1 = 'WA'\nvar0 = var0[1:]\nif 'C' in var0[0] + var0[-1]:\n\tvar1 = 'WA'\nvar0 = var0[1:-1]\nif not 'C' in var0:\n\tvar1 = 'WA'\nvar2 = var0.find('C')\nvar0 = var0[:var2] + var0[var2 + 1:]\nfor i in range(len(var0)):\n\tif var0[i] <= 'Z':\n\t\tvar1 = 'WA'\nprint(var1)",
      "fixed_code": "var0 = input()\nvar1 = 'AC'\nfor i in range(len(var0)):\n\tif var0[i] <= 'Z' and 'A' != var0[i] != 'C':\n\t\tvar1 = 'WA'\nif var0[0] != 'A':\n\tvar1 = 'WA'\nvar0 = var0[1:]\nif 'C' in var0[0] + var0[-1]:\n\tvar1 = 'WA'\nvar0 = var0[1:-1]\nif not 'C' in var0:\n\tvar1 = 'WA'\nvar2 = var0.find('C')\nvar0 = var0[:var2] + var0[var2 + 1:]\nif 'C' in var0:\n\tvar1 = 'WA'\nprint(var1)"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = input().split()\nvar2 = [int(var3) for var3 in var1]\nvar2.sort()\nvar4 = var2[::-1]\nvar5 = 1\nfor i in range(var0):\n\tvar5 *= var4[i]\n\tif var5 > 10 ** 18:\n\t\tprint(-1)\n\t\tbreak\n\telif i == var0 - 1:\n\t\tprint(var5)",
      "fixed_code": "var0 = int(input())\nvar1 = input().split()\nvar2 = [int(var3) for var3 in var1]\nvar2.sort()\nvar4 = var2[::-1]\nvar5 = 1\nif 0 in var4:\n\tprint(0)\nelse:\n\tfor i in range(var0):\n\t\tvar5 *= var4[i]\n\t\tif var5 > 10 ** 18:\n\t\t\tprint(-1)\n\t\t\tbreak\n\t\telif i == var0 - 1:\n\t\t\tprint(var5)"
    }
  },
  {
    "p_name": "p02725",
    "code": {
      "buggy_code": "k, var0 = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = []\nvar2.append(abs(k - abs(var1[0] - var1[var0 - 1])))\nfor i in range(var0 - 1):\n\tvar2.append(abs(var1[i] - var1[i + 1]))\nprint(var2)",
      "fixed_code": "k, var0 = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = []\nvar2.append(abs(k - abs(var1[0] - var1[var0 - 1])))\nfor i in range(var0 - 1):\n\tvar2.append(abs(var1[i] - var1[i + 1]))\nprint(sum(var2) - max(var2))"
    }
  },
  {
    "p_name": "p03042",
    "code": {
      "buggy_code": "var0 = 'YYMM'\nvar1 = 'MMYY'\nvar1 = input()\nvar2 = int(var1[:2])\nvar3 = int(var1[2:])\nif var2 > 0 and var2 < 13:\n\tif var3 > 0 and var3 < 13:\n\t\tprint('AMBIGUOUS')\n\telse:\n\t\tprint(var1)\nelif var3 > 0 and var3 < 13:\n\tprint(var0)\nelse:\n\tprint('NA')",
      "fixed_code": "var0 = 'YYMM'\nvar1 = 'MMYY'\nvar4 = input()\nvar2 = int(var4[:2])\nvar3 = int(var4[2:])\nif (var2 > 0 and var2 < 13) and (var3 > 0 and var3 < 13):\n\tprint('AMBIGUOUS')\nelif (var3 > 0 and var3 < 13) and (var2 < 1 or var2 > 12):\n\tprint(var0)\nelif (var3 < 1 or var3 > 12) and (var2 > 0 and var2 < 13):\n\tprint(var1)\nelse:\n\tprint('NA')"
    }
  },
  {
    "p_name": "p03986",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = len(var0)\nvar2 = False\nvar3 = False\nvar4 = 0\nvar5 = 0\nfor i in range(var1 - 1, -1, -1):\n\tif var0[i] == 'S':\n\t\tif var2:\n\t\t\tvar4 += 1\n\telse:\n\t\tvar2 = True\nfor i in range(var1):\n\tif var0[i] == 'T':\n\t\tif var3:\n\t\t\tvar5 += 1\n\telse:\n\t\tvar3 = True\nprint(var1 - min(var4, var5) * 2)",
      "fixed_code": "var0 = input()\nvar1 = len(var0)\nvar6 = []\nvar7 = 1\nfor i in range(var1):\n\tif len(var6) > 0 and var0[i] == 'T' and (var6[-1] == 'S'):\n\t\tvar7 += 1\n\t\tvar6.pop()\n\telse:\n\t\tvar6.append(var0[i])\nprint(len(var6))"
    }
  },
  {
    "p_name": "p03317",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = var2.var3(1)\nvar4 = var3\nvar5 = var3\nvar6 = 0\nwhile var4 != 0:\n\tvar4 = max(0, var4 - var1 + 1)\n\tvar6 += 1\nwhile var5 != var0 - 1:\n\tvar5 = min(var0 - 1, var5 + var1 - 1)\n\tvar6 += 1\nprint(var6)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif (var0 - 1) % (var1 - 1) == 0:\n\tprint((var0 - 1) // (var1 - 1))\nelse:\n\tprint((var0 - 1) // (var1 - 1) + 1)"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 1\nfor i in range(var0):\n\tvar2 *= var1[i]\n\tif var2 > 1000000000000000000:\n\t\tprint('-1')\n\t\tquit()\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 1\nfor i in range(var0):\n\tvar2 *= var1[i]\n\tif var2 > 1000000000000000000:\n\t\tif 0 in var1:\n\t\t\tprint('0')\n\t\t\tquit()\n\t\telse:\n\t\t\tprint('-1')\n\t\t\tquit()\nprint(var2)"
    }
  },
  {
    "p_name": "p02677",
    "code": {
      "buggy_code": "import math\nvar0, var1, var2, var3 = map(int, input().split())\nvar4 = 6 * var3 - 15 * var2\nk = math.cos(math.radians(var4))\nvar5 = var0 ** 2 + var1 ** 2 - 2 * var0 * var1 * k\nprint(math.sqrt(var5))",
      "fixed_code": "import math\nvar0, var1, var2, var3 = map(int, input().split())\nvar4 = 6 * var3 - 30 * var2 - var3 / 2\nk = math.cos(math.radians(var4))\nvar5 = var0 ** 2 + var1 ** 2 - 2 * var0 * var1 * k\nprint(math.sqrt(var5))"
    }
  },
  {
    "p_name": "p03327",
    "code": {
      "buggy_code": "var0 = int(input())\nif var0 < 1000:\n\tvar0 = list(str(var0))\n\tif len(var0) < 3:\n\t\twhile len(var0) != 3:\n\t\t\tlist(var0)\n\t\t\tvar0.insert(0, '0')\n\tvar0 = ''.join(var0)\n\tprint('ABC' + var0)\nelse:\n\tvar0 = var0 - 999\n\tvar0 = list(str(var0))\n\tif len(var0) < 3:\n\t\twhile len(var0) != 3:\n\t\t\tlist(var0)\n\t\t\tvar0.insert(0, '0')\n\tvar0 = ''.join(var0)\n\tprint('ABD' + str(var0))",
      "fixed_code": "var0 = int(input())\nif var0 < 1000:\n\tprint('ABC')\nelse:\n\tprint('ABD')"
    }
  },
  {
    "p_name": "p03282",
    "code": {
      "buggy_code": "var0 = input()\nk = int(input())\nvar1 = 0\nvar2 = 0\nfor i in range(len(var0)):\n\tif var0[i] == '1':\n\t\tvar1 += 1\n\telif var2 == 0:\n\t\tvar3 = var0[i]\n\t\tvar2 = 1\n\telse:\n\t\tbreak\nif var1 < k:\n\tprint(var3)\nelse:\n\tprint(var1)",
      "fixed_code": "var0 = input()\nk = int(input())\nvar1 = 0\nvar2 = 0\nfor i in range(len(var0)):\n\tif var0[i] == '1':\n\t\tvar1 += 1\n\telse:\n\t\tvar3 = var0[i]\n\t\tbreak\nif var1 < k:\n\tprint(var3)\nelse:\n\tprint(1)"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split()))\nif var0 % 2 == 0:\n\tvar2 = var0 / 2 * var1\nelse:\n\tvar2 = (var0 + 1) / 2 * var1 - int(var1 / 2) * 1\nprint(var2)",
      "fixed_code": "var0, var1 = list(map(int, input().split()))\nif var0 % 2 == 0:\n\tvar2 = var0 / 2 * var1\nelif var0 == 1 or var1 == 1:\n\tvar2 = 1\nelse:\n\tvar2 = (var0 + 1) / 2 * var1 - int(var1 / 2) * 1\nprint(int(var2))"
    }
  },
  {
    "p_name": "p02953",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = int(input())\n\tvar1 = [int(i) for i in input().split()]\n\tfor i in range(var0 - 1)[::-1]:\n\t\tif var1[i] > var1[i + 1]:\n\t\t\tvar1[i] -= 1\n\t\t\tif var1[i] > var1[i + 1]:\n\t\t\t\treturn print('NO')\n\tprint('YES')\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "var2 = int(input())\nvar3 = list(map(int, input().split()))\nfor i in range(var2 - 1, 0, -1):\n\tvar4 = var3[i] - var3[i - 1]\n\tif var4 < -1:\n\t\tprint('No')\n\t\tbreak\n\telif var4 == -1:\n\t\tvar3[i - 1] -= 1\nelse:\n\tprint('Yes')"
    }
  },
  {
    "p_name": "p03455",
    "code": {
      "buggy_code": "def method0(var0):\n\tif var0 % 2 == 0:\n\t\treturn True\n\telse:\n\t\treturn False\n\ndef method1():\n\tvar1 = input('input two integers for this problem: ')\n\tvar2 = var1.split()\n\tif len(var2) != 2:\n\t\tprint('input is invalid. input two integers.')\n\t\texit(1)\n\tvar3, var4 = (int(var2[0]), int(var2[1]))\n\tif method0(var3 * var4):\n\t\tprint('Even')\n\telse:\n\t\tprint('Odd')\nmethod1()",
      "fixed_code": "def method0(var0):\n\tif var0 % 2 == 0:\n\t\treturn True\n\telse:\n\t\treturn False\n\ndef method1():\n\tvar1 = input().split()\n\tvar3, var4 = (int(var1[0]), int(var1[1]))\n\tif method0(var3 * var4):\n\t\tprint('Even')\n\telse:\n\t\tprint('Odd')\nif __name__ == '__main__':\n\tmethod1()"
    }
  },
  {
    "p_name": "p02987",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = {}\nfor i in range(len(var0)):\n\tvar2 = var0[i]\n\tvar3 = var1.setdefault(var2, 0) + 1\n\tvar1[var2] = var3\nvar4 = 'Yes'\nfor k in var1:\n\tif var1[k] != 2:\n\t\tvar4 = 'No'\nprint('Yes')",
      "fixed_code": "var0 = input()\nvar1 = {}\nfor i in range(len(var0)):\n\tvar2 = var0[i]\n\tvar3 = var1.setdefault(var2, 0) + 1\n\tvar1[var2] = var3\nvar4 = 'Yes'\nfor k in var1:\n\tif var1[k] != 2:\n\t\tvar4 = 'No'\nprint(var4)"
    }
  },
  {
    "p_name": "p02646",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2, var3 = map(int, input().split())\nvar4 = int(input())\nif var0 < var2 and var0 + var4 * var1 >= var2 + var4 * var3:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2, var3 = map(int, input().split())\nvar4 = int(input())\nvar5 = abs(var0 - var2)\nif (var1 - var3) * var4 >= var5:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p03281",
    "code": {
      "buggy_code": "import math\n\ndef method0(var0):\n\tvar1 = []\n\tfor i in range(1, int(math.sqrt(var0))):\n\t\tif var0 % i == 0:\n\t\t\tvar1.append(i)\n\t\t\tvar1.append(int(var0 / i))\n\treturn len(var1)\nif __name__ == '__main__':\n\tvar0 = int(input())\n\tprint(method0(var0))",
      "fixed_code": "import math\n\ndef method0(var0):\n\tvar1 = []\n\tfor i in range(1, int(math.sqrt(var0)) + 1):\n\t\tif var0 % i == 0:\n\t\t\tvar1.append(i)\n\t\t\tvar1.append(int(var0 / i))\n\treturn len(var1)\nif __name__ == '__main__':\n\tvar0 = int(input())\n\tvar2 = 0\n\tfor i in range(1, var0 + 1):\n\t\tif i % 2 == 1 and method0(i) == 8:\n\t\t\tvar2 += 1\n\tprint(var2)"
    }
  },
  {
    "p_name": "p03000",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 1\nvar4 = 0\nfor i in range(1, var0 + 1):\n\tif var4 + var2[i - 1] <= var1:\n\t\tvar4 += var2[i - 1]\n\t\tvar3 += 1\nprint(var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar5 = 0\nvar3 = 1\nfor i in range(var0):\n\tvar5 = var5 + var2[i]\n\tif var5 <= var1:\n\t\tvar3 += 1\nprint(var3)"
    }
  },
  {
    "p_name": "p02681",
    "code": {
      "buggy_code": "var0 = str(input())\nvar1 = str(input())\nif var0 == var1[0:-1]:\n\tprint('Yes')\nelse:\n\tprint('NO')",
      "fixed_code": "var0 = input()\nvar1 = input()\nif var0 == var1[:-1]:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02553",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = [int(var4) for var4 in input().split()]\nvar5 = max(var0, var1)\nvar6 = max(var2, var3)\nif var5 < 0 and var6 < 0:\n\tprint(min(var0, var1) * min(var2, var3))\nelif var5 > 0 and var6 < 0:\n\tprint(min(var0, var1) * var6)\nelif var5 < 0 and var6 > 0:\n\tprint(var5 * min(var2, var3))\nelse:\n\tprint(var5 * var6)",
      "fixed_code": "var0, var1, var2, var3 = [int(var4) for var4 in input().split()]\nvar7 = [var0 * var2, var0 * var3, var1 * var2, var1 * var3]\nprint(max(var7))"
    }
  },
  {
    "p_name": "p02812",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = input()\nvar2 = 0\ni = 0\nwhile i < var0 - 3:\n\tif var1[i:i + 3] == 'ABC':\n\t\tvar2 += 1\n\t\ti += 3\n\telse:\n\t\ti += 1\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = input()\n\ndef method0(var1):\n\tif len(var1) < 2:\n\t\treturn 0\n\telif var1[:3] == 'ABC':\n\t\treturn 1 + method0(var1[3:])\n\telse:\n\t\treturn method0(var1[1:])\nprint(method0(var1))"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = int(var0 * var1 / 2)\nif var0 % 2 == 1 and var1 % 2 == 1:\n\tprint(var2 + 1)\nelse:\n\tprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 == 1 or var1 == 1:\n\tprint(1)\nelse:\n\tvar2 = int(var0 * var1 / 2)\n\tif var0 % 2 == 1 and var1 % 2 == 1:\n\t\tprint(var2 + 1)\n\telse:\n\t\tprint(var2)"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "import math\nvar0, var1 = input().split()\nvar1 = int(float(var1) * 100)\nvar2 = int(var0) * var1\nprint(str(var2)[:-2] if var2 > 99 else 0)",
      "fixed_code": "import math\nvar0, var1 = input().split()\nvar3 = int(var0)\nvar4 = 100 * var3 * int(var1[0])\nvar5 = 10 * var3 * int(var1[2])\nvar6 = 1 * var3 * int(var1[3])\nvar7 = var4 + var5 + var6\nif var7 < 100:\n\tprint(0)\nelse:\n\tprint(str(var7)[:-2])"
    }
  },
  {
    "p_name": "p02693",
    "code": {
      "buggy_code": "import sys\nk = int(input())\nvar0, var1 = map(int, input().split())\nvar2 = var0 // k\nwhile var2 * k <= var1:\n\tprint('Ok')\n\tsys.exit()\n\tvar2 += 1\nprint('NG')",
      "fixed_code": "k = int(input())\nvar0, var1 = map(int, input().split())\nvar2 = var1 // k\nif var2 * k >= var0:\n\tprint('OK')\nelse:\n\tprint('NG')"
    }
  },
  {
    "p_name": "p02393",
    "code": {
      "buggy_code": "var0 = list(map(int, input().split()))\nvar0.sort()\nprint(var0[0], var0[1], var0[1])",
      "fixed_code": "var1 = list(map(int, input().split()))\nvar1.sort()\nprint(var1[0], var1[1], var1[2])"
    }
  },
  {
    "p_name": "p03145",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nprint(var0 * var1 / 2)",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nprint(var0 * var1 // 2)"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "var0 = list(input().rstrip().split(' '))\nvar1, var2 = (int(var0[0]), float(var0[1]))\nvar3 = int(var1 * var2)\nprint(var3)",
      "fixed_code": "var0, var4 = map(float, input().split())\nvar0 = int(var0)\nvar4 = int(var4 * 1000)\nprint(var0 * var4 // 1000)"
    }
  },
  {
    "p_name": "p02951",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nprint(var2 - var0 + var1)",
      "fixed_code": "var3, var4, var5 = map(int, input().split())\nprint(max(0, var4 + var5 - var3))"
    }
  },
  {
    "p_name": "p03061",
    "code": {
      "buggy_code": "import fractions\nfrom functools import reduce\nvar0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nvar1 = sorted(var1)\n\ndef method0(var3):\n\treturn reduce(fractions.gcd, var3)\nvar2 = 0\nvar4 = 0\nif var0 == 2:\n\tvar5 = [var1[0], var1[1]]\nelif var0 == 3:\n\tvar5 = [var1[0], var1[1], var1[var0 - 1]]\nelse:\n\tvar5 = [var1[0], var1[1], var1[var0 - 2], var1[var0 - 1]]\nfor i in range(len(var5)):\n\tvar6 = var5[:]\n\tvar6.pop(i)\n\tvar4 = method0(var6)\n\tif var2 < var4:\n\t\tvar2 = var4\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\n\ndef method1(var7, var8):\n\tif var8 == 0:\n\t\treturn var7\n\telse:\n\t\treturn method1(var8, var7 % var8)\nvar2 = 0\nvar9 = [0] * (var0 + 1)\nfor i in range(var0):\n\tvar9[i + 1] = method1(var9[i], var1[i])\nvar10 = [0] * (var0 + 1)\nfor i in range(var0 - 1, -1, -1):\n\tvar10[i] = method1(var10[i + 1], var1[i])\nfor i in range(var0):\n\tvar11 = method1(var9[i], var10[i + 1])\n\tif var2 < var11:\n\t\tvar2 = var11\nprint(var2)"
    }
  },
  {
    "p_name": "p02785",
    "code": {
      "buggy_code": "def method0():\n\tvar0, k = map(int, input().split())\n\tvar1 = list(map(int, input().split()))\n\tvar1.sort()\n\tif k >= var0:\n\t\tprint(0)\n\tvar2 = sum(var1[:-k])\n\tprint(var2)\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "def method0():\n\tvar0, k = map(int, input().split())\n\tvar1 = list(map(int, input().split()))\n\tvar1.sort()\n\tif k >= var0:\n\t\tprint(0)\n\t\texit()\n\telif k > 0:\n\t\tvar2 = sum(var1[:-k])\n\telif k == 0:\n\t\tvar2 = sum(var1)\n\tprint(var2)\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p03281",
    "code": {
      "buggy_code": "var0 = int(input())\nif var0 >= 195:\n\tprint(4)\nelif var0 >= 165:\n\tprint(3)\nelif var0 >= 135:\n\tprint(2)\nelif var0 >= 105:\n\tprint(1)\nelse:\n\tprint(0)",
      "fixed_code": "var0 = int(input())\nif var0 >= 195:\n\tprint(5)\nelif var0 >= 189:\n\tprint(4)\nelif var0 >= 165:\n\tprint(3)\nelif var0 >= 135:\n\tprint(2)\nelif var0 >= 105:\n\tprint(1)\nelse:\n\tprint(0)"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 1\nfor var3 in var1:\n\tvar2 *= var3\n\tif var2 > 1e+18:\n\t\tprint(-1)\n\t\tbreak\nelse:\n\tprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar1.sort()\nvar2 = 1\nfor var3 in var1:\n\tvar2 *= var3\n\tif var2 > 1e+18:\n\t\tprint(-1)\n\t\tbreak\nelse:\n\tprint(var2)"
    }
  },
  {
    "p_name": "p04045",
    "code": {
      "buggy_code": "var0, k = map(int, input().split())\nvar1 = list(input().split())\n\ndef method0(var2):\n\tfor i in range(0, len(var2)):\n\t\tif var2[i] in var1:\n\t\t\treturn False\n\treturn True\nfor i in range(0, 10001):\n\tvar3 = method0(str(var0))\n\tif var3:\n\t\tprint(var0)\n\t\texit()\n\tvar0 += 1",
      "fixed_code": "var0, var4 = map(int, input().split())\nvar1 = list(input().split())\n\ndef method1(var0):\n\tfor i in str(var0):\n\t\tif i in var1:\n\t\t\treturn\n\tprint(var0)\n\texit()\nwhile True:\n\tmethod1(str(var0))\n\tvar0 += 1"
    }
  },
  {
    "p_name": "p02881",
    "code": {
      "buggy_code": "import sys\nvar0 = int(input())\n\ndef method0(var1):\n\tvar2 = []\n\tfor i in range(1, int(var1 ** 0.5) + 1):\n\t\tif var1 % i == 0:\n\t\t\tvar2.append(i)\n\t\t\tif i != var1 // i:\n\t\t\t\tvar2.append(var1 // i)\n\treturn var2\nvar2 = method0(var0)\nvar3 = max([i for i in var2 if i < var0 ** (1 / 2)])\nprint(int(var0 / var3 + var3 - 2))",
      "fixed_code": "import sys\nvar0 = int(input())\n\ndef method0(var1):\n\tvar2 = []\n\tfor i in range(1, int(var1 ** 0.5) + 1):\n\t\tif var1 % i == 0:\n\t\t\tvar2.append(i)\n\t\t\tif i != var1 // i:\n\t\t\t\tvar2.append(var1 // i)\n\treturn var2\nvar2 = method0(var0)\nvar3 = max([i for i in var2 if i <= var0 ** (1 / 2)])\nprint(int(var0 / var3 + var3 - 2))"
    }
  },
  {
    "p_name": "p03075",
    "code": {
      "buggy_code": "var0 = list((int(i) for i in range(5)))\nk = int(input())\nvar1 = max(var0)\nif k >= var1:\n\tprint('Yay!')\nelse:\n\tprint(':(')",
      "fixed_code": "var2 = int(input())\nvar3 = int(input())\nvar4 = int(input())\nvar5 = int(input())\nvar6 = int(input())\nk = int(input())\nif var6 - var2 <= k:\n\tprint('Yay!')\nelse:\n\tprint(':(')"
    }
  },
  {
    "p_name": "p02676",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(input())\nif len(var1) <= var0:\n\tprint(*var1, var2='')\nelse:\n\tvar3 = var1[:var0]\n\tvar3.append('…')\n\tprint(*var3, var2='')",
      "fixed_code": "var0 = int(input())\nvar1 = list(input())\nif len(var1) <= var0:\n\tprint(*var1, var2='')\nelse:\n\tvar3 = var1[:var0]\n\tvar3.append('...')\n\tprint(*var3, var2='')"
    }
  },
  {
    "p_name": "p02771",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = input().split(' ')\n\tvar1 = var0.count(var0[0])\n\tif var1 == 2:\n\t\tprint('Yes')\n\t\treturn\n\tvar2 = var0[1]\n\tif var2 == 2:\n\t\tprint('Yes')\n\t\treturn\n\tvar3 = var0[2]\n\tif var3 == 2:\n\t\tprint('Yes')\n\tprint('No')\nmethod0()",
      "fixed_code": "def method0():\n\tvar0 = input().split(' ')\n\tvar1 = var0.count(var0[0])\n\tif var1 == 2:\n\t\tprint('Yes')\n\t\treturn\n\tvar2 = var0.count(var0[1])\n\tif var2 == 2:\n\t\tprint('Yes')\n\t\treturn\n\tvar3 = var0.count(var0[2])\n\tif var3 == 2:\n\t\tprint('Yes')\n\tprint('No')\nmethod0()"
    }
  },
  {
    "p_name": "p02959",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nprint(var1, var2)\nvar3 = 0\nfor i in range(var0):\n\tif var1[i] - var2[i] < 0:\n\t\tvar3 += var1[i]\n\t\tvar2[i] -= var1[i]\n\t\tif var1[i + 1] - var2[i] < 0:\n\t\t\tvar3 += var1[i + 1]\n\t\t\tvar1[i + 1] = 0\n\t\telse:\n\t\t\tvar3 += var2[i]\n\t\t\tvar1[i + 1] -= var2[i]\n\telse:\n\t\tvar3 += var2[i]\nprint(var3)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar3 = 0\nfor i in range(var0):\n\tif var1[i] - var2[i] < 0:\n\t\tvar3 += var1[i]\n\t\tvar2[i] -= var1[i]\n\t\tif var1[i + 1] - var2[i] < 0:\n\t\t\tvar3 += var1[i + 1]\n\t\t\tvar1[i + 1] = 0\n\t\telse:\n\t\t\tvar3 += var2[i]\n\t\t\tvar1[i + 1] -= var2[i]\n\telse:\n\t\tvar3 += var2[i]\nprint(var3)"
    }
  },
  {
    "p_name": "p03079",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input('test').split(' '))\nif var0 == var1 == var2:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2 = map(int, input('').split(' '))\nif var0 == var1 == var2:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03086",
    "code": {
      "buggy_code": "import re\nprint(len(max(re.compile('[A|G|C|T]*').findall(input()))))",
      "fixed_code": "import re\nprint(max(list(map(var0, re.compile('[A|G|C|T]*').findall(input())))))"
    }
  },
  {
    "p_name": "p02693",
    "code": {
      "buggy_code": "k = int(input())\nvar0, var1 = map(int, input().split())\nif k <= var1 - var0 + 1:\n\tprint('OK')\nelse:\n\tprint('NG')",
      "fixed_code": "k = int(input())\nvar0, var1 = map(int, input().split())\nif var1 % k <= var1 - var0:\n\tprint('OK')\nelse:\n\tprint('NG')"
    }
  },
  {
    "p_name": "p03852",
    "code": {
      "buggy_code": "var0 = ['a', 'i', 'u', 'e', 'o']\nvar1 = input()\nif var1 in var0:\n\tprint('vowel')\nelse:\n\tprint('consoant')",
      "fixed_code": "var0 = ['a', 'i', 'u', 'e', 'o']\nvar1 = input()\nif var1 in var0:\n\tprint('vowel')\nelse:\n\tprint('consonant')"
    }
  },
  {
    "p_name": "p02596",
    "code": {
      "buggy_code": "import sys\nfrom collections import deque, Counter\nfrom heapq import heappop, heappush\nfrom bisect import bisect_right\nfrom itertools import accumulate\nsys.setrecursionlimit(10 ** 6)\nvar0 = 10 ** 12\nvar1 = 10 ** 9 + 7\n\ndef method0(var2):\n\tfor i in range(2, int(var2 ** 0.5) + 1):\n\t\tif var2 % i == 0:\n\t\t\treturn False\n\treturn True\n\ndef method1():\n\tvar2 = int(input())\n\tif var2 % 2 == 0 or var2 % 5 == 0:\n\t\tprint(-1)\n\t\texit()\n\tif var2 == 1:\n\t\tprint(1)\n\t\texit()\n\tvar3 = 7\n\ti = 0\n\twhile i < var2 - 1:\n\t\tif var3 % var2 == 0:\n\t\t\tprint(i + 1)\n\t\t\texit()\n\t\telse:\n\t\t\tvar3 += 7 * pow(10, i + 1, var2) % var2\n\t\t\tvar3 %= var2\n\t\t\ti += 1\n\tprint(i)\nif __name__ == '__main__':\n\tmethod1()",
      "fixed_code": "def method1():\n\tvar2 = int(input())\n\tvar3 = 7\n\ti = 0\n\twhile i < 10 ** 6:\n\t\tif var3 % var2 == 0:\n\t\t\tprint(i + 1)\n\t\t\texit()\n\t\telse:\n\t\t\tvar3 += 7 * pow(10, i + 1, var2) % var2\n\t\t\tvar3 %= var2\n\t\t\ti += 1\n\tprint(-1)\nif __name__ == '__main__':\n\tmethod1()"
    }
  },
  {
    "p_name": "p02778",
    "code": {
      "buggy_code": "var0 = input()\nfor var1 in var0:\n\tvar1 = 'x'\nprint(var0)",
      "fixed_code": "print('x' * len(input()))"
    }
  },
  {
    "p_name": "p02719",
    "code": {
      "buggy_code": "var0, k = map(int, input().split())\nif var0 < k:\n\tprint(var0 if var0 else k)\nelif var0 % k == 0:\n\tprint(0)\nelse:\n\tprint((k - var0) % k)",
      "fixed_code": "var0, k = map(int, input().split())\nif var0 < k:\n\tprint(min(var0, k - var0))\nelif var0 % k == 0:\n\tprint(0)\nelse:\n\tprint((k - var0) % k)"
    }
  },
  {
    "p_name": "p02584",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar0 = abs(var0)\nif var0 >= var1 * var2:\n\tprint(var0 - var1 * var2)\nelse:\n\tvar3 = var0 // var2\n\tvar4 = var1 - var3\n\tif var4 % 2 == 0:\n\t\tprint(var1 - var3 * var2)\n\telse:\n\t\tprint(abs(var1 - (var3 + 1) * var2))",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar0 = abs(var0)\nif var0 >= var1 * var2:\n\tprint(var0 - var1 * var2)\nelse:\n\tvar3 = var0 // var2\n\tvar4 = var1 - var3\n\tj = var3 * var2\n\tif var4 % 2 == 0:\n\t\tprint(abs(var0 - j))\n\telse:\n\t\tprint(abs(var0 - j - var2))"
    }
  },
  {
    "p_name": "p03126",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split()))\nvar2 = [list(map(int, input().split())) for i in range(var0)]\nvar3 = []\nfor i in range(var0):\n\tfor j in range(1, var2[i][0] + 1):\n\t\tvar4 = var2[i][j]\n\t\tvar3.append(var4)\nvar5 = 0\nfor i in range(1, var0 + 1):\n\tif var3.count(i) == var0:\n\t\tvar5 += 1\n\telif var0 == 1:\n\t\tvar5 = var2[0][0]\nprint(var5)",
      "fixed_code": "var0, var1 = list(map(int, input().split()))\nvar2 = [list(map(int, input().split())) for i in range(var0)]\nvar3 = []\nfor i in range(var0):\n\tfor j in range(1, var2[i][0] + 1):\n\t\tvar4 = var2[i][j]\n\t\tvar3.append(var4)\nvar5 = 0\nfor i in range(1, 31):\n\tif var3.count(i) == var0:\n\t\tvar5 += 1\n\tif var0 == 1:\n\t\tvar5 = var2[0][0]\nprint(var5)"
    }
  },
  {
    "p_name": "p03861",
    "code": {
      "buggy_code": "from math import ceil\nimport sys\nsys.setrecursionlimit(10 ** 9)\ninput = sys.stdin.readline\nvar0, var1, var2 = map(int, input().split())\n\ndef method0():\n\tvar3 = ceil(var0 / var2)\n\tvar4 = var1 // var2\n\treturn var4 - var3 + 1\nprint(method0())",
      "fixed_code": "from math import ceil\nimport sys\nsys.setrecursionlimit(10 ** 9)\ninput = sys.stdin.readline\nvar0, var1, var2 = map(int, input().split())\n\ndef method0():\n\tvar3 = (var0 - 1) // var2\n\tvar4 = var1 // var2\n\treturn var4 - var3\nprint(method0())"
    }
  },
  {
    "p_name": "p02759",
    "code": {
      "buggy_code": "var0 = int(input())\nprint(round((var0 + 1) / 2))",
      "fixed_code": "var0 = int(input())\nif var0 % 2 == 0:\n\tprint(var0 // 2)\nelse:\n\tprint((var0 + 1) // 2)"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "var0, var1 = map(float, input().split())\nvar0 = int(var0)\nvar2 = var0 * (var1 * 100) / 100\nprint(int(var2))",
      "fixed_code": "var0, var1 = map(float, input().split())\nvar0 = int(var0)\nvar1 = round(var1 * 100)\nvar2 = var0 * int(var1) // 100\nprint(int(var2))"
    }
  },
  {
    "p_name": "p02881",
    "code": {
      "buggy_code": "def method0(var0):\n\tvar1 = []\n\tvar2 = var0\n\tfor i in range(2, int(-(-var0 ** 0.5 // 1)) + 1):\n\t\tif var2 % i == 0:\n\t\t\tvar3 = 0\n\t\t\twhile var2 % i == 0:\n\t\t\t\tvar3 += 1\n\t\t\t\tvar2 //= i\n\t\t\tvar1.append([i, var3])\n\tif var2 != 1:\n\t\tvar1.append([var2, 1])\n\tif var1 == []:\n\t\tvar1.append([var0, 1])\n\treturn var1\nvar4 = int(input())\nvar5 = method0(var4)\nvar5 = sorted(var5, var6=True, var7=lambda var8: var8[0])\nvar9 = 1\nvar10 = 1\nfor i in range(len(var5)):\n\tfor j in range(var5[i][1]):\n\t\tif var9 <= var10:\n\t\t\tvar9 *= var5[i][0]\n\t\telse:\n\t\t\tvar10 *= var5[i][0]\nprint(var9 + var10 - 2)",
      "fixed_code": "var0 = int(input())\n\ndef method1(var0):\n\tvar11 = []\n\tfor i in range(int(var0 ** 0.5) + 1, 0, -1):\n\t\tif var0 % i == 0:\n\t\t\tvar11.append(i)\n\t\t\tif i != var0 // i:\n\t\t\t\tvar11.append(var0 // i)\n\t\t\treturn var11\n\treturn var11\nk = method1(var0)\nif len(k) == 2:\n\tprint(sum(k) - 2)\nelse:\n\tprint(k.pop() * 2 - 2)"
    }
  },
  {
    "p_name": "p03416",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 0\n\ndef method0(var3):\n\treturn 0 if var3 == var3[::-1] else 1\nfor i in range(var0, var1):\n\tif method0(str(i)) == 0:\n\t\tvar2 += 1\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 0\n\ndef method0(var3):\n\treturn 0 if var3 == var3[::-1] else 1\nfor i in range(var0, var1 + 1):\n\tif method0(str(i)) == 0:\n\t\tvar2 += 1\nprint(var2)"
    }
  },
  {
    "p_name": "p03072",
    "code": {
      "buggy_code": "var0 = int(input())\nk = list(map(int, input().split()))\nvar1 = 1\nfor i in range(1, var0):\n\tfor j in range(i):\n\t\tif k[i] >= k[j]:\n\t\t\tvar1 += 1\nprint(var1)",
      "fixed_code": "var0 = int(input())\nk = list(map(int, input().split()))\nvar2 = k[0]\nvar1 = 1\nfor i in range(1, var0):\n\tif k[i] >= var2:\n\t\tvar1 += 1\n\t\tvar2 = k[i]\nprint(var1)"
    }
  },
  {
    "p_name": "p02403",
    "code": {
      "buggy_code": "while 1:\n\tvar0, var1 = map(int, raw_input().split())\n\tif var0 == var1 == 0:\n\t\tbreak\n\tprint(('#' * var1 + '/n') * var0)",
      "fixed_code": "while 1:\n\tvar0, var1 = map(int, raw_input().split())\n\tif var0 == 0 and var1 == 0:\n\t\tbreak\n\tprint(('#' * var1 + '\\n') * var0)"
    }
  },
  {
    "p_name": "p02729",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split()))\nvar2 = (var0 + var1) * (var0 + var1 - 1) / 2 - var0 * var1\nprint(var2)",
      "fixed_code": "var0, var1 = list(map(int, input().split()))\nvar2 = (var0 + var1) * (var0 + var1 - 1) // 2 - var0 * var1\nprint(var2)"
    }
  },
  {
    "p_name": "p02584",
    "code": {
      "buggy_code": "def method0(var0, var1, var2):\n\tvar3 = round(-var0 / var2)\n\tvar4 = abs(var0)\n\tfor i in [-2, -1, 0, +1, +2]:\n\t\tvar5 = var3 + i\n\t\tvar5 = min(var5, +var1)\n\t\tvar5 = max(var5, -var1)\n\t\tvar6 = var0 + var5 * var2\n\t\tvar4 = min(var4, abs(var6))\n\treturn var4\nvar0, var1, var2 = map(int, input().split())\nvar7 = var0 - var1 * var2\nvar8 = var0 + var1 * var2\nif var7 * var8 > 0:\n\tprint(min(abs(var7), abs(var8)))\nelse:\n\tif var1 % 2 == 0:\n\t\tvar4 = method0(var0, var1 // 2, var2 * 2)\n\telse:\n\t\tvar9 = method0(var0 + var1, (var1 - 1) // 2, var2 * 2)\n\t\tvar10 = method0(var0 - var1, (var1 - 1) // 2, var2 * 2)\n\t\tvar4 = min(var9, var10)\n\tprint(var4)",
      "fixed_code": "def method0(var0, var2, var11, var12):\n\tvar3 = round(-var0 / var2)\n\tvar4 = abs(var0)\n\tfor i in [-2, -1, 0, +1, +2]:\n\t\tvar5 = var3 + i\n\t\tvar5 = min(var5, var12)\n\t\tvar5 = max(var5, var11)\n\t\tvar6 = var0 + var5 * var2\n\t\tvar4 = min(var4, abs(var6))\n\treturn var4\nvar0, var1, var2 = map(int, input().split())\nvar7 = var0 - var1 * var2\nvar8 = var0 + var1 * var2\nif var7 > 0 and var8 > 0 or (var7 < 0 and var8 < 0):\n\tprint(min(abs(var7), abs(var8)))\nelse:\n\tif var1 % 2 == 0:\n\t\tvar4 = method0(var0, var2 * 2, -(var1 // 2), +(var1 // 2))\n\telse:\n\t\tvar9 = method0(var0 + var2, var2 * 2, -((var1 + 1) // 2), +(var1 - 1) // 2)\n\t\tvar10 = method0(var0 - var2, var2 * 2, -((var1 - 1) // 2), +(var1 + 1) // 2)\n\t\tvar4 = min(var9, var10)\n\tprint(var4)"
    }
  },
  {
    "p_name": "p03324",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nprint(var1 * 100 ** var0)",
      "fixed_code": "var2, var3 = map(int, input().split())\nif var3 == 100:\n\tprint((var3 + 1) * 100 ** var2)\nelse:\n\tprint(var3 * 100 ** var2)"
    }
  },
  {
    "p_name": "p03352",
    "code": {
      "buggy_code": "print(int(int(input()) ** 0.5) ** 2)",
      "fixed_code": "var0 = int(input())\nvar1 = 1\nfor var2 in range(2, int(var0 ** 0.5 + 1)):\n\tfor var3 in range(2, 11):\n\t\tif var2 ** var3 > var0:\n\t\t\tbreak\n\t\tvar1 = max(var1, var2 ** var3)\nprint(var1)"
    }
  },
  {
    "p_name": "p03289",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 0\nif var0[0] == 'A' and var0[2] == 'C':\n\tvar1 += 0\nelse:\n\tvar1 += 1\nvar0 = var0.replace('A', 'a').replace('C', 'c')\nif var0.lower() == var0:\n\tvar1 += 0\nelse:\n\tvar1 += 1\nif var1:\n\tprint('WA')\nelse:\n\tprint('AC')",
      "fixed_code": "var0 = input()\nvar1 = 0\nif var0[0] == 'A' and var0.count('C') == 1 and (var0.count('A') == 1) and (var0[1].lower() == var0[1]) and (var0[-1].lower() == var0[-1]):\n\tvar1 += 0\nelse:\n\tvar1 = 1\nif var0.replace('A', '').replace('C', '').lower() == var0.replace('A', '').replace('C', ''):\n\tvar1 += 0\nelse:\n\tvar1 = 1\nif var1:\n\tprint('WA')\nelse:\n\tprint('AC')"
    }
  },
  {
    "p_name": "p03862",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 0\nfor i in range(1, var0, 1):\n\tif var2[i] + var2[i - 1] > var1:\n\t\tvar3 += var2[i] - (var1 - var2[i - 1])\n\t\tvar2[i] = var1 - var2[i - 1]\nprint(var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 0\nfor i in range(1, var0, 1):\n\tif var2[i] + var2[i - 1] > var1:\n\t\tvar3 += var2[i] - (var1 - var2[i - 1])\n\t\tif var1 < var2[i - 1]:\n\t\t\tvar2[i] = 0\n\t\telse:\n\t\t\tvar2[i] = var1 - var2[i - 1]\nprint(var3)"
    }
  },
  {
    "p_name": "p03797",
    "code": {
      "buggy_code": "var0, var1 = [int(i) for i in input().split()]\nvar2 = 0\nfor i in range(var0):\n\tvar0 -= 1\n\tvar1 -= 2\n\tif var0 < 0 or var1 < 0:\n\t\tbreak\n\tvar2 += 1\nvar2 += var1 // 4\nprint(var2)",
      "fixed_code": "var0, var1 = [int(i) for i in input().split()]\nvar2 = 0\nif var0 <= var1 / 2:\n\tvar2 = var0\n\tvar1 -= var0 * 2\n\tvar2 += var1 // 4\nelse:\n\tvar2 = var1 // 2\n\tvar1 -= var2\nprint(var2)"
    }
  },
  {
    "p_name": "p03633",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [int(input()) for i in range(var0)]\nimport fractions\nvar2 = 0\nfor i in range(var0 - 1):\n\tvar3 = fractions.gcd(var1[i], var1[i + 1])\n\tvar4 = var1[i] * var1[i + 1] / var3\n\tvar2 = max(var2, var4)\nprint(int(var2))",
      "fixed_code": "import fractions\nvar5 = int(input())\nvar6 = [int(input()) for i in range(var5)]\nvar7 = var6[0]\nfor i in range(var5 - 1):\n\tvar7 = var7 * var6[i + 1] // fractions.gcd(var7, var6[i + 1])\nprint(var7)"
    }
  },
  {
    "p_name": "p03438",
    "code": {
      "buggy_code": "import numpy as var0\nvar1 = int(input())\nvar2 = []\nvar3 = []\nvar2 = var0.array([int(var4) for var4 in input().split(' ')])\nvar3 = var0.array([int(var4) for var4 in input().split(' ')])\nvar5 = False\nvar6 = sum(var3) - sum(var2)\nvar7 = 0\nvar8 = 0\nvar9 = var3 - var2\nfor i in range(var1):\n\tif var9[i] < 0:\n\t\tvar8 -= var9[i]\n\tif var9[i] > 0:\n\t\tvar10 = var9[i] % 2\n\t\tvar7 += var10\n\t\tvar8 += var10\n\t\tvar7 += var9[i] // 2\nvar8 += var6 - var7\nif var7 == var8:\n\tvar5 = True\nif var5:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "import numpy as var0\nvar1 = int(input())\nvar2 = []\nvar3 = []\nvar2 = var0.array([int(var4) for var4 in input().split(' ')])\nvar3 = var0.array([int(var4) for var4 in input().split(' ')])\nvar5 = False\nvar6 = sum(var3) - sum(var2)\nvar7 = 0\nvar8 = 0\nvar9 = var3 - var2\nfor i in range(var1):\n\tif var9[i] < 0:\n\t\tvar8 -= var9[i]\n\tif var9[i] > 0:\n\t\tvar10 = var9[i] % 2\n\t\tvar7 += var10\n\t\tvar8 += var10\n\t\tvar7 += var9[i] // 2\nif var6 - var8 == (var6 - var7) * 2:\n\tvar5 = True\nif var7 > var6 or var8 > var6:\n\tvar5 = False\nif var5:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02594",
    "code": {
      "buggy_code": "var0 = int(input())\nif var0 >= 30:\n\tprint('Yes')\nelse:\n\tprint('NO')",
      "fixed_code": "var0 = int(input())\nif var0 >= 30:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03814",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 20000000\nvar2 = 0\nfor i in range(len(var0)):\n\tif var0[i] == 'A':\n\t\tmin(var1, i)\n\telif var0[i] == 'Z':\n\t\tmax(var2, i)\nprint(var2 - var1 + 1)",
      "fixed_code": "var0 = input()\nvar1 = 20000000\nvar2 = 0\nfor i in range(len(var0)):\n\tif var0[i] == 'A':\n\t\tvar1 = min(var1, i)\n\telif var0[i] == 'Z':\n\t\tvar2 = max(var2, i)\nprint(var2 - var1 + 1)"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 2019 * 2019\nfor i in range(var0, var1 + 1):\n\tvar3 = i % 2019\n\tvar4 = (i + 1) % 2019\n\tif var3 * var4 < var2:\n\t\tvar2 = var3 * var4\n\tif var4 == 0:\n\t\tvar2 = 0\n\t\tbreak\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 2019 ** 2\nif var1 - var0 >= 2018:\n\tvar2 = 0\n\tprint(var2)\nelse:\n\tfor i in range(var0, var1):\n\t\tfor j in range(var0 + 1, var1 + 1):\n\t\t\tvar5 = i * j % 2019\n\t\t\tif var5 < var2:\n\t\t\t\tvar2 = var5\n\t\t\telif var5 == 0:\n\t\t\t\tvar2 = 0\n\t\t\t\tbreak\n\tprint(var2)"
    }
  },
  {
    "p_name": "p03328",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nfor i in range(var1 - var0 - 2):\n\tvar0 = var0 - (i + 1)\nprint(var0)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nfor i in range(var1 - var0 - 1):\n\tvar2 = var2 + i + 1\nprint(var2 - var0)"
    }
  },
  {
    "p_name": "p04045",
    "code": {
      "buggy_code": "var0, var1 = tuple(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar3 = set(var2)\nfor i in range(var0, 10001):\n\tvar4 = set([int(var5) for var5 in str(i)])\n\tif len(var3.intersection(var4)) > 0:\n\t\tcontinue\n\telse:\n\t\tprint(i)\n\t\texit()",
      "fixed_code": "var0, var1 = tuple(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar3 = set(var2)\ni = var0\nwhile True:\n\tvar4 = set([int(var5) for var5 in str(i)])\n\tif len(var3.intersection(var4)) > 0:\n\t\ti += 1\n\t\tcontinue\n\telse:\n\t\tbreak\nprint(i)"
    }
  },
  {
    "p_name": "p03042",
    "code": {
      "buggy_code": "var0 = list(input())\nvar1 = int(''.join(var0[:2]))\nvar2 = int(''.join(var0[2:]))\nvar3 = True\nvar4 = None\nvar5 = None\nvar6 = True\nif var1 > 12 or var1 < 1:\n\tvar5 = False\nelse:\n\tvar5 = True\nif var2 > 12 or var2 < 1:\n\tvar4 = False\nelse:\n\tvar4 = True\nif (var3 and var4) and (var5 and var4):\n\tprint('AMBIGUOUS')\nelif var3 and var4:\n\tprint('YYMM')\nelif var5 and var4:\n\tprint('MMYY')\nelse:\n\tprint('NA')",
      "fixed_code": "var0 = list(input())\nvar1 = int(''.join(var0[:2]))\nvar2 = int(''.join(var0[2:]))\nvar3 = True\nvar4 = None\nvar5 = None\nvar6 = True\nif var1 > 12 or var1 < 1:\n\tvar5 = False\nelse:\n\tvar5 = True\nif var2 > 12 or var2 < 1:\n\tvar4 = False\nelse:\n\tvar4 = True\nif (var3 and var4) and (var5 and var6):\n\tprint('AMBIGUOUS')\nelif var3 and var4:\n\tprint('YYMM')\nelif var5 and var6:\n\tprint('MMYY')\nelse:\n\tprint('NA')"
    }
  },
  {
    "p_name": "p03059",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = 0\nfor i in range(1, 20):\n\tif var0 * i <= var2:\n\t\tvar3 = var3 + var1\nprint(var3)",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = 0\nfor i in range(1, 21):\n\tif var0 * i <= var2:\n\t\tvar3 = var3 + var1\nprint(var3)"
    }
  },
  {
    "p_name": "p02754",
    "code": {
      "buggy_code": "var0, var1, var2 = list(map(int, input().split(' ')))\nvar3 = ''\nwhile len(var3) < var0 and len(var3) != 0:\n\tvar3 = var3 + 'var1' * var1 + 'var2' * var2\nprint(var3[:var0].count('var1'))",
      "fixed_code": "var0, var1, var2 = list(map(int, input().split(' ')))\nvar4 = 0\nvar5 = []\nif var1 == 0:\n\tprint(var1)\nelif var0 / (var1 + var2):\n\tvar5 = divmod(var0, var1 + var2)\n\tvar4 = var5[0] * var1\n\tif var5[1] > var1:\n\t\tvar4 = var4 + var1\n\telse:\n\t\tvar4 = var4 + var5[1]\n\tprint(var4)\nelif var0 <= var1:\n\tprint(var0)\nelif var0 <= var2:\n\tprint(var1)"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "var0, var1 = map(float, input().split())\nprint(int(var0 * var1))",
      "fixed_code": "from decimal import Decimal\nvar2 = list(input().split())\nvar0 = int(var2[0])\nvar1 = Decimal(var2[1])\nprint(int(var0 * var1))"
    }
  },
  {
    "p_name": "p02712",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = []\nfor i in range(var0):\n\tif i % 3 != 0 and i % 5 != 0:\n\t\tvar1.append(i)\nprint(var1)",
      "fixed_code": "var0 = int(input())\nvar1 = []\nfor i in range(var0 + 1):\n\tif i % 3 != 0 and i % 5 != 0:\n\t\tvar1.append(i)\nprint(sum(var1))"
    }
  },
  {
    "p_name": "p02707",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [0 for i in range(var0)]\nvar2 = list(map(int, input().split()))\nprint(var1)\nfor i in var2:\n\tvar1[i - 1] += 1\nprint(*var1, var3='\\n')",
      "fixed_code": "var0 = int(input())\nvar1 = [0 for i in range(var0)]\nvar2 = list(map(int, input().split()))\nfor i in var2:\n\tvar1[i - 1] += 1\nprint(*var1, var3='\\n')"
    }
  },
  {
    "p_name": "p03106",
    "code": {
      "buggy_code": "var0 = [int(i) for i in input().split()]\nvar1 = []\nvar2 = []\nfor k in range(1, var0[0] + 1):\n\tvar3 = var0[0] / k * 1000000000\n\tif var3.is_integer():\n\t\tvar1.append(k)\nfor var4 in range(1, var0[1] + 1):\n\tvar5 = var0[1] / var4 * 100000000000\n\tif var5.is_integer():\n\t\tvar2.append(var4)\nvar6 = list(set(var1) & set(var2))\nvar6.sort()\nprint(var6[var0[2] - 1])",
      "fixed_code": "var0 = [int(i) for i in input().split()]\nvar1 = []\nvar2 = []\nfor k in range(1, var0[0] + 1):\n\tvar3 = var0[0] / k\n\tif var3.is_integer():\n\t\tvar1.append(k)\nfor var4 in range(1, var0[1] + 1):\n\tvar5 = var0[1] / var4\n\tif var5.is_integer():\n\t\tvar2.append(var4)\nvar6 = list(set(var1) & set(var2))\nvar6.sort()\nprint(var6[-var0[2]])"
    }
  },
  {
    "p_name": "p02971",
    "code": {
      "buggy_code": "import itertools\nvar0 = int(input())\nvar1 = [int(input()) for i in range(var0)]\nvar2 = list(itertools.accumulate(var1, var3=var4))\nvar5 = list(itertools.accumulate(reversed(var1), var3=var4))\nfor i in range(var0):\n\tprint(var4(var2[i - 1], var5[i - 1]))",
      "fixed_code": "import itertools\nvar0 = int(input())\nvar1 = [int(input()) for i in range(var0)]\nvar2 = [0] + list(itertools.accumulate(var1, var3=var4))\nvar5 = ([0] + list(itertools.accumulate(reversed(var1), var3=var4)))[::-1]\nfor i in range(var0):\n\tprint(var4(var2[i], var5[i + 1]))"
    }
  },
  {
    "p_name": "p02612",
    "code": {
      "buggy_code": "var0 = int(input().rstrip())\nprint(int(var0 % 1000))",
      "fixed_code": "var0 = int(input().rstrip())\nvar1 = [i for i in range(1, 11) if var0 <= i * 1000]\nprint(min(var1) * 1000 - var0)"
    }
  },
  {
    "p_name": "p03043",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nvar3 = 0\nvar4 = var1 - 1\nvar5 = var0\nwhile True:\n\tif var4 < var0:\n\t\tbreak\n\telse:\n\t\tvar2 += 1\n\t\tvar5 = var4\n\t\tvar4 = var5 // 2\nif var5 > var0:\n\tvar5 = var0\nwhile True:\n\tvar6 = var5 - var4\n\tvar6 /= 2 ** var2\n\tvar3 += var6\n\tif var4 == 2:\n\t\tvar3 += 3 / 2 ** (var2 + 2)\n\t\tbreak\n\tvar5 = var4\n\tvar4 = var5 // 2 + 1\n\tvar2 += 1\nprint(var3 / var0)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nvar3 = 0\nvar4 = var1 - 1\nvar5 = var0\nwhile True:\n\tif var4 < var0:\n\t\tbreak\n\telse:\n\t\tvar2 += 1\n\t\tvar5 = var4\n\t\tvar4 = var5 // 2\nif var5 > var0:\n\tvar5 = var0\nwhile True:\n\tvar6 = var5 - var4\n\tvar6 /= 2 ** var2\n\tvar3 += var6\n\tif var4 == 1:\n\t\tvar3 += 1 / 2 ** (var2 + 1)\n\t\tbreak\n\tif var4 == 0:\n\t\tbreak\n\tvar5 = var4\n\tvar4 = var5 // 2\n\tvar2 += 1\nprint(var3 / var0)"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nprint((var0 * var1 + 1) // 2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif 1 in (var0, var1):\n\tprint(1)\nelse:\n\tprint((var0 * var1 + 1) // 2)"
    }
  },
  {
    "p_name": "p03556",
    "code": {
      "buggy_code": "var0 = int(input())\nfor i in range(1, var0 + 1):\n\tif i ** 2 > var0:\n\t\tprint((i - 1) ** 2)\n\t\texit()",
      "fixed_code": "var0 = int(input())\nprint(int(var0 ** 0.5) ** 2)"
    }
  },
  {
    "p_name": "p03352",
    "code": {
      "buggy_code": "var0 = int(input())\ni = 2\nvar1 = 1\nwhile i <= var0:\n\tj = 2\n\tvar2 = 0\n\twhile i ** j < var0:\n\t\tvar2 = i ** j\n\t\tj += 1\n\tif var2 > var1 and var2 <= var0:\n\t\tvar1 = var2\n\ti += 1\nprint(var1)",
      "fixed_code": "var0 = int(input())\ni = 2\nvar1 = 1\nwhile i <= var0:\n\tj = 2\n\tvar2 = 0\n\twhile i ** j <= var0:\n\t\tvar2 = i ** j\n\t\tj += 1\n\tif var2 > var1 and var2 <= var0:\n\t\tvar1 = var2\n\ti += 1\nprint(var1)"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = map(int, input().split())\nif not all(var1):\n\tprint(0)\nelse:\n\tvar2, var3 = (1, 10 ** 18)\n\tfor var4 in var1:\n\t\tif var2 > var3:\n\t\t\tvar2 = -1\n\t\t\tbreak\n\tprint(var2)",
      "fixed_code": "def method0():\n\tvar0 = int(input())\n\tvar1 = list(map(int, input().split()))\n\tif 0 in var1:\n\t\tprint(0)\n\t\treturn\n\tvar5 = 1\n\tfor var6 in var1:\n\t\tvar5 *= var6\n\t\tif var5 > 1000000000000000000:\n\t\t\tprint(-1)\n\t\t\treturn\n\tprint(var5)\nmethod0()"
    }
  },
  {
    "p_name": "p03731",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\n\ndef method0(var0, var1, var2):\n\tvar3 = var1\n\tfor i in range(var0 - 1):\n\t\tvar4 = var2[i + 1] - var2[i]\n\t\tif var4 <= var1:\n\t\t\tvar3 += var4\n\t\telse:\n\t\t\tvar3 += var1\n\treturn var3",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\n\ndef method0(var0, var1, var2):\n\tvar3 = var1\n\tfor i in range(var0 - 1):\n\t\tvar4 = var2[i + 1] - var2[i]\n\t\tif var4 <= var1:\n\t\t\tvar3 += var4\n\t\telse:\n\t\t\tvar3 += var1\n\treturn var3\nprint(method0(var0, var1, var2))"
    }
  },
  {
    "p_name": "p02747",
    "code": {
      "buggy_code": "var0 = {'h': 0, 'i': 0}\nvar1 = list(input())\nfor i in range(len(var1)):\n\tif var1[i] != 'h':\n\t\tif var1[i] != 'i':\n\t\t\tprint('No')\n\t\t\texit()\n\t\telse:\n\t\t\tvar0['i'] += 1\n\telse:\n\t\tvar0['h'] += 1\nif var0['i'] == var0['h'] and var0['h'] != 0 and (var0['i'] != 0):\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = {'h': 0, 'i': 0}\nvar1 = input()\nif len(var1) % 2 == 1:\n\tprint('No')\n\texit()\nvar2 = True\nfor i in range(0, len(var1) - 1, 2):\n\tif var1[i:i + 2] != 'hi':\n\t\tvar2 = False\n\t\tbreak\nprint('Yes' if var2 else 'No')"
    }
  },
  {
    "p_name": "p03012",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [int(i) for i in input().split()]\nvar2 = sum(var1) // 2\nvar3 = 0\nfor i in var1:\n\tif var2 - var3 > var3 + i - var2:\n\t\tvar3 += i\n\telse:\n\t\tbreak\nprint(abs(var2 - var3) * 2)",
      "fixed_code": "var0 = int(input())\nvar1 = [int(i) for i in input().split()]\nvar2 = sum(var1)\nvar4 = var2 // 2\nvar3 = 0\nfor i in var1:\n\tif var4 - var3 > var3 + i - var4:\n\t\tvar3 += i\n\telse:\n\t\tbreak\nprint(abs(var2 - 2 * var3))"
    }
  },
  {
    "p_name": "p02957",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = (var0 + var1) / 2\nif int(var2) == int(round((var0 + var1) / 2)):\n\tprint(int(var2))\nelse:\n\tprint('IMPOSSIBLE')",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = int((var0 + var1) / 2)\nif (var0 + var1) % 2 == 0:\n\tprint(int(var2))\nelse:\n\tprint('IMPOSSIBLE')"
    }
  },
  {
    "p_name": "p03456",
    "code": {
      "buggy_code": "var0, var1 = map(str, input().split())\nvar2 = var0 + var1\nvar3 = int(var2)\ni = 0\nwhile i < 317:\n\tvar4 = i * i\n\tif var4 == var3:\n\t\t(print('Yes'),)\n\t\ti = 317\n\telif var4 > var3:\n\t\tprint('No')\n\t\ti = 317\n\telse:\n\t\ti = i + 1",
      "fixed_code": "var0, var1 = map(str, input().split())\nvar2 = var0 + var1\nvar3 = int(var2)\ni = 0\nwhile i < 318:\n\tvar4 = i * i\n\tif var4 == var3:\n\t\t(print('Yes'),)\n\t\ti = 318\n\telif var4 > var3:\n\t\tprint('No')\n\t\ti = 318\n\telse:\n\t\ti = i + 1"
    }
  },
  {
    "p_name": "p03292",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = list(map(int, input().split()))\n\tvar1 = sorted(var0)\n\tprint(var0[2] + var0[1] - 2 * var0[0])\nmethod0()",
      "fixed_code": "def method0():\n\tvar0 = list(map(int, input().split()))\n\tvar1 = sorted(var0)\n\tprint(var1[2] - var1[0])\nmethod0()"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = 0\nvar4 = [pow(var0, 0.5), pow(var1, 0.5), pow(var2, 0.5)]\nfor i in range(1, 10 ** 5):\n\tif i ** 2 == var0:\n\t\tvar3 = 1\n\t\tvar4[0] = i\n\tif i ** 2 == var1:\n\t\tvar3 = 1\n\t\tvar4[1] = i\n\tif i ** 2 == var2:\n\t\tvar3 = 1\n\t\tvar4[2] = i\nif var4[0] + var4[1] < var4[2]:\n\tvar5 = 1\nelse:\n\tvar5 = 0\nprint(['No', 'Yes'][var5])",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nif 4 * var0 * var1 < (var2 - var0 - var1) ** 2 and var2 - var0 - var1 > 0:\n\tvar5 = 1\nelse:\n\tvar5 = 0\nprint(['No', 'Yes'][var5])"
    }
  },
  {
    "p_name": "p03775",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = len(str(var0))\nfor i in range(1, int(pow(var0, 0.5))):\n\tif var0 % i == 0:\n\t\tvar2 = max(len(str(i)), len(str(var0 / i)))\n\t\tvar1 = min(var2, var1)\nprint(var1)",
      "fixed_code": "var0 = int(input())\nvar1 = len(str(var0))\nfor i in range(1, int(pow(var0, 0.5) + 1)):\n\tif var0 % i == 0:\n\t\tvar2 = max(len(str(i)), len(str(int(var0 / i))))\n\t\tvar1 = min(var2, var1)\nprint(var1)"
    }
  },
  {
    "p_name": "p03617",
    "code": {
      "buggy_code": "var0 = []\nvar1 = 8\nvar2 = 0.25\nfor var3 in map(int, input().split()):\n\tvar0.append([var3 * var1, var3, var2])\n\tvar1 //= 2\n\tvar2 *= 2\nvar0.sort()\nvar4 = int(input())\nvar5 = 0\nfor var6, var3, var2 in var0:\n\tvar7 = var4 // var2\n\tvar5 += var7 * var3\n\tvar4 -= var7 * var2\nprint(int(var5))",
      "fixed_code": "var0 = []\nvar2 = 0.25\nfor var3 in map(int, input().split()):\n\tvar0.append([var3 / var2, var2, var3])\n\tvar2 *= 2\nvar0.sort()\nvar4 = int(input())\nvar5 = 0\nfor var6, var2, var3 in var0:\n\tvar7 = int(var4 // var2)\n\tvar5 += var7 * var3\n\tvar4 -= int(var7 * var2)\nprint(var5)"
    }
  },
  {
    "p_name": "p03760",
    "code": {
      "buggy_code": "var0 = list(input())\nvar1 = list(input())\nfor var2, var3 in zip(var0, var1):\n\tprint(var2 + var3, var4='')",
      "fixed_code": "var0 = list(input())\nvar1 = list(input()) + ['']\nfor var2, var3 in zip(var0, var1):\n\tprint(var2 + var3, var4='')"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var1 - var0 + var0 % 2019 < 2019:\n\tprint(var0 % 2019 * (var0 % 2019 + 1))\nelse:\n\tprint(0)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var1 - var0 + var0 % 2019 < 2019:\n\tvar2 = 2019\n\tfor i in range(var0 % 2019, var1 % 2019):\n\t\tfor j in range(i + 1, var1 % 2019 + 1):\n\t\t\tvar2 = min(i * j % 2019, var2)\n\tprint(var2)\nelse:\n\tprint(0)"
    }
  },
  {
    "p_name": "p02608",
    "code": {
      "buggy_code": "from itertools import combinations_with_replacement\nvar0 = int(input())\n\ndef method0(var1: int, var2: int, var3: int) -> int:\n\treturn var1 ** 2 + var2 ** 2 + var3 ** 2 + var1 * var2 + var2 * var3 + var3 * var1\nvar4 = {}\nfor var1, var2, var3 in combinations_with_replacement(range(1, 43), 3):\n\tvar5 = len(set([var1, var2, var3]))\n\tvar6 = method0(var1, var2, var3)\n\tif var5 == 1:\n\t\tvar4[var6] = 1\n\telif var5 == 2:\n\t\tvar4[var6] = 3\n\telse:\n\t\tvar4[var6] = 6\nfor i in range(1, var0 + 1):\n\tprint(var4.get(i, 0))",
      "fixed_code": "from itertools import combinations_with_replacement\nfrom collections import defaultdict\nvar0 = int(input())\n\ndef method0(var1: int, var2: int, var3: int) -> int:\n\treturn var1 ** 2 + var2 ** 2 + var3 ** 2 + var1 * var2 + var2 * var3 + var3 * var1\nvar7 = defaultdict(int)\nfor var1, var2, var3 in combinations_with_replacement(range(1, 100), 3):\n\tvar5 = len(set([var1, var2, var3]))\n\tvar6 = method0(var1, var2, var3)\n\tif var5 == 1:\n\t\tvar7[var6] += 1\n\telif var5 == 2:\n\t\tvar7[var6] += 3\n\telse:\n\t\tvar7[var6] += 6\nfor i in range(1, var0 + 1):\n\tprint(var7.get(i, 0))"
    }
  },
  {
    "p_name": "p03345",
    "code": {
      "buggy_code": "var0, var1, var2, k = map(int, input().split())\nif var0 == var1 and var1 == var2:\n\tprint(0)\nelif (var0 + var2) * k >= 1000000000000000000 or (var1 + var2) * k >= 1000000000000000000:\n\tprint('Unfair')\nelse:\n\tfor i in range(k):\n\t\tvar3 = var1 + var2\n\t\tvar4 = var0 + var2\n\t\tvar5 = var0 + var1\n\t\tvar0 = var3\n\t\tvar1 = var4\n\t\tvar2 = var5\n\tprint(var0 - var1)",
      "fixed_code": "var0, var1, var2, k = map(int, input().split())\nif k % 2 == 0:\n\tif abs(var0 - var1) >= 10 ** 18:\n\t\tprint('Unfair')\n\telse:\n\t\tprint(var0 - var1)\nelif abs(var0 - var1) >= 10 ** 18:\n\tprint('Unfair')\nelse:\n\tprint(var1 - var0)"
    }
  },
  {
    "p_name": "p02393",
    "code": {
      "buggy_code": "var0 = list(map(int, input().split()))\nvar0.sort()\nprint(var0[0])",
      "fixed_code": "var0 = list(map(int, input().split()))\nvar0.sort()\nprint('{} {} {}'.format(var0[0], var0[1], var0[2]))"
    }
  },
  {
    "p_name": "p03286",
    "code": {
      "buggy_code": "var0 = int(input())\nk = 0\ni = 0\nvar1 = []\nwhile k != var0:\n\tj = pow(-2, i)\n\tvar2 = '1' if (var0 - k - j) % pow(2, i + 1) == 0 else '0'\n\tvar1.append(var2)\n\tk += int(var2) * j\n\ti += 1\nprint(''.join(reversed(var1)))",
      "fixed_code": "var0 = int(input())\nvar1 = [0] * 40\nif var0 == 0:\n\tprint(0)\n\texit()\nelse:\n\twhile var0 != 0:\n\t\ti = 1 if var0 < 0 else 0\n\t\tk = pow(-2, i)\n\t\twhile abs(var0) > abs(k):\n\t\t\ti += 2\n\t\t\tk += pow(-2, i)\n\t\tvar1[i] = 1\n\t\tvar0 -= pow(-2, i)\nfor j in range(39, -1, -1):\n\tif var1[j] == 1:\n\t\tprint(''.join(map(str, reversed(var1[:j + 1]))))\n\t\texit()"
    }
  },
  {
    "p_name": "p03208",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = [int(input()) for i in range(var0)]\nvar2.sort()\nvar3 = var2[var1 - 1] - var2[0]\nfor i in range(var0 - var1):\n\tvar4 = var2[i:i + var1 - 1]\n\tvar5 = var4[-1] - var4[0]\n\tif var3 > var5:\n\t\tvar3 = var5\nprint(var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = [int(input()) for i in range(var0)]\nvar2.sort()\nvar3 = var2[var1 - 1] - var2[0]\nfor i in range(var0 - var1 + 1):\n\tvar5 = var2[i + var1 - 1] - var2[i]\n\tif var3 > var5:\n\t\tvar3 = var5\nprint(var3)"
    }
  },
  {
    "p_name": "p03059",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = 0\nvar4 = var0\nwhile var4 <= var2:\n\tvar4 *= 2\n\tvar3 += var1\nprint(var3)",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = 0\nvar4 = var0\nwhile var4 <= var2:\n\tvar4 += var0\n\tvar3 += var1\nprint(var3)"
    }
  },
  {
    "p_name": "p02681",
    "code": {
      "buggy_code": "from copy import copy, deepcopy\nfrom collections import Counter\nfrom math import sqrt, floor, factorial\nfrom itertools import permutations, combinations, combinations_with_replacement\nfrom operator import mul\nfrom functools import reduce\nimport bisect\nvar0 = 10 ** 9 + 7\nvar1 = float('inf')\nvar2 = input()\nvar3 = input()\nprint(var2)\nprint('YNeos'[var3[:-1] != var2::2])",
      "fixed_code": "from copy import copy, deepcopy\nfrom collections import Counter\nfrom math import sqrt, floor, factorial\nfrom itertools import permutations, combinations, combinations_with_replacement\nfrom operator import mul\nfrom functools import reduce\nimport bisect\nvar0 = 10 ** 9 + 7\nvar1 = float('inf')\nvar2 = input()\nvar3 = input()\nif var3[:-1] == var2:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02640",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nfor i in range(var0):\n\tfor j in range(var0):\n\t\tif 2 * i + 4 * j == var1:\n\t\t\tprint('Yes')\n\t\t\texit()\nprint('No')",
      "fixed_code": "var0, var1 = map(int, input().split())\nfor i in range(var0 + 1):\n\tfor j in range(var0 + 1):\n\t\tif 2 * i + 4 * j == var1 and i + j == var0:\n\t\t\tprint('Yes')\n\t\t\texit()\nprint('No')"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "var0, var1 = input().split()\nvar0 = int(var0)\nvar1 = int(var1.replace('.', ''))\nprint(var0, var1)\nimport math\nprint(math.floor(var0 * var1 / 100))",
      "fixed_code": "var0, var1 = input().split()\nvar0 = int(var0)\nvar1 = int(var1.replace('.', ''))\nprint(var0 * var1 // 100)"
    }
  },
  {
    "p_name": "p02935",
    "code": {
      "buggy_code": "var0, *var1 = map(int, open(0).read().split())\nprint(var1)\nvar1 = sorted(var1)\nwhile len(var1) > 1:\n\tvar2 = (var1[0] + var1[1]) / 2\n\tvar1.append(var2)\n\tvar1 = var1[2:]\n\tvar1 = sorted(var1)\nprint(var1[0])",
      "fixed_code": "var0, *var1 = map(int, open(0).read().split())\nvar1 = sorted(var1)\nwhile len(var1) > 1:\n\tvar2 = (var1[0] + var1[1]) / 2\n\tvar1.append(var2)\n\tvar1 = var1[2:]\n\tvar1 = sorted(var1)\nprint(var1[0])"
    }
  },
  {
    "p_name": "p02989",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar1.sort()\nprint(var1)\nprint(var1[int(var0 / 2)] - var1[int(var0 / 2) - 1] + 1)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar1.sort()\nprint(var1[int(var0 / 2)] - var1[int(var0 / 2) - 1])"
    }
  },
  {
    "p_name": "p03035",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var0 >= 13:\n\tprint(var1)\nelif 12 >= var0 >= 6:\n\tprint(var1 / 2)\nelif 5 >= var0 >= 1:\n\tprint(var1 / 4)\nelse:\n\tprint(0)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 >= 13:\n\tprint(var1)\nelif 12 >= var0 >= 6:\n\tprint(int(var1 / 2))\nelse:\n\tprint(0)"
    }
  },
  {
    "p_name": "p02934",
    "code": {
      "buggy_code": "from fractions import Fraction\nvar0 = int(input())\nvar1 = list(map(int, input().split()))\nfor i in range(var0):\n\tvar1[i] = Fraction(1, var1[i])\nprint(Fraction(1, sum(var1)))",
      "fixed_code": "from fractions import Fraction\nvar0 = int(input())\nvar1 = list(map(int, input().split()))\nfor i in range(var0):\n\tvar1[i] = Fraction(1, var1[i])\nprint(float(Fraction(1, sum(var1))))"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = [-1] * var0\nfor i in range(var1):\n\tvar3, var4 = map(int, input().split())\n\tif var2[var3 - 1] == -1:\n\t\tvar2[var3 - 1] = var4\n\telif var2[var3 - 1] == var4:\n\t\tcontinue\n\telse:\n\t\tvar2 = -1\n\t\tbreak\nif var2 == -1:\n\tprint(var2)\nelif var2[0] == 0:\n\tprint(-1)\nelse:\n\tvar5 = ''\n\tfor i in range(var0):\n\t\tif var2[i] == -1:\n\t\t\tif i == 0:\n\t\t\t\tvar2[i] = 1\n\t\t\telse:\n\t\t\t\tvar2[i] = 0\n\t\tvar5 += str(var2[i])\n\tprint(var5)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = [-1] * var0\nfor i in range(var1):\n\tvar3, var4 = map(int, input().split())\n\tif var2[var3 - 1] == -1:\n\t\tvar2[var3 - 1] = var4\n\telif var2[var3 - 1] == var4:\n\t\tcontinue\n\telse:\n\t\tvar2 = -1\n\t\tbreak\nif var2 == -1:\n\tprint(var2)\nelif var2[0] == 0:\n\tif var0 == 1:\n\t\tprint(0)\n\telse:\n\t\tprint(-1)\nelse:\n\tvar5 = ''\n\tfor i in range(var0):\n\t\tif var2[i] == -1:\n\t\t\tif i == 0 and var0 == 1:\n\t\t\t\tvar2[i] = 0\n\t\t\telif i == 0:\n\t\t\t\tvar2[i] = 1\n\t\t\telse:\n\t\t\t\tvar2[i] = 0\n\t\tvar5 += str(var2[i])\n\tprint(var5)"
    }
  },
  {
    "p_name": "p03037",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = -1\nvar3 = var0 + 1\nfor i in range(var1):\n\tvar4, var5 = map(int, input().split())\n\tif var4 > var2:\n\t\tvar2 = var4\n\tif var5 < var3:\n\t\tvar3 = var5\nprint(var3 - var2 + 1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = -1\nvar3 = var0 + 1\nfor i in range(var1):\n\tvar4, var5 = map(int, input().split())\n\tif var4 > var2:\n\t\tvar2 = var4\n\tif var5 < var3:\n\t\tvar3 = var5\nif var3 >= var2:\n\tprint(var3 - var2 + 1)\nelse:\n\tprint(0)"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "print(int(eval(input().replace(' ', '*'))))",
      "fixed_code": "from decimal import var2\nvar0, var1 = map(var2, input().split())\nprint(int(var0 * var1))"
    }
  },
  {
    "p_name": "p02612",
    "code": {
      "buggy_code": "var0 = int(input())\nprint(1000 - var0 % 1000)",
      "fixed_code": "var0 = int(input())\nif var0 % 1000 == 0:\n\tprint(0)\nelse:\n\tprint(1000 - var0 % 1000)"
    }
  },
  {
    "p_name": "p03438",
    "code": {
      "buggy_code": "import numpy as var0\n\ndef method0():\n\tvar1 = int(input())\n\tvar2 = var0.array(list(map(int, input().split())))\n\tvar3 = var0.array(list(map(int, input().split())))\n\tvar4 = var0.sum(var2)\n\tvar5 = var0.sum(var3)\n\tvar6 = var2 - var3\n\tvar7 = 0\n\tfor var8 in var6:\n\t\tif var8 > 0:\n\t\t\tvar7 += var8\n\t\telse:\n\t\t\tvar7 += (-var8 - 1) // 2\n\tif var7 <= var5 - var4:\n\t\tvar9 = 'Yes'\n\telse:\n\t\tvar9 = 'No'\n\tprint(var9)\nmethod0()",
      "fixed_code": "import numpy as var0\n\ndef method0():\n\tvar1 = int(input())\n\tvar2 = var0.array(list(map(int, input().split())))\n\tvar3 = var0.array(list(map(int, input().split())))\n\tvar4 = var0.sum(var2)\n\tvar5 = var0.sum(var3)\n\tvar6 = var2 - var3\n\tif var4 > var5:\n\t\tvar9 = 'No'\n\telse:\n\t\tvar10 = 0\n\t\tvar11 = 0\n\t\tfor var8 in var6:\n\t\t\tif var8 > 0:\n\t\t\t\tvar10 += var8\n\t\t\telse:\n\t\t\t\tvar11 += (-var8 + 1) // 2\n\t\tif max(var10, var11) <= var5 - var4:\n\t\t\tvar9 = 'Yes'\n\t\telse:\n\t\t\tvar9 = 'No'\n\tprint(var9)\nmethod0()"
    }
  },
  {
    "p_name": "p03910",
    "code": {
      "buggy_code": "var0 = int(input())\nk = 1\nwhile True:\n\tif k * (k + 1) // 2 >= var0:\n\t\tvar1 = k\n\t\tbreak\n\tk += 1\nprint(var1)",
      "fixed_code": "var0 = int(input())\nk = 1\nwhile True:\n\tif k * (k + 1) // 2 >= var0:\n\t\tvar1 = k\n\t\tbreak\n\tk += 1\nif var0 == var1 * (var1 + 1) // 2:\n\ti = 1\n\twhile i <= var1:\n\t\tprint(i)\n\t\ti += 1\nelse:\n\ti = 1\n\tvar2 = []\n\tvar3 = 1\n\twhile i < var1:\n\t\tif var3 <= (var1 - 1) * (var1 + 2) // 2 - var0:\n\t\t\tprint(i)\n\t\t\tvar3 += 1\n\t\telse:\n\t\t\tprint(i + 1)\n\t\ti += 1"
    }
  },
  {
    "p_name": "p02759",
    "code": {
      "buggy_code": "var0 = int(input())\nprint(int(var0 // 2 + 0.5))",
      "fixed_code": "var0 = int(input())\nprint((var0 + 1) // 2)"
    }
  },
  {
    "p_name": "p03001",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = list(map(int, input().split()))\nif var2 == 0 or var2 == var0:\n\tvar4 = 0\n\tif var3 >= var1 / 2:\n\t\tvar5 = var0 * (var1 - var3)\n\telse:\n\t\tvar5 = var0 * var3\nif var3 == 0 or var3 == var1:\n\tvar5 = 0\n\tif var2 >= var0 / 2:\n\t\tvar4 = var1 * (var0 - var2)\n\telse:\n\t\tvar4 = var1 * var2\nif var2 != 0 and var2 != var0 and (var3 != 0) and (var3 != var1):\n\tif var3 >= var1 / 2:\n\t\tvar5 = var0 * (var1 - var3)\n\telse:\n\t\tvar5 = var0 * var3\n\tif var2 >= var0 / 2:\n\t\tvar4 = var1 * (var0 - var2)\n\telse:\n\t\tvar4 = var1 * var2\nif var5 == var4:\n\tprint(float(max(var5, var4)), '1')\nelse:\n\tprint(float(max(var5, var4)), '0')",
      "fixed_code": "var0, var1, var2, var3 = list(map(float, input().split()))\nif float(var2) == var0 / 2.0 and float(var3) == var1 / 2.0:\n\tprint('{:9e}'.format(var0 * var1 / 2.0), '1')\nelse:\n\tprint('{:9e}'.format(var0 * var1 / 2.0), '0')"
    }
  },
  {
    "p_name": "p03239",
    "code": {
      "buggy_code": "var0 = 10000\nvar1, var2 = list(map(int, input().split()))\nfor i in range(var1):\n\tvar3, var4 = list(map(int, input().split()))\n\tif var4 < var0:\n\t\tvar0 = var4\n\t\tvar5 = var3\nif var0 <= var2:\n\tprint(var3)\nelse:\n\tprint('TLE')",
      "fixed_code": "var5 = 10000\nvar1, var2 = list(map(int, input().split()))\nfor i in range(var1):\n\tvar3, var4 = list(map(int, input().split()))\n\tif var4 <= var2 and var3 < var5:\n\t\tvar5 = var3\nif var5 != 10000:\n\tprint(var5)\nelse:\n\tprint('TLE')"
    }
  },
  {
    "p_name": "p02725",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar2.sort()\nvar3 = []\nfor i in range(var1 - 1):\n\tvar3.append(var0 - var2[i + 1] + var2[i])\nvar3.append(var0 - var2[var1 - 1] + var2[0])\nprint(min(var3))",
      "fixed_code": "var0, var1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar3 = []\nfor i in range(var1 - 1):\n\tvar3.append(var0 - var2[i + 1] + var2[i])\nvar3.append(var2[var1 - 1] - var2[0])\nprint(min(var3))"
    }
  },
  {
    "p_name": "p02766",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nfor i in range(1, 300)[::-1]:\n\tif var0 // var1 ** i != 0:\n\t\tprint(i + 1)\n\t\tbreak",
      "fixed_code": "var0, var1 = map(int, input().split())\nfor i in range(1, 100)[::-1]:\n\tif var0 // var1 ** i != 0:\n\t\tprint(i + 1)\n\t\tbreak\nelse:\n\tprint(1)"
    }
  },
  {
    "p_name": "p03067",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nif (var0 < var2) & (var2 < var1):\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nif (var0 < var2) & (var2 < var1):\n\tprint('Yes')\nelif (var0 > var2) & (var2 > var1):\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02682",
    "code": {
      "buggy_code": "var0, var1, var2, k = map(int, input().split())\nif k == 0:\n\tprint('0')\nelif var0 < k:\n\tprint(var0 - k)\nelif var0 + var1 > k:\n\tprint(var0)\nelse:\n\tvar3 = var0 + var1\n\tvar4 = var0 - (k - var3)\n\tprint(var4)",
      "fixed_code": "var0, var1, var2, k = map(int, input().split())\nvar5 = var0\nif k == 0:\n\tprint(0)\nelif var0 > k:\n\tprint(k)\nelif var0 + var1 >= k:\n\tprint(var0)\nelse:\n\tvar3 = var0 + var1\n\tvar4 = var5 - (k - var3)\n\tprint(var4)"
    }
  },
  {
    "p_name": "p03043",
    "code": {
      "buggy_code": "from fractions import Fraction\nvar0, var1 = map(int, raw_input().split())\nvar2 = float(0)\nif var0 > var1:\n\tvar2 += Fraction(var0 - var1 + 1, var0)\nvar3 = min(var0, var1)\nvar4 = 1\nwhile True:\n\tif var3 == 1:\n\t\tbreak\n\tvar5 = var1 - var1 * (2 ** var4 - 1) / 2 ** var4\n\tif var3 > var5:\n\t\tvar2 += Fraction(var3 - var5, var0 * 2 ** var4)\n\tvar4 += 1\n\tvar3 = min(var5, var0 + 1)\nprint(var2)",
      "fixed_code": "from decimal import *\nvar0, var1 = map(int, raw_input().split())\nvar2 = Decimal(0)\nif var0 >= var1:\n\tvar2 += Decimal(var0 - var1 + 1) / Decimal(var0)\nvar3 = min(var0 + 1, var1)\nvar4 = 1\nwhile True:\n\tif var3 == 1:\n\t\tbreak\n\tvar5 = var1 - var1 * (2 ** var4 - 1) / 2 ** var4\n\tif var3 > var5:\n\t\tvar2 += Decimal(var3 - var5) / Decimal(var0 * 2 ** var4)\n\tvar4 += 1\n\tvar3 = min(var5, var0 + 1)\nprint(var2)"
    }
  },
  {
    "p_name": "p03854",
    "code": {
      "buggy_code": "var0 = input()\nvar0 = var0[::-1]\nvar1 = ['dream', 'dreamer', 'erase', 'eraser']\nfor i in range(len(var1)):\n\tvar1[i] = var1[i][::-1]\nwhile True:\n\tvar2 = False\n\tfor var3 in var1:\n\t\tif var0[:len(var3)] == var3:\n\t\t\tvar0 = var0[len(var3):]\n\t\t\tvar2 = True\n\tif var0 == '':\n\t\tprint('Yes')\n\t\tbreak\n\telif not var2:\n\t\tprint('No')\n\t\tbreak",
      "fixed_code": "var4 = input()\nvar4 = var4.replace('eraser', '')\nvar4 = var4.replace('erase', '')\nvar4 = var4.replace('dreamer', '')\nvar4 = var4.replace('dream', '')\nif var4 == '':\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p02613",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [input() for _ in range(1, var0 + 1)]\nvar2 = 0\nvar3 = 0\nvar4 = 0\nvar5 = 0\nfor var6 in var1:\n\tif var6 == 'AC':\n\t\tvar2 += 1\n\telif var6 == 'WA':\n\t\tvar3 += 1\n\telif var6 == 'TLE':\n\t\tvar4 += 1\n\telif var6 == 'RE':\n\t\tvar5 += 1\nprint('AC x' + str(var2))\nprint('WA x' + str(var3))\nprint('TLE x' + str(var4))\nprint('RE x' + str(var5))",
      "fixed_code": "var0 = int(input())\nvar6 = [input() for i in range(var0)]\nfor var7 in ['AC', 'WA', 'TLE', 'RE']:\n\tprint('{0} x {1}'.format(var7, var6.count(var7)))"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split()))\nvar2 = var1 // 2 + var1 % 2\nvar3 = var1 // 2\nvar4 = var0 // 2 + var0 % 2\nvar5 = var0 // 2\nprint(var2 * var4 + var3 * var5)",
      "fixed_code": "var0, var1 = list(map(int, input().split()))\nif var0 == 1 or var1 == 1:\n\tprint(1)\n\timport sys\n\tsys.exit()\nvar2 = var1 // 2 + var1 % 2\nvar3 = var1 // 2\nvar4 = var0 // 2 + var0 % 2\nvar5 = var0 // 2\nprint(var2 * var4 + var3 * var5)"
    }
  },
  {
    "p_name": "p03282",
    "code": {
      "buggy_code": "var0 = list(input())\nvar1, = list(map(int, input().split()))\nvar2 = 1\nfor i in range(len(var0)):\n\tif not var0[i] == '1':\n\t\tvar2 = int(var0[i])\n\t\tbreak\nprint(var2)",
      "fixed_code": "var0 = list(input())\nvar1, = list(map(int, input().split()))\nvar2 = 1\nvar3 = 0\nfor i in range(len(var0)):\n\tif not var0[i] == '1':\n\t\tvar2 = int(var0[i])\n\t\tbreak\n\telse:\n\t\tvar3 += 1\nif len(var0) == 1:\n\tvar2 = int(var0[0])\nif var3 >= var1:\n\tvar2 = 1\nprint(var2)"
    }
  },
  {
    "p_name": "p03625",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = {}\nvar2 = map(int, input().split())\nfor i in var2:\n\ttry:\n\t\tvar1[i] += 1\n\texcept KeyError:\n\t\tvar1[i] = 1\nvar3 = []\nfor i in sorted(var1.keys(), var4=True):\n\tif var1[i] >= 2:\n\t\tvar3.append(i)\nif len(var3) >= 2:\n\tprint(var3[0] * var3[1])\nelse:\n\tprint('0')",
      "fixed_code": "var0 = int(input())\nvar1 = {}\nvar2 = map(int, input().split())\nfor i in var2:\n\ttry:\n\t\tvar1[i] += 1\n\texcept KeyError:\n\t\tvar1[i] = 1\nvar3 = []\nfor i in sorted(var1.keys(), var4=True):\n\tif var1[i] >= 4:\n\t\tvar3.append(i)\n\t\tvar3.append(i)\n\telif var1[i] >= 2:\n\t\tvar3.append(i)\nif len(var3) >= 2:\n\tprint(var3[0] * var3[1])\nelse:\n\tprint('0')"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nvar1 = [int(i) for i in input().split()]\nvar1.sort(var2=True)\nvar3 = 1\nif var1[-1] == 0:\n\tprint(0)\n\texit()\nfor var4 in var1:\n\tif math.log10(var4) > 18:\n\t\tprint(-1)\n\t\texit()\n\tvar3 *= var4\n\tif var3 % 10 == 0 and math.log10(var3) == 18:\n\t\tprint(var3)\n\telif math.log10(var3) > 18:\n\t\tprint(-1)\n\t\texit()\nprint(var3)",
      "fixed_code": "import math\nvar0 = int(input())\nvar1 = [int(i) for i in input().split()]\nvar1.sort(var2=True)\nvar3 = 1\nif var1[-1] == 0:\n\tprint(0)\n\texit()\nfor var4 in var1:\n\tif var4 > 1000000000000000000:\n\t\tprint(-1)\n\t\texit()\n\tvar3 *= var4\n\tif var3 > 1000000000000000000:\n\t\tprint(-1)\n\t\texit()\nprint(var3)"
    }
  },
  {
    "p_name": "p03041",
    "code": {
      "buggy_code": "var0, k = map(int, input().split())\nvar1 = input()\nprint(var1.replace(var1[k - 1], var1[k - 1].lower()))",
      "fixed_code": "var0, k = map(int, input().split())\nvar1 = input()\nprint(var1[:k - 1] + var1[k - 1].lower() + var1[k:])"
    }
  },
  {
    "p_name": "p03607",
    "code": {
      "buggy_code": "from sys import exit, stdin\nfrom collections import Counter\nvar0 = int(stdin.readline().rstrip())\nvar1 = Counter((int(stdin.readline().rstrip()) for _ in range(var0)))\nprint(len(Counter((var2 for var2 in var1.elements() if var1[var2] == 1))))",
      "fixed_code": "from sys import exit, stdin\nfrom collections import Counter\nvar0 = int(stdin.readline().rstrip())\nvar1 = Counter((int(stdin.readline().rstrip()) for _ in range(var0)))\nprint(len(Counter((var2 for var2 in var1.elements() if var1[var2] % 2 == 1))))"
    }
  },
  {
    "p_name": "p02633",
    "code": {
      "buggy_code": "var0 = int(input())\nif 360 % var0 == 0:\n\tprint(360 // var0)\nelse:\n\tprint(180)",
      "fixed_code": "var0 = int(input())\nfor i in range(1, 361):\n\tif var0 * i % 360 == 0:\n\t\tprint(i)\n\t\tbreak"
    }
  },
  {
    "p_name": "p02880",
    "code": {
      "buggy_code": "var0 = int(input())\nfor var1 in range(1, 10):\n\tif var0 / var1 == var0 // var1:\n\t\tprint('Yes')\n\t\tbreak\nelse:\n\tprint('No')",
      "fixed_code": "var0 = int(input())\nfor var1 in range(1, 10):\n\tif var0 / var1 == var0 // var1 and 1 <= var0 // var1 <= 9:\n\t\tprint('Yes')\n\t\tbreak\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03035",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var0 <= 13:\n\tprint(var1)\nelif 6 <= var0:\n\tprint(int(var1 / 2))\nelse:\n\tprint(0)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif 13 <= var0:\n\tprint(var1)\nelif 6 <= var0:\n\tprint(int(var1 / 2))\nelse:\n\tprint(0)"
    }
  },
  {
    "p_name": "p02754",
    "code": {
      "buggy_code": "import math\nvar0, var1, var2 = map(int, input().split())\nif var2 == 0:\n\tif var1 == 0:\n\t\tprint(0)\n\telse:\n\t\tprint(var0)\nelse:\n\tprint(math.ceil(var0 // (var1 + var2) * var1))",
      "fixed_code": "import math\nvar0, var1, var2 = map(int, input().split())\nvar3 = var0 // (var1 + var2) * var1\nvar3 += min(var1, var0 % (var1 + var2))\nprint(var3)"
    }
  },
  {
    "p_name": "p02578",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nfor i in range(var0):\n\tif i == 0:\n\t\tpass\n\telif var1[i] - var1[i - 1] <= 0:\n\t\tpass\n\telse:\n\t\tvar3 = var1[i] - var1[i - 1]\n\t\tvar2 += var3\n\t\tvar1[i] += var3\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nfor i in range(var0):\n\tif i == 0:\n\t\tpass\n\telif var1[i] - var1[i - 1] >= 0:\n\t\tpass\n\telse:\n\t\tvar3 = var1[i - 1] - var1[i]\n\t\tvar2 += var3\n\t\tvar1[i] += var3\nprint(var2)"
    }
  },
  {
    "p_name": "p02866",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = [0] * var0\nvar3 = 998244353\nfor i in range(var0):\n\tvar2[var1[i]] += 1\nif var2[var0 - 1] == 0:\n\tvar4 = var0 - 1\n\tfor i in range(1, var0):\n\t\tvar5 = var2[var0 - i]\n\t\tif var5 == 0:\n\t\t\tvar4 = var0 - i\n\t\telse:\n\t\t\tbreak\n\tdel var2[var4:var0]\nif (var1[0] != 0) | (var2[0] != 1):\n\tprint(0)\n\texit()\nif len(var2) <= 2:\n\tprint(len(var2) - 1)\n\texit()\nvar2.append(1)\nvar6 = 1\nfor i in range(len(var2) - 1):\n\tvar5 = var2[i] ** var2[i + 1] % var3\n\tvar6 *= var5\nprint(var6 % var3)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = [0] * (max(var1) + 1)\nvar3 = 998244353\nfor i in range(var0):\n\tvar2[var1[i]] += 1\nif (var1[0] != 0) | (var2[0] != 1):\n\tprint(0)\n\texit()\nvar6 = 1\nfor i in range(len(var2) - 1):\n\tvar6 *= pow(var2[i], var2[i + 1], var3)\nprint(var6 % var3)"
    }
  },
  {
    "p_name": "p02866",
    "code": {
      "buggy_code": "import sys\nimport collections\nsys.setrecursionlimit(10 ** 9)\n\ndef input():\n\treturn sys.stdin.readline().rstrip()\n\ndef method0():\n\tvar0 = int(input())\n\tvar1 = list(map(int, input().split()))\n\tvar2 = collections.Counter(var1)\n\tk = list(var2.keys())\n\tvar3 = list(var2.values())\n\tvar4 = 1 if var2[0] == 1 else 0\n\tfor i in range(max(k)):\n\t\tvar4 *= var2[i] ** var2[i + 1]\n\t\tvar4 %= 998244353\n\t\tif var4 == 0:\n\t\t\tbreak\n\tprint(var4)\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "import sys\nimport collections\nsys.setrecursionlimit(10 ** 9)\n\ndef input():\n\treturn sys.stdin.readline().rstrip()\n\ndef method0():\n\tvar0 = int(input())\n\tvar1 = list(map(int, input().split()))\n\tvar2 = collections.Counter(var1)\n\tk = list(var2.keys())\n\tvar3 = list(var2.values())\n\tvar4 = 1 if var2[0] == 1 and var1[0] == 0 else 0\n\tfor i in range(max(k)):\n\t\tvar4 *= var2[i] ** var2[i + 1]\n\t\tvar4 %= 998244353\n\t\tif var4 == 0:\n\t\t\tbreak\n\tprint(var4)\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02401",
    "code": {
      "buggy_code": "var0, var1, var2 = input().split()\nif var1 == '+':\n\tprint(int(var0) + int(var2))\nelif var1 == '-':\n\tprint(int(var0) - int(var2))\nelif var1 == '*':\n\tprint(int(var0) * int(var2))\nelif var1 == '/':\n\tprint(int(var0) / float(var2))",
      "fixed_code": "while True:\n\tvar0, var1, var2 = input().split()\n\tif var1 == '+':\n\t\tprint(int(var0) + int(var2))\n\telif var1 == '-':\n\t\tprint(int(var0) - int(var2))\n\telif var1 == '*':\n\t\tprint(int(var0) * int(var2))\n\telif var1 == '/':\n\t\tprint(int(var0) // int(var2))\n\telse:\n\t\tbreak"
    }
  },
  {
    "p_name": "p02771",
    "code": {
      "buggy_code": "def method0():\n\tvar0, var1, var2 = map(int, input().split())\n\tif var0 == var1 and var1 == var2:\n\t\tprint('No')\n\t\treturn\n\tif var0 != var1 and var1 != var2:\n\t\tprint('No')\n\t\treturn\n\tprint('Yes')\nmethod0()",
      "fixed_code": "def method0():\n\tvar0, var1, var2 = map(int, input().split())\n\tif var0 == var1 and var1 == var2:\n\t\tprint('No')\n\t\treturn\n\tif var0 == var1 or var1 == var2 or var0 == var2:\n\t\tprint('Yes')\n\t\treturn\n\tprint('No')\nmethod0()"
    }
  },
  {
    "p_name": "p03438",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [int(var2) for var2 in input().split()]\nvar3 = [int(var2) for var2 in input().split()]\nvar4 = 0\nvar5 = 0\nfor i in range(var0):\n\tvar4 += var3[i] - var1[i]\n\tif var1[i] < var3[i]:\n\t\tvar5 += (var3[i] - var1[i]) // 2\nif var5 < var4:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = int(input())\nvar1 = [int(var2) for var2 in input().split()]\nvar3 = [int(var2) for var2 in input().split()]\nvar2 = 0\nvar6 = 0\nfor i in range(var0):\n\tif var1[i] > var3[i]:\n\t\tvar2 += var1[i] - var3[i]\n\telif var1[i] < var3[i]:\n\t\tvar6 += (var3[i] - var1[i]) // 2\nif var2 <= var6:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03029",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nprint((var0 * 3 + var1) % 2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nprint((var0 * 3 + var1) // 2)"
    }
  },
  {
    "p_name": "p02995",
    "code": {
      "buggy_code": "import math\nvar0, var1, var2, var3 = map(int, input().split())\nvar4 = var1 // var2 - var0 // var2\nvar5 = var1 // var3 - var0 // var3\nvar6 = math.gcd(var2, var3)\nvar7 = var2 * var3 // var6\nvar8 = var1 // var7 - var0 // var7\nprint(var1 - var0 + 1 - var4 - var5 + var8)",
      "fixed_code": "import math\nvar0, var1, var2, var3 = map(int, input().split())\nvar4 = var1 // var2 - (var0 - 1) // var2\nvar5 = var1 // var3 - (var0 - 1) // var3\nvar6 = math.gcd(var2, var3)\nvar7 = var2 * var3 // var6\nvar8 = var1 // var7 - (var0 - 1) // var7\nprint(var1 - var0 + 1 - var4 - var5 + var8)"
    }
  },
  {
    "p_name": "p03285",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 0\nfor i in range(30):\n\tfor j in range(20):\n\t\tif 4 * i + 7 * j == var0:\n\t\t\tvar1 += 1\nprint(var1)",
      "fixed_code": "var0 = int(input())\nvar1 = 0\nfor i in range(30):\n\tfor j in range(20):\n\t\tif 4 * i + 7 * j == var0:\n\t\t\tvar1 += 1\nif var1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02393",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\n\ndef method0(var3, var4):\n\tif var3 > var4:\n\t\tvar5 = var3\n\t\tvar3 = var4\n\t\tvar4 = var5\nmethod0(var0, var1)\nmethod0(var1, var2)\nprint(f'{var0} {var1} {var2}')",
      "fixed_code": "print(*sorted(input().split()))"
    }
  },
  {
    "p_name": "p03338",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(input())\nvar2 = 0\nfor i in range(var0 - 1):\n\tvar3, var4 = (var1[0:i], var1[i + 1:var0 - 1])\n\tvar2 = max(var2, len(set(var3) & set(var4)))\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(input())\nvar2 = 0\nfor i in range(var0):\n\tvar3, var4 = (var1[0:i], var1[i:var0])\n\tvar2 = max(var2, len(set(var3) & set(var4)))\nprint(var2)"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = [-1 for _ in range(var1)]\nvar3 = [-1 for _ in range(var1)]\nfor i in range(var1):\n\tvar2[i], var3[i] = map(int, input().split())\nfor i in range(1000):\n\tvar4 = True\n\tvar5 = str(i)\n\tif len(var2) == 0:\n\t\tprint(0)\n\t\texit(0)\n\tif len(var5) != var0:\n\t\tcontinue\n\tfor j in range(var1):\n\t\tif var5[var2[j] - 1] != str(var3[j]):\n\t\t\tvar4 = False\n\tif var4 == True:\n\t\tprint(i)\n\t\texit(0)\nprint(-1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = [-1 for _ in range(var1)]\nvar3 = [-1 for _ in range(var1)]\nfor i in range(var1):\n\tvar2[i], var3[i] = map(int, input().split())\nfor var6 in range(1000):\n\tvar6 = str(var6)\n\tif len(var6) != var0:\n\t\tcontinue\n\tvar7 = True\n\tfor i in range(var1):\n\t\tif var6[var2[i] - 1] != str(var3[i]):\n\t\t\tvar7 = False\n\tif var7:\n\t\tprint(var6)\n\t\texit(0)\nprint(-1)"
    }
  },
  {
    "p_name": "p02953",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 'Yes'\nfor i in range(var0 - 1):\n\tif var1[i] == var1[i - 1] and var1[i] == var1[i + 1] + 1:\n\t\tfor j in range(i, 0, -1):\n\t\t\tif var1[j] == var1[j - 1]:\n\t\t\t\tvar2 = 'Yes'\n\t\t\telif var1[j] > var1[j - 1]:\n\t\t\t\tvar2 = 'Yes'\n\t\t\t\tbreak\n\t\t\telif var1[j] + 1 < var1[j - 1]:\n\t\t\t\tvar2 = 'No'\n\t\t\t\tbreak\nfor i in range(var0 - 1):\n\tif var1[i] > var1[i + 1]:\n\t\tvar1[i] = var1[i] - 1\n\t\tif var1[i] > var1[i + 1]:\n\t\t\tvar2 = 'No'\n\t\t\tbreak\n\t\telse:\n\t\t\tcontinue\nfor i in range(var0 - 1):\n\tif var1[i] > var1[i + 1]:\n\t\tvar2 = 'No'\n\t\tbreak\n\telse:\n\t\tvar2 = 'Yes'\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar3 = list(map(int, input().split()))\nfor i in reversed(range(var0)):\n\tif i == 0:\n\t\tprint('Yes')\n\telif var3[i] - var3[i - 1] == -1:\n\t\tvar3[i - 1] -= 1\n\telif var3[i] - var3[i - 1] < -1:\n\t\tprint('No')\n\t\tbreak\n\telse:\n\t\tcontinue"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "from decimal import *\nvar0, var1 = map(float, input().split())\nif var0 == 0 or var1 == 0:\n\tprint(0)\n\texit()\nvar2 = Decimal(var0) * Decimal(var1) // Decimal(1)\nprint(var2)",
      "fixed_code": "var0, var1 = map(str, input().split())\nvar0 = int(var0)\nvar1 = var1[0] + var1[2] + var1[3]\nvar1 = int(var1)\nvar3 = var0 * var1\nif var3 < 100:\n\tprint(0)\nelse:\n\tvar3 = str(var3)\n\tprint(var3[:-2])"
    }
  },
  {
    "p_name": "p02747",
    "code": {
      "buggy_code": "var0 = list(input())\nvar1 = 1\nfor i in range(len(var0)):\n\tif i % 2 and var0[i] != 'i':\n\t\tvar1 = 0\n\telif i % 2 == 0 and var0[i] != 'h':\n\t\tvar1 = 0\nprint('Yes' if var1 else 'No')",
      "fixed_code": "var0 = list(input())\nvar1 = 1\nfor i in range(len(var0)):\n\tif i % 2 and var0[i] != 'i':\n\t\tvar1 = 0\n\telif i % 2 == 0 and var0[i] != 'h':\n\t\tvar1 = 0\n\telif var0[0] != 'h' or var0[-1] != 'i':\n\t\tvar1 = 0\nprint('Yes' if var1 else 'No')"
    }
  },
  {
    "p_name": "p03543",
    "code": {
      "buggy_code": "var0 = list(input())\nif len(set(var0)) <= 2:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = list(input())\nvar1 = list(set(var0))\nif len(var1) > 2:\n\tprint('No')\n\texit()\nif len(set(var0[1:])) == 1 or len(set(var0[:3])) == 1 or len(var1) == 1:\n\tprint('Yes')\n\texit()\nprint('No')"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "from decimal import *\nimport math\nvar0, var1 = map(float, input().split())\nvar2 = math.floor(var0 * var1)\nvar2 = Decimal(var2)\nprint(var2)",
      "fixed_code": "from decimal import *\nimport math\nvar0, var1 = input().split()\nvar0 = int(var0)\nvar1 = Decimal(var1)\nprint(int(var0 * var1))"
    }
  },
  {
    "p_name": "p02641",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var1 > 0:\n\tvar2 = list(map(int, input().split()))\nvar3 = 101\nvar4 = 0\nfor i in range(-1, 101):\n\tif var1 == 0:\n\t\tvar4 = var0\n\t\tbreak\n\tif var2.count(i) == 0 and var3 > abs(var0 - i):\n\t\tvar3 = abs(var0 - i)\n\t\tvar4 = i\nprint(var4)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var1 > 0:\n\tvar2 = list(map(int, input().split()))\nvar3 = 102\nvar4 = 0\nfor i in range(-1, 200):\n\tif var1 == 0:\n\t\tvar4 = var0\n\t\tbreak\n\tif var2.count(i) == 0 and var3 > abs(var0 - i):\n\t\tvar3 = abs(var0 - i)\n\t\tvar4 = i\nprint(var4)"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "var0, var1 = input().split()\nvar0 = int(var0)\nvar1 = int(float(var1) * 100)\nprint(var0 * var1 // 100)",
      "fixed_code": "var0, var1 = input().split()\nvar0 = int(var0)\nvar1 = int(var1.replace('.', ''))\nprint(var0 * var1 // 100)"
    }
  },
  {
    "p_name": "p02687",
    "code": {
      "buggy_code": "import sys\nvar0 = sys.stdin.readline()\nif var0 == 'ABC':\n\tprint('ARC')\nelse:\n\tprint('ABC')",
      "fixed_code": "import sys\nvar0 = sys.stdin.readline().strip()\nif var0 == 'ABC':\n\tprint('ARC')\nelse:\n\tprint('ABC')"
    }
  },
  {
    "p_name": "p02607",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = list(map(int, input().split()))\nvar2 = var1[1::2]\nvar3 = 0\nfor i in var2:\n\tif i % 2 == 1:\n\t\tvar3 += 1\n\telse:\n\t\tpass\nprint(var3)",
      "fixed_code": "var0 = input()\nvar1 = list(map(int, input().split()))\nvar2 = var1[::2]\nvar3 = 0\nfor i in var2:\n\tif i % 2 == 1:\n\t\tvar3 += 1\n\telse:\n\t\tpass\nprint(var3)"
    }
  },
  {
    "p_name": "p02718",
    "code": {
      "buggy_code": "var0, var1 = (int(var2) for var2 in input().split())\nvar3 = list(map(int, input().split()))\nvar4 = sum((var2 >= 1 / (4 * var1) for var2 in var3))\nif var4 >= var1:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1 = (int(var2) for var2 in input().split())\nvar3 = list(map(int, input().split()))\nvar4 = sum((var2 >= sum(var3) / (4 * var1) for var2 in var3))\nif var4 >= var1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03323",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().rstrip().split()))\nif var1 + 1 >= var0:\n\tprint('Yay!')\nelse:\n\tprint(':(')",
      "fixed_code": "var0, var1 = list(map(int, input().rstrip().split()))\nif var0 <= 8 and var1 <= 8:\n\tprint('Yay!')\nelse:\n\tprint(':(')"
    }
  },
  {
    "p_name": "p03721",
    "code": {
      "buggy_code": "def method0():\n\treturn map(int, input().split())\nvar0, k = method0()\nvar1 = []\nvar2 = dict()\nfor i in range(var0):\n\tvar3, var4 = method0()\n\tvar2[var3] = var4\n\tvar1.append(var3)\nvar1 = sorted(var1)\nvar5 = 1\nfor i in var1:\n\tvar5 += var2[i]\n\tif var5 > k:\n\t\tprint(i)\n\t\tbreak",
      "fixed_code": "def method0():\n\treturn map(int, input().split())\nvar0, k = method0()\nvar1 = []\nvar2 = dict()\nfor i in range(var0):\n\tvar3, var4 = method0()\n\tif var3 in var2:\n\t\tvar2[var3] += var4\n\telse:\n\t\tvar2[var3] = var4\n\t\tvar1.append(var3)\nvar1 = sorted(var1)\nvar5 = 0\nfor i in var1:\n\tvar5 += var2[i]\n\tif var5 >= k:\n\t\tprint(i)\n\t\tbreak"
    }
  },
  {
    "p_name": "p03036",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nfor i in range(1, 10):\n\tvar2 = var0 * var2 - var1\n\tprint(var2)",
      "fixed_code": "var3, var4, var5 = map(int, input().split())\nfor i in range(0, 10):\n\tvar5 = var3 * var5 - var4\n\tprint(var5)"
    }
  },
  {
    "p_name": "p02947",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 0\nvar2 = [sorted(input()) for i in range(var0)]\nfor i in range(var0):\n\tvar2[i] = ''.join(var2[i][0:])\nvar1 = len(var2)\nprint(var1 - len(set(var2)))",
      "fixed_code": "var0 = int(input())\nvar1 = 0\nvar3 = 0\nvar2 = [sorted(input()) for i in range(var0)]\nfor i in range(var0):\n\tvar2[i] = ''.join(var2[i])\nvar2.sort()\nfor i in range(1, var0):\n\tif var2[i] == var2[i - 1]:\n\t\tvar1 += 1\n\telse:\n\t\tvar3 = var3 + (var1 + 1) * var1 // 2\n\t\tvar1 = 0\nvar3 = var3 + (var1 + 1) * var1 // 2\nprint(var3)"
    }
  },
  {
    "p_name": "p02641",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nif var1 > 0:\n\tvar3 = -100\n\tvar4 = 10000000\n\tfor i in range(0, 102):\n\t\tif abs(var0 - i) < var4 and i not in var2:\n\t\t\tvar3 = i\n\t\t\tvar4 = abs(var0 - i)\n\tprint(var3)\nelse:\n\tprint(var1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var1 > 0:\n\tvar2 = list(map(int, input().split()))\n\tvar3 = -100\n\tvar4 = 10000000\n\tfor i in range(0, 102):\n\t\tif abs(var0 - i) < var4 and i not in var2:\n\t\t\tvar3 = i\n\t\t\tvar4 = abs(var0 - i)\n\tprint(var3)\nelse:\n\tprint(var0)"
    }
  },
  {
    "p_name": "p02682",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nif var0 >= var3:\n\tprint(var0)\nelif var0 + var1 >= var3:\n\tprint(var0)\nelse:\n\tprint(var0 - (var3 - var0 - var1))",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nif var0 >= var3:\n\tprint(var3)\nelif var0 + var1 >= var3:\n\tprint(var0)\nelse:\n\tprint(var0 - (var3 - var0 - var1))"
    }
  },
  {
    "p_name": "p02693",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1, var2 = map(int, input().split())\nvar3 = 'NO'\nfor i in range(var1, var2 + 1):\n\tif i % var0 == 0:\n\t\tvar3 = 'OK'\n\tbreak\nprint(var3)",
      "fixed_code": "var0 = int(input())\nvar1, var2 = map(int, input().split())\nvar3 = 'NG'\nfor i in range(var1, var2 + 1):\n\tif i % var0 == 0:\n\t\tvar3 = 'OK'\n\t\tbreak\nprint(var3)"
    }
  },
  {
    "p_name": "p02866",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nif var1[0] != 0:\n\tprint('0')\n\texit()\nvar2 = 1\nvar3 = max(var1)\nvar4 = [0] * (var3 + 1)\nfor i in range(len(var1)):\n\tvar4[var1[i]] += 1\nfor i in range(1, var3 + 1):\n\tvar2 *= i ** var4[i]\nprint(var2 % 998244353)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nif var1[0] != 0:\n\tprint('0')\n\texit()\nvar2 = 1\nvar3 = max(var1)\nvar4 = [0] * (var3 + 1)\nfor i in range(len(var1)):\n\tvar4[var1[i]] += 1\nif var4[0] != 1:\n\tprint('0')\n\texit()\nif 0 in var4:\n\tprint('0')\n\texit()\nfor i in range(1, var3 + 1):\n\tvar2 *= var4[i - 1] ** var4[i]\n\tvar2 %= 998244353\nprint(var2)"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "var0 = []\nvar1, var2 = [int(i) for i in input().split(' ')]\nfor var3 in range(var2):\n\tvar4, var5 = input().split(' ')\n\tvar0.append([int(var4) - 1, var5])\nvar6 = var1 if var1 == 1 else 10 ** (var1 - 1)\nvar7 = -1\nfor var8 in range(var6, 1000):\n\tvar9 = True\n\tvar10 = str(var8)\n\tfor var4 in var0:\n\t\tif var10[var4[0]] != var4[1]:\n\t\t\tvar9 = False\n\t\t\tbreak\n\tif var9:\n\t\tvar7 = var8\n\t\tbreak\nprint(var7)",
      "fixed_code": "var0 = []\nvar1, var2 = [int(i) for i in input().split(' ')]\nfor var3 in range(var2):\n\tvar4, var5 = input().split(' ')\n\tvar0.append([int(var4) - 1, var5])\nvar6 = 0 if var1 == 1 else 10 ** (var1 - 1)\nvar7 = -1\nfor var8 in range(var6, 10 ** var1):\n\tvar9 = True\n\tvar10 = str(var8)\n\tfor var4 in var0:\n\t\tif var10[var4[0]] != var4[1]:\n\t\t\tvar9 = False\n\t\t\tbreak\n\tif var9:\n\t\tvar7 = var8\n\t\tbreak\nprint(var7)"
    }
  },
  {
    "p_name": "p02767",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\n\ndef method0(var2, var3):\n\treturn pow(var3 - var2, 2)\nvar4 = 999999999999\nfor i in range(min(var1), max(var1) - min(var1) + 1):\n\tvar5 = 0\n\tfor j in var1:\n\t\tvar5 += method0(i, j)\n\tif var4 > var5:\n\t\tvar4 = var5\nprint(var4)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\n\ndef method0(var2, var3):\n\treturn pow(var3 - var2, 2)\nvar4 = 999999999999\nfor i in range(0, 100):\n\tvar5 = 0\n\tfor j in var1:\n\t\tvar5 += method0(i, j)\n\tif var4 > var5:\n\t\tvar4 = var5\nprint(var4)"
    }
  },
  {
    "p_name": "p03632",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = 0\nif var1 <= var2 or var3 <= var0:\n\tprint(var4)\nelif var0 <= var2 < var1 <= var3:\n\tprint(var1 - var2)\nelif var2 <= var0 < var3 <= var1:\n\tprint(var3 - var0)",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = 0\nif var1 <= var2 or var3 <= var0:\n\tprint(var4)\nelif var0 <= var2 < var1 <= var3:\n\tprint(var1 - var2)\nelif var2 <= var0 < var3 <= var1:\n\tprint(var3 - var0)\nelif var0 <= var2 < var3 <= var1:\n\tprint(var3 - var2)\nelif var2 <= var0 < var1 <= var3:\n\tprint(var1 - var0)"
    }
  },
  {
    "p_name": "p02773",
    "code": {
      "buggy_code": "import collections\nvar0 = int(input())\nvar1 = []\nfor i in range(var0):\n\tvar1.append(input())\nvar2 = sorted(var1)\nvar3 = collections.Counter(var2)\nvar4 = var3.most_common()\ni = 0\nwhile True:\n\tprint(var4[i][0])\n\ti += 1\n\tif i == len(var4):\n\t\tbreak\n\tif var4[i][1] != var4[i - 1][1]:\n\t\tbreak",
      "fixed_code": "import collections\nvar0 = int(input())\nvar1 = []\nfor i in range(var0):\n\tvar1.append(input())\nvar3 = collections.Counter(var1)\nvar4 = var3.most_common()\ni = 0\nvar5 = []\nwhile True:\n\tvar5.append(var4[i][0])\n\ti += 1\n\tif i == len(var4):\n\t\tbreak\n\tif var4[i][1] != var4[i - 1][1]:\n\t\tbreak\nvar5.sort()\nfor i in range(len(var5)):\n\tprint(var5[i])"
    }
  },
  {
    "p_name": "p03471",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nfor i in range(var0 + 1):\n\tvar2 = var0 - i\n\tvar3 = var0 - var2\n\tfor j in range(var3 + 1):\n\t\tvar4 = var0 - var2 - var3\n\t\tvar5 = 1000 * var4 + 5000 * var3 + 10000 * var2\n\t\tif var5 == var1:\n\t\t\tprint(var2, var3, var4)\n\t\t\tbreak\n\telse:\n\t\tcontinue\n\tbreak\nelse:\n\tprint(-1, -1, -1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nfor var2 in range(var0 + 1):\n\tvar6 = var0 - var2\n\tfor var3 in range(var6 + 1):\n\t\tvar4 = var0 - var3 - var2\n\t\tvar5 = 1000 * var4 + 5000 * var3 + 10000 * var2\n\t\tif var5 == var1:\n\t\t\tprint(var2, var3, var4)\n\t\t\tbreak\n\telse:\n\t\tcontinue\n\tbreak\nelse:\n\tprint(-1, -1, -1)"
    }
  },
  {
    "p_name": "p02843",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nvar1 = math.floor(var0 / 105)\nif 100 * var1 <= var0 <= 105 * var1:\n\tprint(1)\nelse:\n\tprint(0)",
      "fixed_code": "import math\nvar0 = int(input())\nvar1 = math.floor(var0 / 100)\nif 100 * var1 <= var0 <= 105 * var1:\n\tprint(1)\nelse:\n\tprint(0)"
    }
  },
  {
    "p_name": "p03427",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, str(var0)))\nif set(var1[1:]) == {9}:\n\tprint(var1[0] + 9 * (len(var1) - 1))\nelse:\n\tprint(var1[0] - 1 + 9 * (len(var1) - 1))",
      "fixed_code": "def method0(var2):\n\tvar3 = list(str(var2))\n\tvar4 = 0\n\tfor var5 in var3:\n\t\tvar4 += int(var5)\n\treturn var4\nvar0 = int(input())\nvar1 = list(str(var0))\nvar6 = len(str(var0))\nvar7 = int(''.join([var1[0]] + ['9'] * (var6 - 1)))\nif var7 <= var0:\n\tprint(method0(var7))\nelse:\n\tvar8 = str(int(var1[0]) - 1)\n\tvar7 = int(''.join([var8] + ['9'] * (var6 - 1)))\n\tprint(method0(var7))"
    }
  },
  {
    "p_name": "p02860",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = input()\nvar2 = 0\nfor i in range(2, len(var1) + 1):\n\tvar3 = var1[:i]\n\tif var1.var2(var3) >= 2:\n\t\tvar2 += 1\nif var2 >= 2:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = int(input())\nvar1 = input()\nprint('Yes' if var1[:var0 // 2] == var1[var0 // 2:] else 'No')"
    }
  },
  {
    "p_name": "p02628",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = var0.split()\nvar2 = [input() for l in range(0, 1)]\nvar3 = var2[0].split()\nvar4 = sorted(var3, var5=True)\nvar6 = 0\nfor i in range(0, int(var1[1])):\n\tvar6 = var6 + int(var4[i])\nprint(var6)",
      "fixed_code": "var0 = input()\nvar1 = var0.split()\nvar2 = [input() for l in range(0, 1)]\nvar3 = var2[0].split()\nfor i in range(0, len(var3)):\n\tvar3[i] = int(var3[i])\nvar4 = sorted(var3, var5=True)\nvar6 = 0\nfor i in range(int(var1[0]) - int(var1[1]), int(var1[0])):\n\tvar6 = var6 + int(var4[i])\nprint(var6)"
    }
  },
  {
    "p_name": "p02753",
    "code": {
      "buggy_code": "var0 = str(input())\nif var0 == 'AAA' or 'BBB':\n\tprint('No')\nelse:\n\tprint('Yes')",
      "fixed_code": "var0 = str(input())\nif var0 == 'AAA' or var0 == 'BBB':\n\tprint('No')\nelse:\n\tprint('Yes')"
    }
  },
  {
    "p_name": "p03481",
    "code": {
      "buggy_code": "import math\nvar0, var1 = map(int, input().split())\nvar2 = int(math.log2(var1 / var0))\nprint(var2 + 1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nwhile var0 <= var1:\n\tvar2 += 1\n\tvar0 *= 2\nprint(var2)"
    }
  },
  {
    "p_name": "p03854",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = False\nwhile True:\n\tif var0[-5:] == 'dream' or var0[-5:] == 'erase':\n\t\tvar0 = var0[:-5]\n\telif var0[-6:] == 'eraser':\n\t\tvar0 = var0[:-6]\n\telif var0[:-7] == 'dreamer':\n\t\tvar0 = var0[:-7]\n\telse:\n\t\tbreak\nif len(var0) == 0:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0 = input()\nvar1 = False\nwhile True:\n\tif var0[-5:] == 'dream' or var0[-5:] == 'erase':\n\t\tvar0 = var0[:-5]\n\telif var0[-6:] == 'eraser':\n\t\tvar0 = var0[:-6]\n\telif var0[-7:] == 'dreamer':\n\t\tvar0 = var0[:-7]\n\telse:\n\t\tbreak\nif len(var0) == 0:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p03308",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = sorted(map(int, input().split()))\nprint(var1[0] - var1[-1])",
      "fixed_code": "var0 = input()\nvar1 = sorted(map(int, input().split()))\nprint(var1[-1] - var1[0])"
    }
  },
  {
    "p_name": "p02767",
    "code": {
      "buggy_code": "import sys\nvar0 = sys.stdin.readline\nvar1 = sys.stdin.var1\nsys.setrecursionlimit(10 ** 7)\n\ndef method0():\n\tvar2, *var3 = list(map(int, var1().split()))\n\tvar4 = sum(var3)\n\tvar5 = sum([var6 ** 2 for var6 in var3])\n\tif var4 % var2 == 0:\n\t\tprint(var5)\n\telse:\n\t\tvar7 = var4 // var2\n\t\tvar8 = min(abs(var7 - var4 / var2), abs(var7 - var4 / var2 + 1)) ** 2 * var2 + var5 - var4 ** 2 / var2\n\t\tprint(round(var8))\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "import sys\nvar0 = sys.stdin.readline\nvar1 = sys.stdin.var1\nsys.setrecursionlimit(10 ** 7)\n\ndef method0():\n\tvar2, *var3 = list(map(int, var1().split()))\n\tvar4 = sum(var3)\n\tvar5 = sum([var6 ** 2 for var6 in var3])\n\tif var4 % var2 == 0:\n\t\tprint(round(var5 - var4 ** 2 / var2))\n\telse:\n\t\tvar7 = var4 // var2\n\t\tvar8 = min(abs(var7 - var4 / var2), abs(var7 - var4 / var2 + 1)) ** 2 * var2 + var5 - var4 ** 2 / var2\n\t\tprint(round(var8))\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var1 == 1:\n\tprint(0)\n\texit()\nif var0 * var1 % 2 == 0:\n\tprint(var0 * var1 // 2)\nelse:\n\tprint(var0 * var1 // 2 + 1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var1 == 1 or var0 == 1:\n\tprint(1)\n\texit()\nif var0 * var1 % 2 == 0:\n\tprint(var0 * var1 // 2)\nelse:\n\tprint(var0 * var1 // 2 + 1)"
    }
  },
  {
    "p_name": "p03061",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [int(i) for i in input().split(' ')]\nvar2 = 1\nfor i in range(var0):\n\tvar3 = var1.pop(0)\n\tvar4 = var1[0]\n\tfor j in range(var0 - 1):\n\t\tvar5 = max(var1[j - 1], var1[j])\n\t\tvar6 = min(var1[j - 1], var1[j])\n\t\tvar7 = var5 % var6\n\t\twhile not var7 == 0:\n\t\t\tvar5 = var6\n\t\t\tvar6 = var7\n\t\t\tvar7 = var5 % var6\n\t\tvar4 = min(var4, var6)\n\tvar1.append(var3)\n\tvar2 = max(var2, var4)\nprint(var2)",
      "fixed_code": "import fractions\nvar0 = int(input())\nvar1 = [int(i) for i in input().split()]\nvar8 = var1[:] + [0]\nvar9 = [0] + var1[:]\nfor i in range(var0):\n\tvar8[var0 - i - 1] = fractions.gcd(var8[var0 - i], var1[var0 - i - 1])\n\tvar9[i + 1] = fractions.gcd(var9[i], var9[i + 1])\nvar10 = []\nfor i in range(var0):\n\tvar10.append(fractions.gcd(var9[i], var8[i + 1]))\nprint(max(var10))"
    }
  },
  {
    "p_name": "p02842",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nvar1 = -1\nfor i in range(var0):\n\tif math.floor(i * 1.08) == var0:\n\t\tvar1 = i\nif var1 == -1:\n\tprint(':(')\nelse:\n\tprint(var1)",
      "fixed_code": "import math\nvar0 = int(input())\nvar1 = -1\nfor i in range(var0 + 1):\n\tif math.floor(i * 1.08) == var0:\n\t\tvar1 = i\nif var1 == -1:\n\tprint(':(')\nelse:\n\tprint(var1)"
    }
  },
  {
    "p_name": "p03282",
    "code": {
      "buggy_code": "var0 = list(input())\nvar1 = int(input())\nfor var2 in var0:\n\tif var2 != '1':\n\t\tprint(var2)\n\t\tbreak\nelse:\n\tprint('1')",
      "fixed_code": "var0 = list(input())\nvar1 = int(input())\nfor i in range(var1):\n\tif var0[i] != '1':\n\t\tprint(var0[i])\n\t\tbreak\nelse:\n\tprint('1')"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "import numpy as var0\nvar1 = int(input())\nvar2 = list(input().split())\nvar2 = [int(var3) for var3 in var2]\nvar4 = 0\nif 0 not in var2:\n\tvar4 = var0.prod(var2, var5='int64')\n\tif var4 > 1000000000000000000:\n\t\tvar4 = -1\nprint(var4)",
      "fixed_code": "def method0():\n\tvar1 = int(input())\n\tvar6 = list(map(int, input().split()))\n\tif 0 in var6:\n\t\treturn print(0)\n\tvar7 = 1\n\tfor var3 in var6:\n\t\tvar7 *= var3\n\t\tif var7 > 1000000000000000000:\n\t\t\treturn print(-1)\n\treturn print(var7)\nmethod0()"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nif var0 * var1 * 4 < (var2 - var0 - var1) ** 2:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nif var0 * var1 * 4 < (var2 - var0 - var1) ** 2 and var2 > var0 + var1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02546",
    "code": {
      "buggy_code": "var0 = input()\nif var0[-1] != var0:\n\tprint(var0 + 'var0')\nelse:\n\tprint(var0 + 'es')",
      "fixed_code": "var0 = input()\nif var0[-1] != 'var0':\n\tprint(var0 + 'var0')\nelse:\n\tprint(var0 + 'es')"
    }
  },
  {
    "p_name": "p03208",
    "code": {
      "buggy_code": "import collections\n\ndef method0(var0, var1, var2):\n\tvar3 = max([sum(var0[j:j + (var1 + 1)]) for j in range(len(var0) - (var1 - 1))])\n\tif var3 < var2:\n\t\treturn method0(var0, var1 + 1, var2)\n\telse:\n\t\treturn var1\nvar4, var2 = map(int, input().split())\nvar5 = [int(input()) for i in range(var4)]\nvar0 = list(collections.Counter(var5).values())\nprint(method0(var0, 0, var2))",
      "fixed_code": "var4, var2 = map(int, input().split())\nvar5 = [int(input()) for i in range(var4)]\nvar5.sort()\nvar6 = None\nfor i in range(var4 - (var2 - 1)):\n\tvar7 = var5[i + (var2 - 1)] - var5[i]\n\tif var6 is None or var7 < var6:\n\t\tvar6 = var7\nprint(var6)"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nif var0 == 1 or var1 == 1:\n\tprint('0')\nelif var0 * var1 % 2 == 0:\n\tvar2 = var0 * var1 / 2\n\tprint(int(var2))\nelse:\n\tvar2 = int(var0 * var1 / 2)\n\tvar2 = var2 + 1\n\tprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nif var0 == 1 or var1 == 1:\n\tprint('1')\nelif var0 * var1 % 2 == 0:\n\tvar2 = var0 * var1 / 2\n\tprint(int(var2))\nelse:\n\tvar2 = int(var0 * var1 / 2)\n\tvar2 = var2 + 1\n\tprint(var2)"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "import sys\nvar0, var1 = map(lambda var2: int(var2), input().split())\nvar3 = list('z' * var0)\nvar4 = 0\nvar5 = 0\nfor i in range(var1):\n\tvar6, var7 = map(lambda var2: int(var2), input().split())\n\tif var6 == 1 and var7 == 0 or (var3[var6 - 1] != str(var7) and var3[var6 - 1] != 'z'):\n\t\tvar5 = 1\n\tvar3[var6 - 1] = str(var7)\nif var5 == 1:\n\tprint(-1)\n\tsys.exit()\nfor j in range(var0):\n\tif j == 0 and var3[j] == 'z' and (var0 > 1):\n\t\tvar4 += 10 ** (var0 - j - 1)\n\telif var3[j] != 'z':\n\t\tvar4 += int(var3[j]) * 10 ** (var0 - j - 1)\nprint(var4)",
      "fixed_code": "import sys\nvar0, var1 = map(lambda var2: int(var2), input().split())\nvar3 = list('z' * var0)\nvar4 = 0\nvar5 = 0\nfor i in range(var1):\n\tvar6, var7 = map(lambda var2: int(var2), input().split())\n\tif var6 == 1 and var7 == 0 and (var0 != 1) or (var3[var6 - 1] != str(var7) and var3[var6 - 1] != 'z'):\n\t\tvar5 = 1\n\tvar3[var6 - 1] = str(var7)\nif var5 == 1:\n\tprint(-1)\n\tsys.exit()\nfor j in range(var0):\n\tif j == 0 and var3[j] == 'z' and (var0 > 1):\n\t\tvar4 += 10 ** (var0 - j - 1)\n\telif var3[j] != 'z':\n\t\tvar4 += int(var3[j]) * 10 ** (var0 - j - 1)\nprint(var4)"
    }
  },
  {
    "p_name": "p03072",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nfor i in range(1, var0):\n\tif var1[i] >= var1[i - 1]:\n\t\tvar2 += 1\nprint(var2 + 1)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nvar3 = 0\nfor i in range(1, var0):\n\tvar3 = 0\n\tfor j in range(0, i):\n\t\tif var1[i] >= var1[j]:\n\t\t\tvar3 += 1\n\t\tif var3 == i:\n\t\t\tvar2 += 1\nprint(var2 + 1)"
    }
  },
  {
    "p_name": "p02898",
    "code": {
      "buggy_code": "import sys\n[var0, k] = [int(var1) for var1 in sys.stdin.readline().split(' ')]\nvar2 = [int(var3) for var3 in sys.stdin.readline().split(' ')]\nprint(var2)\nvar4 = [var3 for var3 in var2 if var3 >= k]\nprint(len(var4))",
      "fixed_code": "import sys\n[var0, k] = [int(var1) for var1 in sys.stdin.readline().split(' ')]\nvar2 = [int(var3) for var3 in sys.stdin.readline().split(' ')]\nvar4 = [var3 for var3 in var2 if var3 >= k]\nprint(len(var4))"
    }
  },
  {
    "p_name": "p03000",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 0\nvar4 = 0\nfor i in range(var0):\n\tvar4 += var2[i]\n\tvar3 += 1\n\tif var4 > var1:\n\t\tbreak\nprint(var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 1\nvar4 = 0\nfor i in range(var0):\n\tvar4 += var2[i]\n\tvar3 += 1\n\tif var4 == var1:\n\t\tbreak\n\telif var4 > var1:\n\t\tvar3 -= 1\n\t\tbreak\nprint(var3)"
    }
  },
  {
    "p_name": "p03254",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar2.sort()\nvar3 = 0\nvar4 = 0\nfor i in var2:\n\tvar3 += i\n\tif var3 > var1:\n\t\tbreak\n\tvar4 += 1\nif var2[0] > var1:\n\tvar4 = 0\nprint(var4)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar2.sort()\nvar3 = 0\nvar4 = 0\nfor i in range(0, var0):\n\tvar3 += var2[i]\n\tif var3 > var1:\n\t\tvar4 = i\n\t\tbreak\n\telif var3 == var1:\n\t\tvar4 = i + 1\n\t\tbreak\n\tif i == var0 - 1 and var3 < var1:\n\t\tvar4 = var0 - 1\nif var2[0] > var1:\n\tvar4 = 0\nprint(var4)"
    }
  },
  {
    "p_name": "p02783",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nprint(var0 // var1 + 1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nprint((var0 + var1 - 1) // var1)"
    }
  },
  {
    "p_name": "p03254",
    "code": {
      "buggy_code": "def method0(var0, var1, var2):\n\tif len(var1) != 0:\n\t\tvar3 = max(var1)\n\t\tvar1.remove(var3)\n\telse:\n\t\tprint(var2)\n\t\texit()\n\tif var0 >= var3:\n\t\tvar0 -= var3\n\t\tvar2 += 1\n\t\tif len(var1) == 0 and var0 != 0:\n\t\t\tvar2 -= 1\n\t\tmethod0(var0, var1, var2)\n\telse:\n\t\tmethod0(var0, var1, var2)\n[var4, var5] = [int(i) for i in input().split()]\nvar1 = [int(i) for i in input().split()]\nvar2 = 0\nmethod0(var5, var1, var2)",
      "fixed_code": "def method0(var0, var1, var2):\n\tif len(var1) != 0:\n\t\tvar3 = min(var1)\n\t\tvar1.remove(var3)\n\telse:\n\t\tprint(var2)\n\t\texit()\n\tif var0 >= var3:\n\t\tvar0 -= var3\n\t\tvar2 += 1\n\t\tif len(var1) == 0 and var0 != 0:\n\t\t\tvar2 -= 1\n\t\tmethod0(var0, var1, var2)\n\telse:\n\t\tmethod0(var0, var1, var2)\n[var4, var5] = [int(i) for i in input().split()]\nvar1 = [int(i) for i in input().split()]\nvar2 = 0\nmethod0(var5, var1, var2)"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "var0, var1 = map(str, input().split())\nvar2 = int(var1[0]) * 100 + int(var1[2]) * 10 + int(var1[3])\nprint(int(int(var0) * var2 / 100))",
      "fixed_code": "var0, var1 = map(str, input().split())\nvar2 = int(var1[0]) * 100 + int(var1[2]) * 10 + int(var1[3])\nprint(int(var0) * var2 // 100)"
    }
  },
  {
    "p_name": "p02401",
    "code": {
      "buggy_code": "def method0():\n\twhile True:\n\t\tvar0, var1, var2 = input().split(' ')\n\t\tvar0 = int(var0)\n\t\tvar2 = int(var2)\n\t\tif var1 == '?':\n\t\t\tbreak\n\t\telif var1 == '+':\n\t\t\tprint(var0 + var2)\n\t\telif var1 == '-':\n\t\t\tprint(var0 - var2)\n\t\telif var1 == '*':\n\t\t\tprint(var0 * var2)\n\t\telif var1 == '/':\n\t\t\tprint(var0 / var2)\n\t\telse:\n\t\t\tbreak\n\treturn 0\nif __name__ == '__main__':\n\tvar3 = method0()",
      "fixed_code": "while True:\n\tvar4 = input()\n\tif '?' in var4:\n\t\tbreak\n\tprint(int(eval(var4)))"
    }
  },
  {
    "p_name": "p03471",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = False\nvar3 = []\nfor i in range(var0 + 1):\n\tif var2:\n\t\tbreak\n\tfor j in range(var0 + 1 - i):\n\t\tif 10000 * i + 5000 * j + 1000 * (var0 - i - j) == var1:\n\t\t\tvar2 = True\n\t\t\tvar3 = [i, j, var0 - i - j]\n\t\t\tbreak\nif not var2:\n\tvar3 = [-1, -1, -1]\nprint(var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = False\nvar3 = []\nfor i in range(var0 + 1):\n\tif var2:\n\t\tbreak\n\tfor j in range(var0 + 1 - i):\n\t\tif 10000 * i + 5000 * j + 1000 * (var0 - i - j) == var1:\n\t\t\tvar2 = True\n\t\t\tvar3 = [i, j, var0 - i - j]\n\t\t\tbreak\nif not var2:\n\tvar3 = [-1, -1, -1]\nprint(var3[0], var3[1], var3[2])"
    }
  },
  {
    "p_name": "p02681",
    "code": {
      "buggy_code": "import numpy as var0\nvar1 = list(input())\nvar2 = list(input())\nif len(var1) + 1 == len(var2):\n\tfor i in range(len(var1)):\n\t\tif var1[i] == var2[i]:\n\t\t\tcontinue\n\t\telse:\n\t\t\tprint('No')\n\t\t\tbreak\n\tif i == len(var1) - 1:\n\t\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "import numpy as var0\nvar1 = list(input())\nvar2 = list(input())\nif len(var1) + 1 == len(var2):\n\tfor i in range(len(var1)):\n\t\tif var1[i] == var2[i]:\n\t\t\tif i == len(var1) - 1:\n\t\t\t\tprint('Yes')\n\t\t\t\tcontinue\n\t\t\telse:\n\t\t\t\tcontinue\n\t\telse:\n\t\t\tprint('No')\n\t\t\tbreak\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03324",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nprint(var1 * 100 ** var0)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var1 != 100:\n\tprint(var1 * 100 ** var0)\nelse:\n\tprint(101 * 100 ** var0)"
    }
  },
  {
    "p_name": "p03625",
    "code": {
      "buggy_code": "from collections import Counter\nvar0 = int(input())\nvar1 = Counter(map(int, input().split()))\nvar2 = [0] * 2\nfor i in var1.items():\n\tif i[1] >= 2:\n\t\tif i[0] > var2[0] and i[0] > var2[1]:\n\t\t\tif i[0] > var2[1]:\n\t\t\t\tvar2[1] = var2[0]\n\t\t\tvar2[0] = i[0]\n\t\telif i[0] > var2[1]:\n\t\t\tvar2[1] = i[0]\n\telse:\n\t\tpass\nprint(var2[0] * var2[1]) if all(var2) else print(0)",
      "fixed_code": "from collections import Counter\nvar0 = int(input())\nvar1 = Counter(map(int, input().split()))\nvar2 = []\nvar1 = sorted(var1.items(), var3=lambda var4: var4[0], var5=True)\nfor i in var1:\n\tif len(var2) == 2:\n\t\tbreak\n\tif i[1] >= 4:\n\t\tvar2.append(i[0])\n\t\tvar2.append(i[0])\n\t\tbreak\n\tif i[1] >= 2:\n\t\tvar2.append(i[0])\n\telse:\n\t\tpass\nprint(var2[0] * var2[1]) if len(var2) >= 2 else print(0)"
    }
  },
  {
    "p_name": "p03284",
    "code": {
      "buggy_code": "var0, k = map(int, input().split())\nif var0 < k:\n\tprint(0)\nelse:\n\tprint(var0 % k)",
      "fixed_code": "var0, k = map(int, input().split())\nif var0 % k == 0:\n\tprint(0)\nelse:\n\tprint(1)"
    }
  },
  {
    "p_name": "p03150",
    "code": {
      "buggy_code": "import re\nvar0 = input()\nvar1 = []\nvar1.append(re.compile('\\\\w+keyence').search(var0))\nvar1.append(re.compile('k\\\\w+eyence').search(var0))\nvar1.append(re.compile('ke\\\\w+yence').search(var0))\nvar1.append(re.compile('key\\\\w+ence').search(var0))\nvar1.append(re.compile('keye\\\\w+nce').search(var0))\nvar1.append(re.compile('keyen\\\\w+ce').search(var0))\nvar1.append(re.compile('keyenc\\\\w+e').search(var0))\nvar1.append(re.compile('keyence\\\\w+').search(var0))\nif var1.count(None) != len(var1):\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "import re\nvar2 = re.compile('^keyence$|^.+keyence$|^k.+eyence$|^ke.+yence$|^key.+ence$|^keye.+nce$|^keyen.+ce$|^keyenc.+e$|^keyence.+$')\nprint('YES') if len(var2.findall(input())) > 0 else print('NO')"
    }
  },
  {
    "p_name": "p02958",
    "code": {
      "buggy_code": "var0 = int(input())\nvar0 -= 1\nvar1 = list(map(str, input().split(' ')))\nvar2 = sorted(var1)\nvar3 = 0\nfor i in range(var0):\n\tif var2[i] != var1[i]:\n\t\tvar3 += 1\nif var3 == 2 or var3 == 0:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split(' ')))\nvar3 = 0\nfor i in range(var0):\n\tif var1[i] != i + 1:\n\t\tvar3 += 1\nif var3 == 2 or var3 == 0:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p03386",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = list((i for i in range(var0, var1 + 1)))\nvar3 = set(var3[:var2] + var3[-var2:])\nprint(*var3, var4='\\n')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nif var1 - var0 + 1 > 2 * var2:\n\tvar5 = list(range(var0, var0 + var2))\n\tvar6 = list(range(var1 - var2 + 1, var1 + 1))\n\tvar7 = sorted(set(var5 + var6))\n\tprint(*var7, var4='\\n')\nelse:\n\tprint(*range(var0, var1 + 1), var4='\\n')"
    }
  },
  {
    "p_name": "p03319",
    "code": {
      "buggy_code": "from collections import Counter, defaultdict, deque\nfrom heapq import heappop, heappush\nfrom bisect import bisect_left, bisect_right\nimport sys, math, itertools, fractions, pprint\nsys.setrecursionlimit(10 ** 8)\nvar0 = 10 ** 9 + 7\nvar1 = float('inf')\n\ndef method0():\n\treturn int(sys.stdin.readline())\n\ndef method1():\n\treturn list(map(int, sys.stdin.readline().split()))\nvar2, k = method1()\nvar3 = method1()\nvar4 = var3.index(1)\nprint((var4 + k - 2) // (k - 1) + (var2 - var4 - 1 + k - 2) // (k - 1))",
      "fixed_code": "from collections import Counter, defaultdict, deque\nfrom heapq import heappop, heappush\nfrom bisect import bisect_left, bisect_right\nimport sys, math, itertools, fractions, pprint\nsys.setrecursionlimit(10 ** 8)\nvar0 = 10 ** 9 + 7\nvar1 = float('inf')\n\ndef method0():\n\treturn int(sys.stdin.readline())\n\ndef method1():\n\treturn list(map(int, sys.stdin.readline().split()))\nvar2, k = method1()\nvar3 = method1()\nvar5 = 0\nvar6 = 0\nfor var7 in var3:\n\tif var7 != 1:\n\t\tvar5 += 1\n\tif var5 == k - 1:\n\t\tvar6 += 1\n\t\tvar5 = 0\nif var5:\n\tvar6 += 1\nprint(var6)"
    }
  },
  {
    "p_name": "p02701",
    "code": {
      "buggy_code": "var0 = input().split()\nprint(len(set(var0)))",
      "fixed_code": "from sys import stdin\nimport numpy as var1\nvar2 = int(stdin.readline().rstrip())\nvar3 = [stdin.readline().rstrip().split() for _ in range(var2)]\nprint(len(set(var1.array(var3).reshape(-1))))"
    }
  },
  {
    "p_name": "p02729",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var0 == 0:\n\tprint(var1 * (var1 - 1) / 2)\nelif var0 == 1:\n\tif var1 == 1:\n\t\tprint('0')\n\telse:\n\t\tprint(var1 * (var1 - 1) / 2)\nelif var1 == 0:\n\tprint(var0 * (var0 - 1) / 2)\nelif var1 == 1 and var0 >= 2:\n\tprint(var0 * (var0 - 1) / 2)\nelse:\n\tprint(var1 * (var1 - 1) / 2 + var0 * (var0 - 1) / 2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 == 0:\n\tprint(int(var1 * (var1 - 1) / 2))\nelif var0 == 1:\n\tif var1 == 1:\n\t\tprint('0')\n\telse:\n\t\tprint(int(var1 * (var1 - 1) / 2))\nelif var1 == 0:\n\tprint(int(var0 * (var0 - 1) / 2))\nelif var1 == 1 and var0 >= 2:\n\tprint(int(var0 * (var0 - 1) / 2))\nelse:\n\tprint(int(var1 * (var1 - 1) / 2 + var0 * (var0 - 1) / 2))"
    }
  },
  {
    "p_name": "p02881",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = []\nfor i in range(1, 10 ** 6):\n\tif var0 % i == 0:\n\t\tvar1.append(i + var0 // i)\nvar2 = min(var1)\nprint(var2 - 2)",
      "fixed_code": "var0 = int(input())\nvar1 = []\nfor i in range(1, 10 ** 6 + 1):\n\tif var0 % i == 0:\n\t\tvar1.append(i + var0 // i)\nvar2 = min(var1)\nprint(var2 - 2)"
    }
  },
  {
    "p_name": "p02612",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = var0 // 1000 + 1\nprint(var1 * 1000 - var0)",
      "fixed_code": "var0 = int(input())\nif var0 % 1000 == 0:\n\tprint(0)\nelse:\n\tvar1 = var0 // 1000 + 1\n\tprint(var1 * 1000 - var0)"
    }
  },
  {
    "p_name": "p03607",
    "code": {
      "buggy_code": "var0 = 0\nvar1 = int(input())\nvar2 = [int(input()) for _ in range(var1)]\nvar2.sort()\nvar3 = 1\nfor i in range(var1 - 1):\n\tif var2[i] == var2[i + 1]:\n\t\tvar3 += 1\n\telse:\n\t\tif var3 % 2 != 0:\n\t\t\tvar0 += 1\n\t\tvar3 = 1\nif var2[-2] != var2[-1] or var1 == 1:\n\tvar0 += 1\nprint(var0)",
      "fixed_code": "var1 = int(input())\nvar2 = [int(input()) for _ in range(var1)]\nvar2.sort()\nvar3 = 1\nvar0 = 0\nfor i in range(1, var1):\n\tif var2[i - 1] == var2[i]:\n\t\tvar3 += 1\n\telse:\n\t\tvar0 += var3 % 2\n\t\tvar3 = 1\nif var3 != 1:\n\tvar0 += var3 % 2\nelse:\n\tvar0 += 1\nprint(var0)"
    }
  },
  {
    "p_name": "p02881",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 10 ** 20\nvar2 = var0 ** 0.5\nvar2 = int(var2)\nfor i in range(var2):\n\tif i == 0:\n\t\tcontinue\n\tif var0 % i != 0:\n\t\tcontinue\n\tj = var0 / i\n\tj = int(j)\n\tvar1 = min(var1, i + j - 2)\nprint(var1)",
      "fixed_code": "var0 = int(input())\nvar1 = 10 ** 20\nvar2 = var0 ** 0.5\nvar2 = int(var2)\nfor i in range(var2 + 1):\n\tif i == 0:\n\t\tcontinue\n\tif var0 % i != 0:\n\t\tcontinue\n\tj = var0 / i\n\tj = int(j)\n\tvar1 = min(var1, i + j - 2)\nprint(var1)"
    }
  },
  {
    "p_name": "p03289",
    "code": {
      "buggy_code": "import sys\nvar0 = input()\nvar1 = 0\nif var0[0] == 'A':\n\tfor i in range(2, len(var0) - 1):\n\t\tif var0[i] == 'C':\n\t\t\tvar1 += 1\n\t\t\tvar2 = i\n\tif var1 == 1:\n\t\tfor i in range(1, len(var0)):\n\t\t\tif i != var2:\n\t\t\t\tif var0[i].isupper():\n\t\t\t\t\tbreak\n\t\tprint('AC')\n\t\tsys.exit()\nprint('WA')",
      "fixed_code": "import sys\nvar0 = input()\nvar1 = 0\nvar3 = True\nif var0[0] == 'A':\n\tfor i in range(2, len(var0) - 1):\n\t\tif var0[i] == 'C':\n\t\t\tvar1 += 1\n\t\t\tvar2 = i\n\tif var1 == 1:\n\t\tfor i in range(1, len(var0)):\n\t\t\tif i != var2:\n\t\t\t\tif var0[i].isupper():\n\t\t\t\t\tvar3 = False\n\t\tif var3:\n\t\t\tprint('AC')\n\t\t\tsys.exit()\nprint('WA')"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 1\nvar2 = list(map(int, input().split()))\nif 0 in var2:\n\tprint(0)\nelse:\n\tfor i in range(var0):\n\t\tvar1 = var1 * var2[i]\n\tvar1 = str(var1)\n\tif len(var1) > 18:\n\t\tprint(-1)\n\telse:\n\t\tprint(var1)",
      "fixed_code": "input()\nvar2 = list(map(int, input().split()))\nvar1 = 1\nif 0 in var2:\n\tprint(0)\nelse:\n\tfor i in range(len(var2)):\n\t\tvar1 = var1 * var2[i]\n\t\tif var1 > 1000000000000000000:\n\t\t\tprint(-1)\n\t\t\texit()\n\tprint(var1)"
    }
  },
  {
    "p_name": "p03861",
    "code": {
      "buggy_code": "import sys\nimport copy\nvar0 = input().rstrip().split(' ')\nvar1, var2, var3 = (int(var0[0]), int(var0[1]), int(var0[2]))\nvar4 = var2 - var1\nvar5 = var4 // var3 + 1\nprint(var5)",
      "fixed_code": "import sys\nimport copy\nvar0 = input().rstrip().split(' ')\nvar1, var2, var3 = (int(var0[0]), int(var0[1]), int(var0[2]))\nvar5 = (var1 - 1) // var3\nvar6 = var2 // var3\nprint(var6 - var5)"
    }
  },
  {
    "p_name": "p03760",
    "code": {
      "buggy_code": "var0 = list(input())\nvar1 = list(input())\nvar2 = ''\nfor i in range(0, len(var1) - 1):\n\tvar3 = var0[i] + var1[i]\n\tvar2 = var2 + var3\n\tif len(var1) + 1 == len(var0):\n\t\tvar2 = var2 + var0[len(var0) - 1]\nprint(var2)",
      "fixed_code": "var0 = list(input())\nvar1 = list(input())\nvar2 = ''\nfor i in range(0, len(var1)):\n\tvar3 = var0[i] + var1[i]\n\tvar2 = var2 + var3\nif len(var1) + 1 == len(var0):\n\tvar2 = var2 + var0[len(var0) - 1]\nprint(var2)"
    }
  },
  {
    "p_name": "p02682",
    "code": {
      "buggy_code": "import math\nvar0, var1, var2, k = map(int, input().split())\nif k <= var0 + var1:\n\tprint(var0)\n\texit()\nprint(var0 - (k - var0 - var1))",
      "fixed_code": "import math\nvar0, var1, var2, k = map(int, input().split())\nif k < var0:\n\tprint(k)\n\texit()\nif k <= var0 + var1:\n\tprint(var0)\n\texit()\nprint(var0 - (k - var0 - var1))"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "import sys\n\ndef input():\n\treturn sys.stdin.readline().rstrip()\nif __name__ == '__main__':\n\tvar0, var1 = map(int, input().split())\n\tvar2 = [i % 2019 for i in range(var0, var1 + 1)]\n\tvar2.sort()\n\tprint(var2[0] * var2[1])",
      "fixed_code": "import sys\n\ndef input():\n\treturn sys.stdin.readline().rstrip()\nif __name__ == '__main__':\n\tvar0, var1 = map(int, input().split())\n\tvar3 = var1 // 2019 - var0 // 2019\n\tif var3 >= 1:\n\t\tprint(0)\n\telse:\n\t\tvar4 = float('inf')\n\t\tfor i in range(var0, var1):\n\t\t\tfor j in range(i + 1, var1 + 1):\n\t\t\t\tvar4 = min(var4, i * j % 2019)\n\t\tprint(var4)"
    }
  },
  {
    "p_name": "p02729",
    "code": {
      "buggy_code": "var0, var1 = (int(i) for i in input().split())\nprint(var0 * (var0 - 1) / 2 + var1 * (var1 - 1) / 2)",
      "fixed_code": "var0, var1 = (int(i) for i in input().split())\nprint(int(var0 * (var0 - 1) / 2 + var1 * (var1 - 1) / 2))"
    }
  },
  {
    "p_name": "p03471",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = int((var1 / 1000 - var0) // 9)\nfor i in range(var0 + 1):\n\tif var1 >= var0 * 1000 and int((var1 / 1000 - var0 - 9 * i) % 4) == 0:\n\t\tvar3 = (var1 / 1000 - var0 - 9 * i) // 4\n\t\tif var0 - i - var3 >= 0:\n\t\t\tprint(i, int(var3), int(var0 - i - var3))\n\t\t\tbreak\n\telif i == var0:\n\t\tprint('-1 -1 -1')\n\t\tbreak\n\telse:\n\t\tprint('-1 -1 -1')",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var1 >= var0 * 1000:\n\tfor i in range(var0 + 1):\n\t\tif var1 / 1000 - var0 - 9 * i >= 0 and int((var1 / 1000 - var0 - 9 * i) % 4) == 0:\n\t\t\tvar3 = (var1 / 1000 - var0 - 9 * i) / 4\n\t\t\tif int(var0 - i - var3) >= 0 and 10000 * i + 5000 * int(var3) + 1000 * int(var0 - i - var3) == var1:\n\t\t\t\tprint(i, int(var3), int(var0 - i - var3))\n\t\t\t\tbreak\n\t\telif i == var0:\n\t\t\tprint('-1 -1 -1')\nelse:\n\tprint('-1 -1 -1')"
    }
  },
  {
    "p_name": "p03548",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nprint(var0 // (var1 + var2))",
      "fixed_code": "var3, var4, var5 = map(int, input().split())\nprint((var3 - var5) // (var4 + var5))"
    }
  },
  {
    "p_name": "p02779",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nif set(var1) == len(var1):\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nif len(set(var1)) == var0:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split()))\nprint(-(-var0 * var1 // 2))",
      "fixed_code": "var0, var1 = list(map(int, input().split()))\nif var0 == 1 or var1 == 1:\n\tprint(1)\nelse:\n\tprint(-(-var0 * var1 // 2))"
    }
  },
  {
    "p_name": "p03494",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = []\nvar3 = True\nvar4 = 0\nwhile var3:\n\tvar2 = list(map(lambda var5: type(var5) == 'int', var1))\n\tvar3 = 'False' in var2\n\tvar2 = list(map(lambda var5: var5 / 2, var1))\n\tvar4 += 1\nprint(var4)",
      "fixed_code": "var6 = int(input())\ni = 0\nvar7 = 0\nvar8 = 0\nvar9 = list(map(int, input().split()))\nwhile True:\n\tfor i in range(0, var6):\n\t\tif int(var9[i]) % 2 == 0:\n\t\t\tvar8 += 1\n\tif var8 == var6:\n\t\tvar7 += 1\n\t\tvar9 = list(map(lambda var10: int(var10 / 2), var9))\n\t\tvar8 = 0\n\telse:\n\t\tbreak\nprint(var7)"
    }
  },
  {
    "p_name": "p03208",
    "code": {
      "buggy_code": "import sys\nvar0 = lambda: int(sys.stdin.readline())\nvar1 = lambda: map(int, sys.stdin.readline().split())\nvar2 = lambda: list(var1())\nvar3 = lambda: map(str, sys.stdin.readline().split())\nvar4 = lambda: list(var3())\nvar5, k = var1()\nvar6 = []\nvar7 = 10 ** 6\nfor var8 in range(var5):\n\tvar6.append(var0())\nvar6.sort()\nfor i in range(var5 - k + 1):\n\tif max(var6[i:i + k]) - min(var6[i:i + k]) < var7:\n\t\tvar7 = max(var6[i:i + k]) - min(var6[i:i + k])\nprint(var7)",
      "fixed_code": "import sys\nvar0 = lambda: int(sys.stdin.readline())\nvar1 = lambda: map(int, sys.stdin.readline().split())\nvar2 = lambda: list(var1())\nvar3 = lambda: map(str, sys.stdin.readline().split())\nvar4 = lambda: list(var3())\nvar5, k = var1()\nvar6 = []\nvar7 = 10 ** 10\nfor var8 in range(var5):\n\tvar6.append(var0())\nvar6.sort()\nfor i in range(var5 - k + 1):\n\tif var6[i + k - 1] - var6[i] < var7:\n\t\tvar7 = var6[i + k - 1] - var6[i]\nprint(var7)"
    }
  },
  {
    "p_name": "p03438",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = int(input())\n\tvar1 = list(map(int, input().split()))\n\tvar2 = list(map(int, input().split()))\n\tvar3 = sum(var2) - sum(var1)\n\tvar4 = 0\n\tvar5 = 0\n\tfor i in range(var0):\n\t\tif var1[i] > var2[i]:\n\t\t\tvar5 += var1[i] - var2[i]\n\t\telse:\n\t\t\tvar4 += var2[i] - var1[i]\n\tif var1 == var2:\n\t\treturn print('Yes')\n\tif var4 % 2 == 0:\n\t\tif var4 // 2 > var3:\n\t\t\treturn print('No')\n\telif var4 // 2 + 1 > var3:\n\t\treturn print('No')\n\treturn print('Yes')\nmethod0()",
      "fixed_code": "def method0():\n\tvar0 = int(input())\n\tvar1 = list(map(int, input().split()))\n\tvar2 = list(map(int, input().split()))\n\tvar3 = sum(var2) - sum(var1)\n\tif var3 < 0:\n\t\treturn print('No')\n\tif var1 == var2:\n\t\treturn print('Yes')\n\tvar6 = 0\n\tvar7 = 0\n\tfor i in range(var0):\n\t\tif var1[i] > var2[i]:\n\t\t\tvar6 += var1[i] - var2[i]\n\t\telse:\n\t\t\tvar7 += (var2[i] - var1[i]) // 2\n\tif var6 > var7:\n\t\treturn print('No')\n\telse:\n\t\treturn print('Yes')\nmethod0()"
    }
  },
  {
    "p_name": "p03250",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nif var0 > var1:\n\tif var0 > var2:\n\t\tvar0 *= 10\n\telse:\n\t\tvar2 *= 10\nelse:\n\tvar1 *= 10\nprint(var0 + var1 + var2)",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nif var0 > var1 and var0 > var2:\n\tvar0 *= 10\nelif var1 > var2:\n\tvar1 *= 10\nelse:\n\tvar2 *= 10\nprint(var0 + var1 + var2)"
    }
  },
  {
    "p_name": "p03001",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = var0 * var1\nvar5 = var2 * var1\nvar6 = (var0 - var2) * var1\nvar7 = var0 * var3\nvar8 = var0 * (var1 - var3)\nif min(var5, var6) == min(var7, var8):\n\tvar9 = 1\nelse:\n\tvar9 = 0\nprint(max(min(var5, var6), min(var7, var8)), var9)",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = var0 * var1\nvar5 = var2 * var1\nvar6 = (var0 - var2) * var1\nvar7 = var0 * var3\nvar8 = var0 * (var1 - var3)\nif var0 / 2 == var2 and var1 / 2 == var3:\n\tvar9 = 1\nelse:\n\tvar9 = 0\nprint(var0 * var1 / 2, var9)"
    }
  },
  {
    "p_name": "p03324",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 100 ** 2 * var1\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var1 == 100:\n\tprint(100 ** var0 * 101)\nelse:\n\tprint(100 ** var0 * var1)"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 1\nfor var3 in var1:\n\tvar2 *= var3\nif var2 >= 10 ** 18:\n\tprint(-1)\nelse:\n\tprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 1\nif 0 in var1:\n\tprint(0)\nelse:\n\tfor i in range(var0):\n\t\tvar2 *= var1[i]\n\t\tif var2 > 10 ** 18:\n\t\t\tprint(-1)\n\t\t\texit()\n\tprint(var2)"
    }
  },
  {
    "p_name": "p03284",
    "code": {
      "buggy_code": "var0, k = map(int, input().split())\nprint(abs(var0 % k - var0 // k))",
      "fixed_code": "var0, k = map(int, input().split())\nif var0 % k == 0:\n\tprint(0)\nelse:\n\tprint(1)"
    }
  },
  {
    "p_name": "p03095",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = input()\nvar1 = list(var1)\nvar2 = [0] * 26\nvar3 = 1\nfor var4 in var1:\n\tvar2[ord(var4) - 97] += 1\nfor k in var2:\n\tvar3 *= k + 1\nprint(var3 - 1)",
      "fixed_code": "var0 = int(input())\nvar1 = input()\nvar1 = list(var1)\nvar5 = 10 ** 9 + 7\nvar2 = [0] * 26\nvar3 = 1\nfor var4 in var1:\n\tvar2[ord(var4) - 97] += 1\nfor k in var2:\n\tvar3 *= k + 1\nprint((var3 - 1) % var5)"
    }
  },
  {
    "p_name": "p03693",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = int(var1 + var2)\nif var3 % 4 == 0:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0, var1, var2 = map(str, input().split())\nif int(var1 + var2) % 4 == 0:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p03001",
    "code": {
      "buggy_code": "import sys\nvar0, var1, var2, var3 = map(int, input().split())\nif (var2, var3) in [(var0, 0), (0, var1), (0, 0), (var0, var1)]:\n\tprint(var0 * var1 / 2, 0)\n\tsys.exit()\nif var2 / var0 + var3 / var1 == 1 or var3 * var0 == var1 * var2:\n\tprint(var0 * var1 / 2, 0)\n\tsys.exit()\nvar4 = min(var2 * var1, (var0 - var2) * var1)\nvar5 = min(var3 * var0, (var1 - var3) * var0)\nif var4 == var5:\n\tprint(var4, 1)\nelse:\n\tprint(max(var4, var5), 0)",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nprint(var0 * var1 / 2, int(2 * var2 == var0 and 2 * var3 == var1))"
    }
  },
  {
    "p_name": "p03548",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = 0\nwhile var0 - var1 > 0:\n\tvar0 = var0 - var1\n\tvar3 += 1\n\tvar0 -= var2\nprint(var3)",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = 0\nvar0 = var0 - 2 * var2\nwhile var0 - var1 >= 0:\n\tvar0 = var0 - var1\n\tvar3 += 1\n\tvar0 -= var2\nprint(var3)"
    }
  },
  {
    "p_name": "p03644",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [2, 4, 8, 16, 32, 64]\nfor i in range(len(var1)):\n\tif var0 == 1:\n\t\tprint(1)\n\t\tbreak\n\telif var1[i] < var0 and var0 < 64:\n\t\tcontinue\n\telif 64 <= var0:\n\t\tprint(64)\n\t\tbreak\n\telse:\n\t\tprint(var1[i - 1])\n\t\tbreak",
      "fixed_code": "var0 = int(input())\nvar1 = [1, 2, 4, 8, 16, 32, 64]\nfor i in range(len(var1)):\n\tif var0 == var1[i]:\n\t\tprint(var0)\n\t\tbreak\n\telif var1[i] < var0 and var0 < 64:\n\t\tcontinue\n\telif var0 >= 64:\n\t\tprint(64)\n\t\tbreak\n\telse:\n\t\tprint(var1[i - 1])\n\t\tbreak"
    }
  },
  {
    "p_name": "p02713",
    "code": {
      "buggy_code": "import math\n\ndef method0(var0, var1):\n\tif var0 % var1 == 0:\n\t\treturn var1\n\telse:\n\t\treturn method0(var1, var0 % var1)\nvar0 = int(input())\nvar2 = 0\nfor i in range(1, var0 + 1):\n\tfor j in range(1, var0 + 1):\n\t\tvar3 = math.gcd(i + 1, j + 1)\n\t\tfor k in range(1, var0 + 1):\n\t\t\tvar2 += math.gcd(var3, k + 1)\nprint(var2)",
      "fixed_code": "import math\n\ndef method0(var0, var1):\n\tif var0 % var1 == 0:\n\t\treturn var1\n\telse:\n\t\treturn method0(var1, var0 % var1)\nvar0 = int(input())\nvar2 = 0\nfor i in range(1, var0 + 1):\n\tfor j in range(1, var0 + 1):\n\t\tvar3 = math.gcd(i, j)\n\t\tfor k in range(1, var0 + 1):\n\t\t\tvar2 += math.gcd(var3, k)\nprint(var2)"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nprint(min(var0 * (var0 + 1) % 2019, var0 * (var0 + 2) % 2019))",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var1 - var0 >= 2019:\n\tprint(0)\nelse:\n\tvar2 = 2019\n\tfor i in range(var0, var1):\n\t\tfor j in range(i + 1, var1 + 1):\n\t\t\tvar3 = i * j % 2019\n\t\t\tvar2 = min(var2, var3)\n\tprint(var2)"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "from sys import exit\nvar0, var1 = map(int, input().split())\nvar2 = ['0'] * var0\nvar2[0] = '1'\nvar3 = [False] * var0\nfor var4 in range(var1):\n\tvar5, var6 = map(int, input().split())\n\tif var5 == 1 and var6 == 0:\n\t\tif var0 == 1:\n\t\t\tvar2[0] = '0'\n\t\t\tvar3[0] = True\n\t\telse:\n\t\t\tprint(-1)\n\t\t\texit()\n\tif var3[var5 - 1]:\n\t\tif var2[var5 - 1] == str(var6):\n\t\t\tcontinue\n\t\tprint(-1)\n\t\texit()\n\telse:\n\t\tvar2[var5 - 1] = str(var6)\n\t\tvar3[var5 - 1] = True\nprint(''.join(var2))",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 == 1:\n\tvar7 = [0]\n\tvar8 = [False]\nelse:\n\tvar7 = [1] + [0] * (var0 - 1)\n\tvar8 = [False] * var0\nvar9 = 0\nfor i in range(var1):\n\tvar5, var6 = map(int, input().split())\n\tif not var8[var5 - 1]:\n\t\tvar7[var5 - 1] = var6\n\t\tvar8[var5 - 1] = True\n\telif var7[var5 - 1] == var6:\n\t\tpass\n\telse:\n\t\tvar9 = -1\n\t\tbreak\n\tif var0 > 1 and var5 == 1 and (var6 == 0):\n\t\tvar9 = -1\n\t\tbreak\nif var9 == 0:\n\tvar9 = ''.join(map(str, var7))\nprint(var9)"
    }
  },
  {
    "p_name": "p02554",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 10 ** 9 + 7\nif var0 == 1:\n\tprint(0)\nelif var0 == 2:\n\tprint(2)\nelse:\n\tvar2 = var0 - 2\n\tvar3 = 8 ** var2\n\tvar4 = 10 ** var2\n\tvar5 = var2 * 2\n\tvar6 = (var3 + var4 * var5) % var1\n\tvar7 = var0 - 1\n\tvar8 = var7 * var6 % var1\n\tvar8 = var8 * var0 % var1\n\tprint(var8)",
      "fixed_code": "var0 = int(input())\nvar1 = 10 ** 9 + 7\nif var0 == 1:\n\tprint(0)\nelif var0 == 2:\n\tprint(2)\nelse:\n\tvar2 = 10 ** var0\n\tvar7 = 9 ** var0\n\tvar9 = 8 ** var0\n\tprint((var2 + var9 - var7 * 2) % var1)"
    }
  },
  {
    "p_name": "p03250",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = 10 * var0 + var1\nvar4 = 10 * var1 + var2\nprint(max(var3 + var2, var0 + var4))",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = max(10 * var0 + var1 + var2, var0 + 10 * var1 + var2, var0 + var1 + 10 * var2)\nprint(var3)"
    }
  },
  {
    "p_name": "p02866",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar1.sort()\nvar2 = 0\nvar3 = 1\nif var1[0] == 0:\n\tfor i in range(1, var0):\n\t\tif i == var0 - 1:\n\t\t\tvar3 *= var2 + 1\n\t\telif var1[i] == var1[i + 1]:\n\t\t\tvar3 *= var2 + 2\n\t\t\tvar2 = 0\n\t\telse:\n\t\t\tvar2 += 1\nelse:\n\tvar3 = 0\nprint(var3)",
      "fixed_code": "import sys\nfrom collections import Counter\nvar0 = int(input())\nvar4 = list(map(int, input().split()))\nvar5 = Counter(var4)\nvar6 = 998244353\nif var4[0] != 0 or var5[0] != 1:\n\tprint(0)\n\tsys.exit()\nvar7 = 1\nfor i in range(2, var0):\n\tvar7 *= pow(var5[i - 1], var5[i], var6)\n\tvar7 %= var6\nprint(var7 % var6)"
    }
  },
  {
    "p_name": "p03048",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = 0\nfor var5 in range(var3 // var0 + 1):\n\tvar6 = var0 * var5\n\tfor var7 in range((var3 - var6) // var1 + 1):\n\t\tvar6 += var1 * var7\n\t\tif (var3 - var6) % var2 == 0:\n\t\t\tvar4 += 1\nprint(var4)",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = 0\nfor var5 in range(var3 // var0 + 1):\n\tvar6 = var0 * var5\n\tfor var7 in range((var3 - var6) // var1 + 1):\n\t\tvar8 = var6 + var1 * var7\n\t\tif (var3 - var8) % var2 == 0:\n\t\t\tvar4 += 1\nprint(var4)"
    }
  },
  {
    "p_name": "p02922",
    "code": {
      "buggy_code": "def method0():\n\treturn map(int, input().split())\nvar0, var1 = method0()\nvar2 = 1\nfor i in range(1, 20):\n\tvar2 += var0 - 1\n\tif var2 >= var1:\n\t\tprint(i)\n\t\tbreak",
      "fixed_code": "def method0():\n\treturn map(int, input().split())\nvar0, var1 = method0()\nvar2 = 1\nif var1 <= 1:\n\tprint(0)\nelse:\n\tfor i in range(1, 21):\n\t\tvar2 = var2 - 1 + var0\n\t\tif var2 >= var1:\n\t\t\tprint(i)\n\t\t\tbreak"
    }
  },
  {
    "p_name": "p03061",
    "code": {
      "buggy_code": "from fractions import gcd\nvar0 = int(input())\nvar1 = list(map(int, input().split()))\nvar1.sort()\nif len(var1) == 2:\n\tprint(max(var1[0], var1[1]))\n\texit()\nvar2 = max(gcd(var1[0], var1[1]), gcd(var1[1], var1[2]), gcd(var1[2], var1[0]))\nfor i in range(4, var0):\n\tvar2 = gcd(var2, var1[i])\nprint(var2)",
      "fixed_code": "from fractions import gcd\nvar0 = int(input())\nvar1 = list(map(int, input().split()))\nvar3 = [0] * var0\nvar3[0] = var1[0]\nvar4 = [0] * var0\nvar4[-1] = var1[-1]\nfor i in range(1, var0):\n\tvar3[i] = gcd(var3[i - 1], var1[i])\n\tvar4[-i - 1] = gcd(var4[-i], var1[-i - 1])\nvar2 = 0\nfor i in range(var0):\n\tif i == 0:\n\t\tvar2 = var4[1]\n\telif i == var0 - 1:\n\t\tvar2 = max(var2, var3[i - 1])\n\telse:\n\t\tvar2 = max(var2, gcd(var3[i - 1], var4[i + 1]))\nprint(var2)"
    }
  },
  {
    "p_name": "p03324",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var0 == 0:\n\tprint(var1 + var1 // 100)\nelse:\n\tprint(var1 * 100 ** var0)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var1 < 100:\n\tprint(var1 * 100 ** var0)\nelse:\n\tprint(101 * 100 ** var0)"
    }
  },
  {
    "p_name": "p03145",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nprint('この三角形の面積は{}です。'.format(var0 * var1 // 2))",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nprint(var0 * var1 // 2)"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = [None] * var1\nfor i in range(var1):\n\tvar2[i] = tuple(map(int, input().split()))\nvar3 = [None] * var0\nfor i in range(var1):\n\tif var3[var2[i][0] - 1] != None:\n\t\tif var3[var2[i][0] - 1] != var2[i][1]:\n\t\t\tprint(-1)\n\t\t\tquit()\n\tvar3[var2[i][0] - 1] = var2[i][1]\nif var3[0] == None:\n\tvar3[0] = 1\nif var3[0] == 0:\n\tprint(-1)\n\tquit()\nfor i in range(var0):\n\tif var3[i] == None:\n\t\tvar3[i] = 0\nvar3 = map(str, var3)\nvar4 = ''.join(var3)\nif int(var4) == 0 and var0 != 1:\n\tprint(-1)\n\tquit()\nprint(var4)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = [None] * var1\nfor i in range(var1):\n\tvar2[i] = tuple(map(int, input().split()))\nvar3 = [None] * var0\nfor i in range(var1):\n\tif var3[var2[i][0] - 1] != None:\n\t\tif var3[var2[i][0] - 1] != var2[i][1]:\n\t\t\tprint(-1)\n\t\t\tquit()\n\tvar3[var2[i][0] - 1] = var2[i][1]\nif var3[0] == None:\n\tif var0 != 1:\n\t\tvar3[0] = 1\n\telse:\n\t\tvar3[0] = 0\nif var3[0] == 0 and var0 != 1:\n\tprint(-1)\n\tquit()\nfor i in range(1, var0):\n\tif var3[i] == None:\n\t\tvar3[i] = 0\nvar3 = map(str, var3)\nvar4 = ''.join(var3)\nif int(var4) == 0 and var0 != 1:\n\tprint(-1)\n\tquit()\nprint(var4)"
    }
  },
  {
    "p_name": "p03041",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = input()\nprint(var2.replace(var2[var1 - 1], chr(ord(var2[var1 - 1]) + 32)))",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = input()\nvar3 = var2[:var1 - 1] + chr(ord(var2[var1 - 1]) + 32) + var2[var1:]\nprint(var3)"
    }
  },
  {
    "p_name": "p02830",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1, var2 = map(str, input().split())\nfor i in range(var0):\n\tprint(var1[i].join(var2[i]))",
      "fixed_code": "from sys import stdin\nvar0 = int(stdin.readline())\nvar1, var2 = map(str, input().split())\nvar3 = []\nfor i in range(var0):\n\tvar3.append(var1[i])\n\tvar3.append(var2[i])\nprint(''.join(var3))"
    }
  },
  {
    "p_name": "p02865",
    "code": {
      "buggy_code": "var0 = int(input())\nif var0 <= 2:\n\tprint(0)\nif var0 % 2 == 0:\n\tprint(var0 // 2 - 1)\nelse:\n\tprint(var0 // 2)",
      "fixed_code": "var0 = int(input())\nif var0 <= 2:\n\tprint(0)\nelif var0 % 2 == 0:\n\tprint(var0 // 2 - 1)\nelse:\n\tprint(var0 // 2)"
    }
  },
  {
    "p_name": "p02554",
    "code": {
      "buggy_code": "def method0(var0, var1):\n\tvar2 = 1000000007\n\tvar3 = 1\n\tfor var4 in range(var1):\n\t\tvar3 *= var0\n\t\tvar3 %= var2\n\treturn var3\nvar5 = int(input())\nvar6 = method0(9, var5)\nvar2 = 1000000007\nvar3 = 2 * var6 % var2\nvar3 += var2 - method0(8, var5)\nvar3 = method0(10, var5) + var2 - var3\nprint(var3)",
      "fixed_code": "def method0(var0, var1):\n\tvar2 = 1000000007\n\tvar3 = 1\n\tfor var4 in range(var1):\n\t\tvar3 *= var0\n\t\tvar3 %= var2\n\treturn var3\nvar5 = int(input())\nvar2 = 1000000007\nvar3 = (method0(10, var5) + var2 - 2 * method0(9, var5) % var2 + method0(8, var5)) % var2\nprint(var3)"
    }
  },
  {
    "p_name": "p02389",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split(' ')))\nprint(var0 * var1)",
      "fixed_code": "var0, var1 = list(map(int, input().split(' ')))\nprint('{} {}'.format(var0 * var1, 2 * var0 + 2 * var1))"
    }
  },
  {
    "p_name": "p02693",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1, var2 = map(int, input().split())\nvar3 = int(var1 / var0)\nvar4 = (var3 + 1) * var0\nif var4 >= var1 and var4 <= var2 or var0 == 1:\n\tprint('OK')\nelse:\n\tprint('NG')",
      "fixed_code": "var0 = int(input())\nvar1, var2 = map(int, input().split())\nvar3 = int(var1 / var0)\nif var3 * var0 == var1:\n\tprint('OK')\nelif (var3 + 1) * var0 > var2:\n\tprint('NG')\nelse:\n\tprint('OK')"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "var0 = list(map(int, input().split()))\nvar1 = max(var0)\nvar2 = min(var0)\nvar3 = 0\nif var1 % 2 == 0:\n\tvar3 = var1 * var2 / 2\nelse:\n\tvar3 += (var1 - 1) * var2 / 2\n\tvar3 += (var2 + 1) // 2\nprint(int(var3))",
      "fixed_code": "var0 = list(map(int, input().split()))\nvar1 = max(var0)\nvar2 = min(var0)\nvar3 = 0\nif var1 % 2 == 0:\n\tvar3 = var1 * var2 / 2\nelse:\n\tvar3 += (var1 - 1) * var2 / 2\n\tvar3 += (var2 + 1) // 2\nif var2 == 1:\n\tvar3 = 1\nprint(int(var3))"
    }
  },
  {
    "p_name": "p03043",
    "code": {
      "buggy_code": "import math\nvar0, var1 = map(int, input().split())\nvar2 = 0\nfor i in range(1, var0 + 1):\n\tif i >= var1:\n\t\tvar2 += 1\n\telse:\n\t\tvar3 = math.ceil(math.log2(var1 / i))\n\t\tvar2 += 0.5 ** var3\n\t\tprint(var3)\n\tprint(i, var2)\nprint('{:.12f}'.format(var2 / var0))",
      "fixed_code": "import math\nvar0, var1 = map(int, input().split())\nvar2 = 0\nfor i in range(1, var0 + 1):\n\tif i >= var1:\n\t\tvar2 += 1\n\telse:\n\t\tvar3 = math.ceil(math.log2(var1 / i))\n\t\tvar2 += 0.5 ** var3\nprint('{:.12f}'.format(var2 / var0))"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split()))\n\ndef method0(var0, var1):\n\tvar2 = 2019\n\tvar0 %= var2\n\tvar1 %= var2\n\tfor i in range(var0, var1):\n\t\tfor j in range(i + 1, var1 + 1):\n\t\t\tvar3 = i * j % 2019\n\t\t\tif var3 < var2:\n\t\t\t\tvar2 = var3\n\treturn var2\nprint(method0(var0, var1))",
      "fixed_code": "var0, var1 = list(map(int, input().split()))\n\ndef method0(var0, var1):\n\tvar2 = 2019\n\tif var0 // var2 == var1 // var2:\n\t\tvar0 %= var2\n\t\tvar1 %= var2\n\t\tfor i in range(var0, var1):\n\t\t\tfor j in range(i + 1, var1 + 1):\n\t\t\t\tvar3 = i * j % 2019\n\t\t\t\tif var3 < var2:\n\t\t\t\t\tvar2 = var3\n\telse:\n\t\tvar2 = 0\n\treturn var2\nprint(method0(var0, var1))"
    }
  },
  {
    "p_name": "p03605",
    "code": {
      "buggy_code": "var0 = list(map(int, input().split()))\nif 9 in var0:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = list(input())\nif '9' in var0:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02989",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [int(var2) for var2 in input().split()]\nvar3 = 0\nvar4 = [0] * (max(var1) + 1)\nfor i in range(1, max(var1) + 1):\n\tvar4[i] = var1.count(i)\nfor i in range(1, len(var4) - 1):\n\tvar4[i] += var4[i - 1]\nfor var5 in var4:\n\tif var5 == var0 // 2:\n\t\tvar3 += 1\nprint(var3)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar4 = sorted(var1)\nvar6 = var0 // 2\nprint(var4[var6] - var4[var6 - 1])"
    }
  },
  {
    "p_name": "p03775",
    "code": {
      "buggy_code": "def method0(var0):\n\ti = 2\n\tvar1 = []\n\twhile i * i <= var0:\n\t\tif var0 % i:\n\t\t\ti += 1\n\t\telse:\n\t\t\tvar0 //= i\n\t\t\tvar1.append(i)\n\tif var0 > 1:\n\t\tvar1.append(var0)\n\treturn var1\nvar2 = int(input())\nvar3 = method0(var2)\nvar4 = 0\nvar5 = 0\nif len(var3) <= 2:\n\tvar3.append(1)\nif var3 and len(var3) >= 2:\n\tvar4 = var3.pop(0)\n\tvar5 = var3.pop(-1)\n\tfor var6 in var3:\n\t\tif var4 < var5:\n\t\t\tvar4 = var4 * var6\n\t\telse:\n\t\t\tvar5 = var5 * var6\nif var4 >= var5:\n\tprint(len(str(var4)))\nelse:\n\tprint(len(str(var5)))",
      "fixed_code": "var0 = int(input())\nvar7 = 1000000000.0\nfor i in range(1, int(var0 ** 0.5) + 1):\n\tif var0 % i == 0:\n\t\tvar7 = min(var7, max(len(str(i)), len(str(var0 // i))))\nprint(var7)"
    }
  },
  {
    "p_name": "p02773",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [str(input()) for i in range(var0)]\nvar1.sort()\nvar2 = list(set(var1))\nvar3 = [0 for _ in range(len(var2))]\nfor i in range(len(var2)):\n\tvar3[i] = var1.count(var2[i])\nvar4 = [i for i, var5 in enumerate(var3) if max(var3) == var5]\nfor i in range(len(var4)):\n\tprint(var2[var4[i]])",
      "fixed_code": "import collections\nvar0, *var6 = open(0).read().split()\nvar7 = collections.Counter(var6)\ni = var7.most_common()[0][1]\nprint(*sorted([k for k, var8 in var7.most_common() if var8 == i]), var9='\\n')"
    }
  },
  {
    "p_name": "p02663",
    "code": {
      "buggy_code": "var0, var1, var2, var3, var4 = [int(var5) for var5 in input().split()]\nprint(var2 * 60 + var3 - var0 * 60 + var1 - var4)",
      "fixed_code": "var0, var1, var2, var3, var4 = [int(var5) for var5 in input().split()]\nif var2 < var0:\n\tvar2 += 24\nelif var2 == var0 and var1 > var3:\n\tvar2 += 24\nprint(int(var2 * 60 + var3 - (var0 * 60 + var1) - var4))"
    }
  },
  {
    "p_name": "p02718",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = []\nvar4 = 1 / (4 * var1) * sum(var2)\nfor i in range(0, var1):\n\tvar5 = 0\n\tfor j in range(len(var2)):\n\t\tif var2[j] > var5:\n\t\t\tvar5 = var2[j]\n\tvar2.remove(var5)\n\tif var5 > var4:\n\t\tvar3.append(var5)\nif len(var3) < var1:\n\tprint('No')\nelse:\n\tprint('Yes')",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = []\nvar4 = 1 / (4 * var1) * sum(var2)\nfor i in range(0, var1):\n\tvar5 = 0\n\tfor j in range(len(var2)):\n\t\tif var2[j] > var5:\n\t\t\tvar5 = var2[j]\n\tvar2.remove(var5)\n\tif var5 >= var4:\n\t\tvar3.append(var5)\nif len(var3) >= var1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03796",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nprint(math.factorial(var0) & 10 ** 9 + 7)",
      "fixed_code": "import math\nvar0 = int(input())\nvar1 = 10 ** 9 + 7\nprint(math.factorial(var0) % var1)"
    }
  },
  {
    "p_name": "p02910",
    "code": {
      "buggy_code": "var0 = list(map(str, input()))\ni = 1\nvar1 = 0\nfor i in range(len(var0) - 1):\n\tif i % 2 == 1:\n\t\tif var0[i] == 'L':\n\t\t\tvar1 = var1 + 1\n\telif var0[i] == 'R':\n\t\tvar1 = var1 + 1\nif var1 == 0:\n\tprint('No')\nelse:\n\tprint('Yes')",
      "fixed_code": "var0 = list(map(str, input()))\ni = 0\nvar1 = 0\nfor i in range(len(var0)):\n\tif (i + 1) % 2 == 1:\n\t\tif var0[i] == 'L':\n\t\t\tvar1 = var1 + 1\n\telif var0[i] == 'R':\n\t\tvar1 = var1 + 1\nif var1 == 0:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03329",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = var0\nvar2 = []\nfor i in range(1, 10):\n\tif 6 ** i < 100000:\n\t\tvar2.append(6 ** i)\n\tif 9 ** i < 100000:\n\t\tvar2.append(9 ** i)\nvar2.sort(var3=True)\n\ndef method0(var0, var4):\n\tfor i in var2:\n\t\tif i < var0:\n\t\t\tglobal var1\n\t\t\tvar0 -= i\n\t\t\tvar4 += 1\n\t\t\tif var1 > var4 + var0:\n\t\t\t\tvar1 = var4 + var0\n\t\t\tif var0 > 6:\n\t\t\t\tmethod0(var0, var4)\nmethod0(var0, 0)\nprint(var1)",
      "fixed_code": "var0 = int(input())\nvar1 = [var0]\nvar2 = []\nfor i in range(1, 10):\n\tif 6 ** i < 100000:\n\t\tvar2.append(6 ** i)\n\tif 9 ** i < 100000:\n\t\tvar2.append(9 ** i)\nvar2.sort(var3=True)\n\ndef method0(var0, var4):\n\tfor i in range(len(var2)):\n\t\tvar5 = var0\n\t\tvar6 = var4\n\t\tif var2[i] <= var5:\n\t\t\tvar5 -= var2[i]\n\t\t\tvar6 += 1\n\t\t\tif var1[0] > var6 + var5:\n\t\t\t\tvar1[0] = var6 + var5\n\t\t\tif var5 >= 6 and var6 < var1[0]:\n\t\t\t\tmethod0(var5, var6)\n\t\t\tif var5 > var2[i] * 2:\n\t\t\t\tbreak\nmethod0(var0, 0)\nprint(var1[0])"
    }
  },
  {
    "p_name": "p03000",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 0\nfor i, var4 in enumerate(var2):\n\tvar3 += var4\n\tif var3 > var1:\n\t\tprint(i + 1)\n\t\tbreak",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar5 = 0\nfor i in range(len(var2)):\n\tvar5 += var2[i]\n\tif var5 > var1:\n\t\tprint(i + 1)\n\t\tbreak\nif var5 <= var1:\n\tprint(var0 + 1)"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "def method0():\n\treturn [int(var0) for var0 in input().split(' ')]\n\ndef method1():\n\tprint(-1)\n\texit()\nvar1, var2 = method0()\nvar3 = [method0() for i in range(var2)]\nvar4 = {}\nfor var5 in var3:\n\tvar6, var7 = var5\n\tif var6 == 1 and var7 == 0:\n\t\tmethod1()\n\tif var6 in var4:\n\t\tif var4[var6] == var7:\n\t\t\tpass\n\t\telse:\n\t\t\tmethod1()\n\telse:\n\t\tvar4[var6] = var7\nif 0 not in var4:\n\tvar4[0] = 1\nprint(int(''.join([str(var4[i + 1]) if i + 1 in var4 else str(0) for i in range(var1)])))",
      "fixed_code": "import time\n\ndef method0():\n\treturn [int(var0) for var0 in input().split(' ')]\n\ndef method1():\n\tprint(-1)\n\texit()\nvar1, var2 = method0()\nvar3 = [method0() for i in range(var2)]\nvar4 = {}\nfor var5 in var3:\n\tvar6, var7 = var5\n\tif var6 == 1 and var7 == 0:\n\t\tif var1 == 1:\n\t\t\tpass\n\t\telse:\n\t\t\tmethod1()\n\tif var6 in var4:\n\t\tif var4[var6] == var7:\n\t\t\tpass\n\t\telse:\n\t\t\tmethod1()\n\telse:\n\t\tvar4[var6] = var7\nif 1 not in var4:\n\tif var1 == 1:\n\t\tvar4[1] = 0\n\telse:\n\t\tvar4[1] = 1\nvar8 = int(''.join([str(var4[i + 1]) if i + 1 in var4 else str(0) for i in range(var1)]))\nprint(var8)"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "import numpy\nvar0, var1, var2 = map(int, input().split())\nif var0 + var1 - var2 + 2 * numpy.sqrt(var0 * var1) < 0:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "from decimal import *\nvar0, var1, var2 = map(int, input().split())\nfrom decimal import *\ngetcontext().prec = 20\nvar3 = Decimal(var0 * var1).sqrt()\nif var0 + var1 - var2 + 2 * var3 < 0:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03282",
    "code": {
      "buggy_code": "var0 = input()[:int(input())]\nj = set(sorted(set(var0), var1=var0.index)[:2])\nj.discard('1')\nprint(list(j)[0] if j else 1)",
      "fixed_code": "var0 = input()[:int(input())]\nj = set(sorted(set(var0), var1=var0.index)[:2])\nj.discard('1')\nprint(list(j)[0] if j else 1)"
    }
  },
  {
    "p_name": "p02859",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = var0 * var0\nprint(int(var0))",
      "fixed_code": "var0 = int(input())\nvar1 = var0 * var0\nprint(int(var1))"
    }
  },
  {
    "p_name": "p02754",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nif var1 == 0:\n\tprint(0)\nelif var0 <= var1 + var2:\n\tprint(var1)\nelse:\n\tvar3 = var0 // (var1 + var2)\n\tvar4 = var0 % (var1 + var2)\n\tprint(var1 * var3 + var4)",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = var0 // (var1 + var2)\nvar4 = var0 % (var1 + var2)\nif var1 == 0:\n\tprint(var1)\nelif var4 >= var1:\n\tprint(var1 * var3 + var1)\nelif var4 < var1:\n\tprint(var1 * var3 + var4)"
    }
  },
  {
    "p_name": "p03069",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(input())\nvar2 = var1\nvar3 = 0\nvar4 = 0\nfor i in range(var0 - 1):\n\tif var1[i] == '#' and var1[i + 1] == '.':\n\t\tvar1[i + 1] = '#'\n\t\tvar3 += 1\nfor i in range(1, var0):\n\tif var2[i] == '.' and var2[i - 1] == '#':\n\t\tvar2[i - 1] = '.'\n\t\tvar4 += 1\nprint(min(var3, var4))",
      "fixed_code": "var0 = int(input())\nvar5 = input()\nvar6 = 0\nvar7 = 0\nfor i in var5:\n\tif i == '#':\n\t\tvar7 += 1\n\telif var7 > 0:\n\t\tvar6 += 1\n\t\tvar7 -= 1\nprint(var6)"
    }
  },
  {
    "p_name": "p03000",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 0\nvar4 = 0\nfor i in range(var0):\n\tvar4 += 1\n\tif var1 < var3:\n\t\tbreak\n\tvar3 += var2[i]\nif var1 >= var3:\n\tvar4 += 1\nprint(var4)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 0\nvar4 = 0\nfor i in range(var0):\n\tif var1 < var3:\n\t\tbreak\n\tvar4 += 1\n\tvar3 += var2[i]\nif var1 >= var3:\n\tvar4 += 1\nprint(var4)"
    }
  },
  {
    "p_name": "p03061",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nvar1 = [int(i) for i in input().split()]\nif var0 == 2:\n\tprint(max(var1))\nvar2 = [0 for i in range(var0)]\nvar3 = var2[:]\n\ndef method0(var4, var5):\n\tif var5 > var4:\n\t\tvar4, var5 = (var5, var4)\n\tif var5 == 0:\n\t\treturn var4\n\tif var4 % var5 == 0:\n\t\treturn var5\n\treturn method0(var5, var4 % var5)\nfor i in range(var0 - 1):\n\tvar2[i + 1] = method0(var2[i], var1[i])\nfor i in range(var0 - 1)[::-1]:\n\tvar3[i] = method0(var3[i + 1], var1[i + 1])\nvar6 = [method0(var2[i], var3[i]) for i in range(var0)]\nprint(max(var6))",
      "fixed_code": "var0 = int(input())\nvar1 = [int(i) for i in input().split()]\n\ndef method0(var4, var5):\n\tif var5 > var4:\n\t\tvar4, var5 = (var5, var4)\n\tif var5 == 0:\n\t\treturn var4\n\tif var4 % var5 == 0:\n\t\treturn var5\n\treturn method0(var5, var4 % var5)\nvar2 = [0 for i in range(var0)]\nvar3 = [0 for i in range(var0)]\nfor i in range(1, var0):\n\tvar2[i] = method0(var2[i - 1], var1[i - 1])\nfor i in range(var0 - 1)[::-1]:\n\tvar3[i] = method0(var3[i + 1], var1[i + 1])\nvar6 = [method0(var2[i], var3[i]) for i in range(var0)]\nprint(max(var6))"
    }
  },
  {
    "p_name": "p02397",
    "code": {
      "buggy_code": "while True:\n\tvar0 = input()\n\tvar1 = var0.split(' ')\n\tvar1.sort()\n\tif int(var1[0]) == 0 and int(var1[1]) == 0:\n\t\tbreak\n\tprint('%s %s' % (var1[0], var1[1]))",
      "fixed_code": "while True:\n\tvar0 = input()\n\tvar1 = var0.split(' ')\n\tvar1.sort(var2=int)\n\tif int(var1[0]) == 0 and int(var1[1]) == 0:\n\t\tbreak\n\tprint('%s %s' % (var1[0], var1[1]))"
    }
  },
  {
    "p_name": "p03659",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = sorted([int(var2) for var2 in input().split()])\nvar3 = 0\nwhile var1:\n\tvar4 = var1.pop()\n\tif var3 > 0:\n\t\tvar3 -= var4\n\telse:\n\t\tvar3 += var4\nprint(abs(var3))",
      "fixed_code": "var0 = int(input())\nvar1 = [int(var2) for var2 in input().split()] + [0]\nvar5 = var1[0]\nvar6 = sum(var1)\nvar3 = abs(2 * var5 - var6)\nfor i in range(1, var0 - 1):\n\tvar5 += var1[i]\n\tvar3 = min(var3, abs(2 * var5 - var6))\nprint(var3)"
    }
  },
  {
    "p_name": "p02784",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nwhile var0 > 0:\n\tvar0 -= var1\n\tvar2 += 1\nprint(var2)",
      "fixed_code": "var0, var3 = map(int, input().split())\nvar4 = list(map(int, input().split()))\nif var0 > sum(var4):\n\tprint('No')\nelse:\n\tprint('Yes')"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "def method0():\n\tvar0, var1 = [int(i) for i in input().split()]\n\tvar2 = ['0'] * var0\n\tvar2[0] = '0' if var0 == 1 else '1'\n\tvar3 = set([])\n\tfor i in range(var1):\n\t\tvar4, var5 = [int(var6) for var6 in input().split()]\n\t\tvar7 = var4 - 1\n\t\tif var7 == 0 and var5 == 0:\n\t\t\tvar2 = ['-1']\n\t\t\tbreak\n\t\tif var7 in var3 and str(var5) != var2[var7]:\n\t\t\tvar2 = ['-1']\n\t\t\tbreak\n\t\telse:\n\t\t\tvar2[var4 - 1] = str(var5)\n\t\t\tvar3.add(var4 - 1)\n\tprint(''.join(var2))\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "def method0():\n\tvar0, var1 = [int(i) for i in input().split()]\n\tvar2 = ['0'] * var0\n\tvar2[0] = '0' if var0 == 1 else '1'\n\tvar3 = set([])\n\tfor i in range(var1):\n\t\tvar4, var5 = [int(var6) for var6 in input().split()]\n\t\tvar7 = var4 - 1\n\t\tif var7 == 0 and var5 == 0 and (var0 != 1):\n\t\t\tvar2 = ['-1']\n\t\t\tbreak\n\t\tif var7 in var3 and str(var5) != var2[var7]:\n\t\t\tvar2 = ['-1']\n\t\t\tbreak\n\t\telse:\n\t\t\tvar2[var4 - 1] = str(var5)\n\t\t\tvar3.add(var4 - 1)\n\tprint(''.join(var2))\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p03075",
    "code": {
      "buggy_code": "var0 = [int(input()) for i in range(6)]\nvar1 = 'Yay!'\nvar2 = var0[0]\nfor i in range(1, 5):\n\tif var0[5] >= var2 - var0[i]:\n\t\tvar1 = ':('\n\t\tbreak\nprint(var1)",
      "fixed_code": "var0 = [int(input()) for i in range(6)]\nvar1 = 'Yay!'\nj = var0[4] - var0[0]\nif j > var0[5]:\n\tvar1 = ':('\nprint(var1)"
    }
  },
  {
    "p_name": "p02608",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nvar1 = 0\nvar2 = 0\nvar3 = 0\nfor i in range(1, var0 + 1):\n\tfor var4 in range(1, int(math.sqrt(var0) + 2)):\n\t\tvar2 = 4 * var4 * var4 - 4 * (3 * var4 * var4 - i)\n\t\tif var2 < 0:\n\t\t\tcontinue\n\t\tvar1 = (math.sqrt(var2) - 2 * var4) / 2\n\t\tif var1.is_integer():\n\t\t\tif var4 == int(var1) and int(var1) >= 1:\n\t\t\t\tvar3 += 1\n\t\t\t\tcontinue\n\t\t\telif int(var1) >= 1:\n\t\t\t\tvar3 += 3\n\t\t\t\tcontinue\n\t\telse:\n\t\t\tcontinue\n\tprint(var3)\n\tvar3 = 0",
      "fixed_code": "import math\nvar0 = int(input())\nvar1 = 0\nvar2 = 0\nvar3 = 0\nfor i in range(1, var0 + 1):\n\tfor var4 in range(1, int(math.sqrt(var0) + 1)):\n\t\tfor var5 in range(1, int(math.sqrt(var0) + 1)):\n\t\t\tvar2 = var4 * var4 + var5 * var5 + 2 * var4 * var5 - 4 * (var4 * var4 + var5 * var5 + var4 * var5 - i)\n\t\t\tif var2 < 0:\n\t\t\t\tcontinue\n\t\t\tvar1 = (math.sqrt(var2) - (var4 + var5)) / 2\n\t\t\tif var1.is_integer() and var1 >= 1:\n\t\t\t\tvar3 += 1\n\t\t\telse:\n\t\t\t\tcontinue\n\tprint(var3)\n\tvar3 = 0"
    }
  },
  {
    "p_name": "p02724",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 0\nvar2 = 0\nvar3 = 0\nvar4 = 0\nvar5 = 0\nwhile True:\n\tif var0 > 500:\n\t\tvar4 = var0 // 500\n\t\tvar6 = 500 * var4\n\t\tvar0 = var0 - var6\n\telif var0 > 5:\n\t\tvar5 = var0 // 5\n\t\tvar7 = 5 * var5\n\t\tvar0 = var0 - var7\n\telse:\n\t\tbreak\nvar1 = 1000 * var4 + 5 * var5\nprint(var1)",
      "fixed_code": "var0 = int(input())\nvar4 = 0\nvar6 = 0\nvar5 = 0\nvar7 = 0\nvar1 = 0\nif var0 >= 0 and var0 <= 10 ** 9:\n\twhile True:\n\t\tif var0 >= 500:\n\t\t\tvar4 = var0 // 500\n\t\t\tvar6 = 500 * var4\n\t\t\tvar0 = var0 - var6\n\t\telif var0 >= 5:\n\t\t\tvar5 = var0 // 5\n\t\t\tvar7 = 5 * var5\n\t\t\tvar0 = var0 - var7\n\t\telse:\n\t\t\tbreak\nvar8 = 1000 * var4\nvar9 = 5 * var5\nvar1 = var8 + var9\nprint(var1)"
    }
  },
  {
    "p_name": "p03250",
    "code": {
      "buggy_code": "var0, var1, var2 = sorted(map(int, input().split()))\nprint(var0 * 10 + var1 + var2)",
      "fixed_code": "var0, var1, var2 = sorted(map(int, input().split()))\nprint(var2 * 10 + var1 + var0)"
    }
  },
  {
    "p_name": "p03043",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nfor i in range(1, var0 + 1):\n\tvar3 = 1\n\tvar4 = i\n\twhile var4 > var1:\n\t\tvar4 *= 2\n\t\tvar3 /= 2\n\tvar2 += var3\nprint(var2 / var0)",
      "fixed_code": "import math\nvar0, var1 = map(int, input().split())\nif var1 == 1:\n\tprint(1)\nelse:\n\tvar5 = max(0, (var0 - (var1 - 1)) / var0)\n\tvar6 = 0\n\tfor i in range(1, min(var0 + 1, var1)):\n\t\tvar7 = math.log2(var1 / i)\n\t\tvar8 = math.ceil(var7)\n\t\tvar6 += (1 / 2) ** var8\n\tvar5 += var6 * (1 / var0)\n\tprint(var5)"
    }
  },
  {
    "p_name": "p03838",
    "code": {
      "buggy_code": "def method0():\n\t\n\tvar0, var1 = [int(var2) for var2 in input().split()]\n\tif abs(var0) == abs(var1):\n\t\tvar3 = 1\n\telif abs(var0) > abs(var1):\n\t\tif var0 < 0:\n\t\t\tvar3 = abs(var0) - abs(var1)\n\t\t\tif var1 < 0:\n\t\t\t\tpass\n\t\t\telse:\n\t\t\t\tvar3 += 1\n\t\telse:\n\t\t\tvar3 = 1\n\t\t\tvar3 += abs(var0) - abs(var1)\n\t\t\tif var1 < 0:\n\t\t\t\tvar3 += 1\n\t\t\telse:\n\t\t\t\tpass\n\telif var0 < 0:\n\t\tvar3 = 1\n\t\tvar3 += abs(var0) - abs(var1)\n\t\tif var1 > 0:\n\t\t\tpass\n\t\telse:\n\t\t\tvar3 += 1\n\telse:\n\t\tvar3 = abs(var0) - abs(var1)\n\t\tif var1 < 0:\n\t\t\tvar3 += 1\n\t\telse:\n\t\t\tpass\n\tprint(var3)\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "def method0():\n\t\n\tvar0, var1 = [int(var2) for var2 in input().split()]\n\tvar3 = 0\n\tif var0 < 0 and abs(var1) - abs(var0) >= 0:\n\t\tvar3 += 1\n\telif var0 > 0 and abs(var1) - abs(var0) <= 0:\n\t\tvar3 += 1\n\tvar3 += abs(abs(var0) - abs(var1))\n\tif var1 > 0 and abs(var1) - abs(var0) < 0:\n\t\tvar3 += 1\n\telif var1 < 0 and abs(var1) - abs(var0) > 0:\n\t\tvar3 += 1\n\tprint(var3)\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02571",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = input()\nfor i in range(len(var1)):\n\tif var0.find(var1[i:]) > -1 or var0.find(var1[0:len(var1) - i]) > -1:\n\t\tprint(i)\n\t\tbreak\n\telif i == len(var1) - 1:\n\t\tprint(len(var1))",
      "fixed_code": "var0 = input()\nvar1 = input()\nvar2 = len(var1)\nfor i in range(len(var0) - len(var1) + 1):\n\tvar3 = 0\n\tfor j in range(len(var1)):\n\t\tif var0[i + j] != var1[j]:\n\t\t\tvar3 = var3 + 1\n\tif var3 < var2:\n\t\tvar2 = var3\nprint(var2)"
    }
  },
  {
    "p_name": "p03838",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2, var3 = (var0, var1)\nvar4 = 0\n\ndef method0(var5):\n\tif var5 == 0:\n\t\treturn 0\n\telse:\n\t\treturn int(var5 / abs(var5))\nif abs(var0) > abs(var1):\n\tif var0 > 0:\n\t\tvar2 = -var2\n\t\tvar4 += 1\nelif var0 < 0:\n\tvar2 = -var2\n\tvar4 += 1\nvar4 += abs(abs(var0) - abs(var1))\nvar2 += var4\nif method0(var2) != method0(var1):\n\tvar4 += 1\nprint(var4)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2, var3 = (var0, var1)\nvar4 = 0\n\ndef method0(var5):\n\tif var5 == 0:\n\t\treturn 0\n\telse:\n\t\treturn int(var5 / abs(var5))\nif abs(var0) > abs(var1):\n\tif var0 > 0:\n\t\tvar2 = -var0\n\t\tvar4 += 1\nelif var0 < 0:\n\tvar2 = -var0\n\tvar4 += 1\nvar4 += abs(abs(var0) - abs(var1))\nvar2 += abs(abs(var0) - abs(var1))\nif method0(var2) != method0(var1):\n\tvar4 += 1\nprint(var4)"
    }
  },
  {
    "p_name": "p02971",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [0] * var0\nvar2 = 0\nvar3 = 0\nvar4 = 0\nfor i in range(var0):\n\tvar1[i] = int(input())\nfor i in range(var0):\n\tif var1[i] > var3:\n\t\tvar3 = var1[i]\n\t\tvar2 = i\nfor j in range(var0):\n\tif j != i:\n\t\tif var1[j] > var4:\n\t\t\tvar4 = var1[j]\nfor j in range(var0):\n\tif j == var2:\n\t\tvar3 = var4\n\tprint(var3)",
      "fixed_code": "var0 = int(input())\nvar1 = [int(input()) for i in range(var0)]\nvar2 = var1.index(var3(var1))\nvar5 = var3(var1)\nvar6 = sorted(var1)[-2]\nfor i in range(var0):\n\tif i == var2:\n\t\tprint(var6)\n\telse:\n\t\tprint(var5)"
    }
  },
  {
    "p_name": "p03069",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = str(input())\nvar2 = 0\nvar3 = 0\nvar4 = 0\nwhile var1[var4] == '.':\n\tvar4 += 1\n\tif var4 == var0:\n\t\tprint(0)\n\t\tbreak\nvar5 = var0\nif var4 != var0:\n\twhile var1[var5 - 1] == '#':\n\t\tvar5 -= 1\n\t\tif var5 == 0:\n\t\t\tprint(0)\n\t\t\tbreak\nif var4 != var0 and var5 != 0:\n\tvar1 = var1[var4:var5]\n\tfor i in range(len(var1)):\n\t\tif var1[i] == '#':\n\t\t\tvar3 += 1\n\t\telse:\n\t\t\tvar2 += 1\n\tprint(min(var2, var3))",
      "fixed_code": "var0 = int(input())\nvar1 = str(input())\nvar2 = var1.count('.')\nvar3 = 0\nvar6 = var1.count('.')\nfor i in range(var0):\n\tif var1[i] == '.':\n\t\tvar2 -= 1\n\telse:\n\t\tvar3 += 1\n\tvar6 = min(var6, var2 + var3)\nprint(var6)"
    }
  },
  {
    "p_name": "p02712",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(range(var0 + 1))\nvar2 = sum(var1)\nvar3 = var0 // 3\nvar4 = list(range(var3 + 1))\nvar5 = 3 * sum(var4)\nvar6 = var0 // 5\nvar7 = list(range(var6 + 1))\nvar8 = 5 * sum(var7)\nvar9 = var0 // 15\nvar10 = list(range(var9 + 1))\nvar11 = 15 * sum(var10)\nprint(var2, var5, var8, var11)\nprint(var2 - var5 - var8 + var11)",
      "fixed_code": "var0 = int(input())\nvar1 = list(range(var0 + 1))\nvar2 = sum(var1)\nvar3 = var0 // 3\nvar4 = list(range(var3 + 1))\nvar5 = 3 * sum(var4)\nvar6 = var0 // 5\nvar7 = list(range(var6 + 1))\nvar8 = 5 * sum(var7)\nvar9 = var0 // 15\nvar10 = list(range(var9 + 1))\nvar11 = 15 * sum(var10)\nprint(var2 - var5 - var8 + var11)"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = [list(map(int, input().split())) for i in range(var1)]\nvar3 = [0] * var0\nvar4 = True\nfor i in range(var1):\n\tif var2[i][0] == 1 and var2[i][1] == 0:\n\t\tvar4 = False\n\t\tbreak\n\tif var3[var2[i][0] - 1] != 0:\n\t\tif var3[var2[i][0] - 1] == var2[i][1]:\n\t\t\tcontinue\n\t\telse:\n\t\t\tvar4 = False\n\t\t\tbreak\n\telse:\n\t\tvar3[var2[i][0] - 1] = var2[i][1]\nif var3[0] == 0:\n\tvar3[0] = 1\nif var4:\n\tprint(*var3)\nelse:\n\tprint('-1')",
      "fixed_code": "var5, var6 = map(int, input().split())\nvar7 = [tuple(map(int, input().split())) for _ in range(var6)]\nvar4 = 10 ** (var5 - 1) if var5 != 1 else 0\nwhile var4 < 10 ** var5:\n\tfor var8, var9 in var7:\n\t\tif str(var4)[var8 - 1] == str(var9):\n\t\t\tcontinue\n\t\telse:\n\t\t\tbreak\n\telse:\n\t\tprint(var4)\n\t\tbreak\n\tvar4 += 1\nelse:\n\tprint(-1)"
    }
  },
  {
    "p_name": "p03086",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 0\nvar2 = 0\nfor var3 in var0:\n\tif var3 == 'A' or var3 == 'C' or var3 == 'G' or (var3 == 'T'):\n\t\tvar2 += 1\n\telse:\n\t\tif var1 < var2:\n\t\t\tvar1 = var2\n\t\tvar2 = 0\nprint(var1)",
      "fixed_code": "var0 = input()\nvar1 = 0\nvar2 = 0\nfor var3 in var0:\n\tif var3 == 'A' or var3 == 'C' or var3 == 'G' or (var3 == 'T'):\n\t\tvar2 += 1\n\telse:\n\t\tif var1 < var2:\n\t\t\tvar1 = var2\n\t\tvar2 = 0\nif var1 < var2:\n\tvar1 = var2\nprint(var1)"
    }
  },
  {
    "p_name": "p02725",
    "code": {
      "buggy_code": "k, var0 = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = k\nfor i in range(var0):\n\tif i == 0:\n\t\tvar3 = var1[-1] - var1[0]\n\telse:\n\t\tvar3 = k - var1[i] + var1[i - 1]\n\tif var3 < var2:\n\t\tvar2 = var3\n\tprint(var2)\nprint(var2)",
      "fixed_code": "k, var0 = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = k\nfor i in range(var0):\n\tif i == 0:\n\t\tvar3 = var1[-1] - var1[0]\n\telse:\n\t\tvar3 = k - var1[i] + var1[i - 1]\n\tif var3 < var2:\n\t\tvar2 = var3\nprint(var2)"
    }
  },
  {
    "p_name": "p03861",
    "code": {
      "buggy_code": "var0, var1, var2 = list(map(int, input().split()))\nif var1 < var2:\n\tprint(0)\n\texit()\nif var2 == 1:\n\tprint(var1 - var0 + 1)\n\texit()\nvar0 = max(var0, var2)\nif var0 % var2 == 0:\n\tvar0 += 1\nelse:\n\tvar0 += 1 + var0 % var2\nprint(1 + (var1 - var0 + 1) // var2)",
      "fixed_code": "var0, var1, var2 = list(map(int, input().split()))\n\ndef method0(var3, var2):\n\tif var3 == -1:\n\t\treturn 0\n\treturn var3 // var2 + 1\nprint(method0(var1, var2) - method0(var0 - 1, var2))"
    }
  },
  {
    "p_name": "p03377",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nif var0 > var2:\n\tprint('No')\nelif var0 + var1 >= var2:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nif var0 > var2:\n\tprint('NO')\nelif var0 + var1 >= var2:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p03309",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = var5(map(int, input().split()))\nfor i in range(var0):\n\tvar1[i] = var1[i] - i\nvar2 = 0\nfor i in range(var0):\n\tvar2 = var2 + var1[i]\nvar3 = int(var2 / var0)\nvar4 = 0\nvar5 = []\nfor j in range(-2, 2):\n\tfor i in range(var0):\n\t\tvar4 = var4 + abs(var1[i] - var3 + j)\n\tvar5.append(var4)\n\tvar4 = 0\nprint(min(var5))",
      "fixed_code": "var0 = int(input())\nvar1 = var5(map(int, input().split()))\nfor i in range(var0):\n\tvar1[i] = var1[i] - i - 1\nvar1 = sorted(var1)\nvar6 = var0 // 2\nvar4 = 0\nfor i in range(var0):\n\tvar4 = var4 + abs(var1[i] - var1[var6])\nprint(var4)"
    }
  },
  {
    "p_name": "p02613",
    "code": {
      "buggy_code": "import sys, bisect, math, itertools, heapq, collections\nfrom operator import itemgetter\nfrom functools import lru_cache\nsys.setrecursionlimit(10 ** 8)\ninput = sys.stdin.readline\nvar0 = float('inf')\nvar1 = 10 ** 9 + 7\nvar2 = 10 ** (-7)\n\ndef method0():\n\t\n\treturn int(input())\n\ndef method1():\n\t\n\treturn list(map(int, input().split()))\n\ndef method2():\n\t\n\treturn list(input()[:-1])\nvar3 = method0()\nvar4 = {'AC': 0, 'WA': 0, 'TLE': 0, 'RE': 0}\nfor var5 in range(var3):\n\tvar6 = input()[:-1]\n\tprint(var6)\n\tvar4[var6] += 1\nprint('AC x {}'.format(var4['AC']))\nprint('WA x {}'.format(var4['WA']))\nprint('TLE x {}'.format(var4['TLE']))\nprint('RE x {}'.format(var4['RE']))",
      "fixed_code": "import sys, bisect, math, itertools, heapq, collections\nfrom operator import itemgetter\nfrom functools import lru_cache\nsys.setrecursionlimit(10 ** 8)\ninput = sys.stdin.readline\nvar0 = float('inf')\nvar1 = 10 ** 9 + 7\nvar2 = 10 ** (-7)\n\ndef method0():\n\t\n\treturn int(input())\n\ndef method1():\n\t\n\treturn list(map(int, input().split()))\n\ndef method2():\n\t\n\treturn list(input()[:-1])\nvar3 = method0()\nvar4 = {'AC': 0, 'WA': 0, 'TLE': 0, 'RE': 0}\nfor var5 in range(var3):\n\tvar6 = input()[:-1]\n\tvar4[var6] += 1\nprint('AC x {}'.format(var4['AC']))\nprint('WA x {}'.format(var4['WA']))\nprint('TLE x {}'.format(var4['TLE']))\nprint('RE x {}'.format(var4['RE']))"
    }
  },
  {
    "p_name": "p03767",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar1.sort()\nprint(sum(var1[var0:2 * var0]))",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar1 = sorted(var1, var2=True)\nvar3 = 0\nfor i in range(2 * var0):\n\tif i % 2 == 1:\n\t\tvar3 += var1[i]\nprint(var3)"
    }
  },
  {
    "p_name": "p02730",
    "code": {
      "buggy_code": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 6)\n\ndef method0():\n\treturn int(input())\n\ndef method1():\n\treturn list(map(int, input().split()))\n\ndef method2():\n\tvar0 = input()\n\treturn list(var0[:len(var0) - 1])\n\ndef method3():\n\treturn map(int, input().split())\nvar1 = method2()\n\ndef method4(var1):\n\ti = 0\n\tj = len(var1) - 1\n\twhile i < j:\n\t\tif var1[i] != var1[j]:\n\t\t\treturn False\n\t\ti += 1\n\t\tj -= 1\n\treturn True\nvar2 = len(var1)\nif var2 % 2 == 0:\n\tprint('NO')\nelif method4(var1) and method4(var1[:var2 // 2]):\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 6)\n\ndef method0():\n\treturn int(input())\n\ndef method1():\n\treturn list(map(int, input().split()))\n\ndef method2():\n\tvar0 = input()\n\treturn list(var0[:len(var0) - 1])\n\ndef method3():\n\treturn map(int, input().split())\nvar1 = method2()\n\ndef method4(var1):\n\ti = 0\n\tj = len(var1) - 1\n\twhile i < j:\n\t\tif var1[i] != var1[j]:\n\t\t\treturn False\n\t\ti += 1\n\t\tj -= 1\n\treturn True\nvar2 = len(var1)\nif var2 % 2 == 0:\n\tprint('No')\nelif method4(var1) and method4(var1[:var2 // 2]):\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p04045",
    "code": {
      "buggy_code": "def method0():\n\tvar0, var1 = map(str, input().split())\n\tvar2 = set([int(i) for i in input().split()])\n\tvar3 = sorted(list(set(range(0, 10)) - var2))\n\tif var0[0] in var3:\n\t\tvar4 = var0[0]\n\telif var0[0] not in var3 and min(var3) is not 0:\n\t\tvar4 = str(min(var3))\n\telse:\n\t\tvar4 = str(min(var3[1:]))\n\tfor var5 in range(len(var0) - 1):\n\t\tvar4 += str(min(var3))\n\tif var4 <= var0:\n\t\tvar4 += str(min(var3))\n\treturn var4\nif __name__ == '__main__':\n\tprint(method0())",
      "fixed_code": "def method0():\n\tvar0, var1 = map(int, input().split())\n\tvar2 = set([int(i) for i in input().split()])\n\tvar3 = list(set(range(0, 10)) - var2)\n\tvar4 = 0\n\twhile True:\n\t\tif all(map(lambda var6: int(var6) in var3, [int(str(var4)[i]) for i in range(len(str(var4)))])) and var4 >= var0:\n\t\t\treturn var4\n\t\tvar4 += 1\nif __name__ == '__main__':\n\tprint(method0())"
    }
  },
  {
    "p_name": "p03329",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 0\n\ndef method0(var1, var0):\n\tvar2 = 1\n\tvar3 = 1\n\twhile var0 >= 9 ** var2:\n\t\tvar2 += 1\n\tvar2 -= 1\n\twhile var0 >= 6 ** var3:\n\t\tvar3 += 1\n\tvar3 -= 1\n\tif var2 == 0 and var3 == 0:\n\t\tvar1 += var0\n\t\treturn print(var1)\n\telse:\n\t\tvar0 = var0 - max(9 ** var2, 6 ** var3)\n\t\tvar1 += 1\n\t\tprint(max(9 ** var2, 6 ** var3), var0)\n\t\tmethod0(var1, var0)\nmethod0(var1, var0)",
      "fixed_code": "var4 = int(input())\nvar5 = [float('inf')] * 100010\nvar5[0] = 0\nvar6 = [1, 6, 36, 216, 1296, 7776, 46656, 9, 81, 729, 6561, 59049]\nfor i in range(var4 + 1):\n\tfor var7 in var6:\n\t\tvar5[i] = min(var5[i], var5[i - var7] + 1)\nprint(var5[var4])"
    }
  },
  {
    "p_name": "p02754",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = var0 // (var1 + var2)\nvar4 = var0 % (var1 + var2)\nprint(var3 * var1 + var4)",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = var0 // (var1 + var2)\nvar4 = var0 % (var1 + var2)\nif var4 < var1:\n\tprint(var3 * var1 + var4)\nelse:\n\tprint(var3 * var1 + var1)"
    }
  },
  {
    "p_name": "p02711",
    "code": {
      "buggy_code": "var0 = str(input())\nif var0[0] or var0[1] or var0[2] == 7:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = str(input())\nif var0[0] == '7' or var0[1] == '7' or var0[2] == '7':\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03220",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1, var2 = [int(var3) for var3 in input().rstrip().split()]\nvar4 = [int(var3) for var3 in input().rstrip().split()]\nvar5 = [var1 - var6 * 0.006 for var6 in var4]\nvar7 = []\nfor var8 in range(var0):\n\tif var7:\n\t\tif abs(var2 - var5[var8]) <= var7[-1]:\n\t\t\tvar9 = var8\n\telse:\n\t\tvar9 = var8\n\tvar7.append(abs(var2 - var5[var8]))\nprint(var9 + 1)",
      "fixed_code": "var0 = int(input())\nvar1, var2 = [int(var3) for var3 in input().rstrip().split()]\nvar4 = [int(var3) for var3 in input().rstrip().split()]\nvar5 = [var1 - var6 * 0.006 for var6 in var4]\nvar7 = [abs(var2 - var5[0])]\nvar10 = var7[0]\nvar9 = 0\nfor var8 in range(1, var0):\n\tvar11 = abs(var2 - var5[var8])\n\tif var11 < var10:\n\t\tvar9 = var8\n\t\tvar10 = var11\n\tvar7.append(var11)\nprint(var9 + 1)"
    }
  },
  {
    "p_name": "p03042",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = int(var0[:2])\nvar2 = int(var0[2:])\nif var1 > 12:\n\tif var2 > 12 or var2 == 0:\n\t\tprint('NA')\n\telse:\n\t\tprint('YYMM')\nelif var1 == 0 and var2 > 12 or (var1 == 0 and var2 == 0):\n\tprint('NA')\nelif var2 > 12:\n\tprint('MMYY')\nelse:\n\tprint('AMBIGUOUS')",
      "fixed_code": "var0 = input()\nvar1 = int(var0[:2])\nvar2 = int(var0[2:])\nif var1 > 12:\n\tif var2 > 12 or var2 == 0:\n\t\tprint('NA')\n\telse:\n\t\tprint('YYMM')\nelif var1 <= 12 and var1 > 0:\n\tif var2 > 12 or var2 == 0:\n\t\tprint('MMYY')\n\telse:\n\t\tprint('AMBIGUOUS')\nelif var1 == 0:\n\tif var2 > 12 or var2 == 0:\n\t\tprint('NA')\n\telse:\n\t\tprint('YYMM')"
    }
  },
  {
    "p_name": "p03137",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = sorted(list(map(int, input().split())))\nvar3 = [None] * (var1 - 1)\nfor i in range(var1 - 1):\n\tvar3[i] = var2[i + 1] - var2[i]\nprint(sum(sorted(var3)[0:len(var3) - var0 + 1]))",
      "fixed_code": "import math\nimport sys\nimport collections\nimport bisect\n\ndef method0():\n\tvar0, var1 = map(int, input().split())\n\tvar2 = sorted(list(map(int, input().split())))\n\tif var1 <= var0:\n\t\tprint(0)\n\t\treturn\n\tvar3 = sorted([var2[i + 1] - var2[i] for i in range(var1 - 1)])\n\tprint(sum(var3[0:var1 - var0]))\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02952",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = var0\nvar2 = 0\nwhile var1 > 0:\n\tvar1 = var1 // 10\n\tvar2 = var2 + 1\nif var2 == 1:\n\tprint(var0)\nelif var2 == 2:\n\tprint(9)\nelif var2 == 3:\n\tprint(9 + (var0 - 100) + 1)\nelif var2 == 4:\n\tprint(909)\nelif var2 == 5:\n\tprint(908 + (var0 - 10000) + 1)\nelse:\n\tprint(90909)",
      "fixed_code": "var0 = int(input())\nvar1 = var0\nvar2 = 0\nwhile var1 > 0:\n\tvar1 = var1 // 10\n\tvar2 = var2 + 1\nif var2 == 1:\n\tprint(var0)\nelif var2 == 2:\n\tprint(9)\nelif var2 == 3:\n\tprint(9 + (var0 - 100) + 1)\nelif var2 == 4:\n\tprint(909)\nelif var2 == 5:\n\tprint(909 + (var0 - 10000) + 1)\nelse:\n\tprint(90909)"
    }
  },
  {
    "p_name": "p02641",
    "code": {
      "buggy_code": "import bisect\nvar0, var1 = map(int, input().split())\nif var1 == 0:\n\tprint(var0)\n\texit()\nvar2 = list(map(int, input().split()))\nvar3 = []\nfor i in range(101):\n\tif i in var2:\n\t\tcontinue\n\tvar3.append(i)\nvar4 = bisect.bisect_left(var3, var0)\nif var4 == 0:\n\tprint(var3[0])\n\texit()\nelif var4 == len(var3):\n\tprint(var3[-1])\n\texit()\nvar5 = var3[var4]\nvar6 = var3[var4 - 1]\nif abs(var5 - var0) < abs(var6 - var0):\n\tprint(var5)\nelse:\n\tprint(var6)",
      "fixed_code": "import bisect\nvar0, var1 = map(int, input().split())\nif var1 == 0:\n\tprint(var0)\n\texit()\nvar2 = list(map(int, input().split()))\nvar3 = []\nfor i in range(102):\n\tif i in var2:\n\t\tcontinue\n\tvar3.append(i)\nvar4 = bisect.bisect_left(var3, var0)\nif var4 == 0:\n\tprint(var3[0])\n\texit()\nelif var4 == len(var3):\n\tprint(var3[-1])\n\texit()\nvar5 = var3[var4]\nvar6 = var3[var4 - 1]\nif abs(var5 - var0) < abs(var6 - var0):\n\tprint(var5)\nelif abs(var5 - var0) > abs(var6 - var0):\n\tprint(var6)\nelse:\n\tprint(var6)"
    }
  },
  {
    "p_name": "p02664",
    "code": {
      "buggy_code": "var0 = list(input())\nfor i in range(1, len(var0)):\n\tif var0[i] == '?':\n\t\tvar0[i] = 'D'\nprint(''.join(var0))",
      "fixed_code": "var0 = list(input())\nfor i in range(len(var0)):\n\tif var0[i] == '?':\n\t\tvar0[i] = 'D'\nprint(''.join(var0))"
    }
  },
  {
    "p_name": "p03448",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = int(input())\nvar2 = int(input())\nvar3 = int(input())\nvar4 = 0\nfor var5 in range(var0 + 1):\n\tfor var6 in range(var1 + 1):\n\t\tfor var7 in range(var2 + 1):\n\t\t\tvar8 = 500 * var5 + 100 * var6 + 50 * var7\n\t\t\tif var8 == var3:\n\t\t\t\tvar4 += 1",
      "fixed_code": "var0 = int(input())\nvar1 = int(input())\nvar2 = int(input())\nvar3 = int(input())\nvar4 = 0\nfor var5 in range(var0 + 1):\n\tfor var6 in range(var1 + 1):\n\t\tfor var7 in range(var2 + 1):\n\t\t\tvar8 = 500 * var5 + 100 * var6 + 50 * var7\n\t\t\tif var8 == var3:\n\t\t\t\tvar4 += 1\nprint(var4)"
    }
  },
  {
    "p_name": "p02953",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 1\nfor i in range(1, var0 - 1, 1):\n\tif (var1[i - 1] - var1[i] == 1) & (var1[i] - var1[i + 1] == 0):\n\t\tcontinue\n\telif (var1[i - 1] - var1[i] <= 0) & (var1[i] - var1[i + 1] <= 1):\n\t\tcontinue\n\telse:\n\t\tprint('No')\n\t\tvar2 = -1\n\t\tbreak\nif var2 == 1:\n\tprint('Yes')",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 1\nfor i in reversed(range(1, var0, 1)):\n\tif var1[i - 1] - var1[i] == 1:\n\t\tvar1[i - 1] -= 1\n\tif var1[i - 1] - var1[i] > 1:\n\t\tprint('No')\n\t\tvar2 = -1\n\t\tbreak\nif var2 == 1:\n\tprint('Yes')"
    }
  },
  {
    "p_name": "p03086",
    "code": {
      "buggy_code": "var0 = list(input())\nvar1 = 0\nfor i in range(len(var0)):\n\tif var0[i] == 'A' or var0[i] == 'C' or var0[i] == 'G' or (var0[i] == 'T'):\n\t\tfor j in range(i + 1, len(var0)):\n\t\t\tif var0[j] != 'A' and var0[j] != 'C' and (var0[j] != 'G') and (var0[j] != 'T'):\n\t\t\t\tprint('{},{}'.format(i, j))\n\t\t\t\tvar1 = max(var1, j - i)\n\t\t\t\ti = j\n\t\t\t\tbreak\nprint(var1)",
      "fixed_code": "var0 = input()\nvar1 = 0\nvar2 = 0\nfor i in var0:\n\tif i in ['A', 'C', 'G', 'T']:\n\t\tvar2 += 1\n\t\tvar1 = max(var1, var2)\n\telse:\n\t\tvar2 = 0\nprint(var1)"
    }
  },
  {
    "p_name": "p03957",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 'ABDEGHIJKLMNOPQRSTUVWXYZ'\nfor var2 in var1:\n\tvar0 = var0.replace(var2, '')\nif 'CF' in var0:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "import re\nvar0 = input()\nprint('No' if re.search('C.*F', var0) is None else 'Yes')"
    }
  },
  {
    "p_name": "p02922",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nwhile True:\n\tvar2 += 1\n\tvar0 *= var2\n\tif var0 >= var1:\n\t\tbreak\nprint(var2)",
      "fixed_code": "import sys\nvar0, var1 = map(int, input().split())\nvar2 = 0\nvar3 = 1\nwhile var3 < var1:\n\tvar3 -= 1\n\tvar3 += var0\n\tvar2 += 1\nprint(var2)"
    }
  },
  {
    "p_name": "p02836",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 0\nfor i in range(len(var0) // 2):\n\tif var0[i] != var0[-i]:\n\t\tvar1 += 1\nprint(var1)",
      "fixed_code": "var0 = input()\nvar1 = 0\nfor i in range(len(var0) // 2):\n\tif var0[i] != var0[-i - 1]:\n\t\tvar1 += 1\nprint(var1)"
    }
  },
  {
    "p_name": "p02640",
    "code": {
      "buggy_code": "var0 = input().split(' ')\nvar1 = int(var0[0])\nvar2 = int(var0[1])\nvar3 = 0\nfor i in range(var1):\n\tvar4 = 2 * (var1 - i)\n\tvar5 = 4 * i\n\tif var4 + var5 == var2:\n\t\tprint('Yes')\n\t\tbreak\n\telse:\n\t\tvar3 += 1\n\t\tif var3 == var1:\n\t\t\tprint('No')",
      "fixed_code": "var0 = input().split(' ')\nvar1 = int(var0[0])\nvar2 = int(var0[1])\nvar6 = 'No'\nfor i in range(var1 + 1):\n\tvar4 = 2 * (var1 - i)\n\tvar5 = 4 * i\n\tif var4 + var5 == var2:\n\t\tvar6 = 'Yes'\n\t\tbreak\nprint(var6)"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split(' '))\nvar2 = []\nif var0 % 2019 == 0 or var1 % 2019 == 0:\n\tprint('0')\n\texit()\nvar3, var4 = (var0, var1)\nfor i in range(var0, var1 + 1):\n\tvar5 = i % 2019\n\tif var3 > var5:\n\t\tvar3 = var4\n\t\tvar4 = var5\nprint('{}'.format(var3 * var4 % 2019))",
      "fixed_code": "var0, var1 = map(int, input().split(' '))\nvar6 = 0\nvar7 = 2020\nfor i in range(var0, var1):\n\tfor j in range(i + 1, var1 + 1):\n\t\tvar8 = i * j % 2019\n\t\tif var8 == 0:\n\t\t\tprint('0')\n\t\t\texit()\n\t\tif var8 < var7:\n\t\t\tvar7 = var8\nprint(var7)"
    }
  },
  {
    "p_name": "p03623",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nprint(min(abs(var0 - var1), abs(var0 - var2)))",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nprint('AB'[abs(var0 - var1) > abs(var0 - var2)::2])"
    }
  },
  {
    "p_name": "p02640",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split()))\nvar2 = var1 / 2 - var0\nif var2 % 2 != 0:\n\tprint('No')\nelif var2 <= var0:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1 = list(map(int, input().split()))\nvar2 = var1 / 2 - var0\nif var1 % 2 == 0 and 0 <= var2 <= var0:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03719",
    "code": {
      "buggy_code": "var0, var1, var2 = input().split()\nif var0 <= var2 and var1 >= var2:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nif var0 <= var2 and var2 <= var1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02747",
    "code": {
      "buggy_code": "import re\nvar0 = re.compile('(hi)+')\nvar1 = input()\nprint('YES' if var0.fullmatch(var1) else 'NO')",
      "fixed_code": "import re\nvar0 = re.compile('(hi)+')\nvar1 = input()\nprint('Yes' if var0.fullmatch(var1) else 'No')"
    }
  },
  {
    "p_name": "p03262",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = [abs(var1 - i) for i in var2]\nprint(min(var3))",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar4 = [abs(var1 - i) for i in var2]\n\ndef method0(var5, var6):\n\tif var6 == 0:\n\t\treturn var5\n\treturn method0(var6, var5 % var6)\nif var0 == 1:\n\tprint(var4[0])\nelse:\n\tvar7 = method0(var4[0], var4[1])\n\tif var0 == 2:\n\t\tprint(var7)\n\telse:\n\t\tfor i in range(2, var0):\n\t\t\tvar7 = method0(var7, var4[i])\n\t\tprint(var7)"
    }
  },
  {
    "p_name": "p02910",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 'Yes'\nfor i in range(1, len(var0) + 1):\n\tprint(i)\n\tif i % 2 == 0 and var0[i - 1] == 'R' or (i % 2 == 1 and var0[i - 1] == 'L'):\n\t\tvar1 = 'No'\n\t\tbreak\nprint(var1)",
      "fixed_code": "var0 = input()\nk = 'Yes'\nfor i in range(len(var0)):\n\tif i % 2 == 0:\n\t\tif var0[i] == 'L':\n\t\t\tk = 'No'\n\t\t\tbreak\n\telif var0[i] == 'R':\n\t\tk = 'No'\n\t\tbreak\nprint(k)"
    }
  },
  {
    "p_name": "p03317",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = [int(var3) for var3 in input().split()]\nvar4 = 0\nwhile var0 > 0:\n\tvar4 += 1\n\tvar0 -= var1 - 1\nprint(var4)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = [int(var3) for var3 in input().split()]\nvar4 = 0\nwhile var0 > 1:\n\tvar4 += 1\n\tvar0 -= var1 - 1\nprint(var4)"
    }
  },
  {
    "p_name": "p02993",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = input()\nprint('Bad' if var0 == var1 or var1 == var2 or var2 == var3 else 'Yes')",
      "fixed_code": "var0, var1, var2, var3 = input()\nprint('Bad' if var0 == var1 or var1 == var2 or var2 == var3 else 'Good')"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "import sys\n\ndef input():\n\treturn sys.stdin.readline().strip()\n\ndef method0():\n\n\tdef method1():\n\t\tvar0, var1 = map(int, input().split())\n\t\tvar2 = [list(map(int, input().split())) for i in range(var1)]\n\t\tif var0 == 1 and var1 == 0:\n\t\t\tprint(0)\n\t\telse:\n\t\t\tfor i in range(10 ** (var0 - 1), 10 ** var0):\n\t\t\t\tvar3 = True\n\t\t\t\tfor var4, var5 in var2:\n\t\t\t\t\tvar6 = str(i)\n\t\t\t\t\tif int(var6[var4 - 1]) != var5:\n\t\t\t\t\t\tvar3 = False\n\t\t\t\t\t\tbreak\n\t\t\t\tif var3:\n\t\t\t\t\treturn i\n\t\t\treturn -1\n\tprint(method1())\nmethod0()",
      "fixed_code": "import sys\n\ndef input():\n\treturn sys.stdin.readline().strip()\n\ndef method0():\n\n\tdef method1():\n\t\tvar0, var1 = map(int, input().split())\n\t\tvar2 = [list(map(int, input().split())) for i in range(var1)]\n\t\tfor i in range(10 ** var0):\n\t\t\tvar3 = True\n\t\t\tvar7 = str(i)\n\t\t\tif len(var7) != var0:\n\t\t\t\tcontinue\n\t\t\tfor var4, var5 in var2:\n\t\t\t\tif int(var7[var4 - 1]) != var5:\n\t\t\t\t\tvar3 = False\n\t\t\t\t\tbreak\n\t\t\tif var3:\n\t\t\t\treturn i\n\t\treturn -1\n\tprint(method1())\nmethod0()"
    }
  },
  {
    "p_name": "p03778",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nif var1 + var0 >= var2 and var1 < var2:\n\tprint(0)\nelif var1 >= var2 + var0 and var1 > var2:\n\tprint(var1 - (var2 + var0))\nelse:\n\tprint(var2 - (var1 + var0))",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nif var1 + var0 >= var2 and var1 <= var2:\n\tprint(0)\nelif var1 >= var2 + var0 and var1 > var2:\n\tprint(var1 - (var2 + var0))\nelse:\n\tprint(var2 - (var1 + var0))"
    }
  },
  {
    "p_name": "p02682",
    "code": {
      "buggy_code": "var0 = input()\nvar1, var2, var3, var4 = map(int, var0.split())\nif var1 >= var4:\n\tprint(var1)\nelif var1 + var2 >= var4 > var1:\n\tprint(var1)\nelse:\n\tprint(2 * var1 + var2 + var3 - var4)",
      "fixed_code": "var0 = input()\nvar1, var2, var3, var4 = map(int, var0.split())\nif var1 >= var4:\n\tprint(var4)\nelif var1 + var2 >= var4 > var1:\n\tprint(var1)\nelse:\n\tprint(2 * var1 + var2 - var4)"
    }
  },
  {
    "p_name": "p02633",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 360 // var0\nvar2 = 360 % var0\nif var2 > 0:\n\tprint(var1 * var2)\nelse:\n\tprint(var1)",
      "fixed_code": "var0 = int(input())\nvar3 = 0\nvar4 = 0\nwhile True:\n\tvar3 += var0\n\tvar3 %= 360\n\tvar4 += 1\n\tif var3 == 0:\n\t\tbreak\nprint(var4)"
    }
  },
  {
    "p_name": "p03317",
    "code": {
      "buggy_code": "import math\nvar0, k = map(int, input().split())\nvar1 = list(map(int, input().split()))\ni = var1.index(1)\nif i + 1 < k or var0 - i < k:\n\tprint(math.ceil((var0 - k) / (k - 1)) + 1)\nelse:\n\tprint(math.ceil(i / (k - 1)) + math.ceil((var0 - i - 1) / (k - 1)))",
      "fixed_code": "import math\nvar0, k = map(int, input().split())\nvar1 = list(map(int, input().split()))\nprint(math.ceil((var0 - 1) / (k - 1)))"
    }
  },
  {
    "p_name": "p02582",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 0\nvar2 = 0\nfor i in range(len(var0)):\n\tif var0[i] == 'R':\n\t\tvar1 += 1\n\telse:\n\t\tif var1 > var2:\n\t\t\tvar2 = var1\n\t\tvar1 = 0\nprint(var2)",
      "fixed_code": "var0 = input()\nvar1 = 0\nvar2 = 0\nfor i in range(len(var0)):\n\tif var0[i] == 'R':\n\t\tvar1 += 1\n\telse:\n\t\tif var1 > var2:\n\t\t\tvar2 = var1\n\t\tvar1 = 0\nif var1 > var2:\n\tvar2 = var1\nprint(var2)"
    }
  },
  {
    "p_name": "p02765",
    "code": {
      "buggy_code": "var0 = list(map(int, input().split()))\nif var0[0] < 10:\n\tprint(100 * (10 - var0[0]))\nelse:\n\tprint(var0[1])",
      "fixed_code": "var0 = list(map(int, input().split()))\nif var0[0] < 10:\n\tprint(100 * (10 - var0[0]) + var0[1])\nelse:\n\tprint(var0[1])"
    }
  },
  {
    "p_name": "p02866",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = min(var1)\nvar3 = max(var1)\nvar4 = 1\nif var2 == var3:\n\tprint(0)\nelse:\n\tfor i in range(var2 + 1, var3 + 1):\n\t\tvar5 = var1.count(i - 1)\n\t\tvar6 = var1.count(i)\n\t\tvar4 *= var5 ** var6\n\tprint(var4)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar7 = max(var1)\nvar8 = [0] * var0\nvar9 = 1\nif var1[0] != 0:\n\tprint(0)\n\texit()\nfor var10 in var1:\n\tvar8[var10] += 1\nif var8[0] != 1:\n\tprint(0)\n\texit()\nfor i in range(var7):\n\tvar9 = var9 * var8[i] ** var8[i + 1]\n\tvar9 = var9 % 998244353\nprint(var9)"
    }
  },
  {
    "p_name": "p03289",
    "code": {
      "buggy_code": "var0 = input()\nif var0[0] == 'A' and var0[2:-1].count('C') == 1:\n\tif var0[1:].replace('C', '').islower:\n\t\tprint('AC')\n\telse:\n\t\tprint('WA')\nelse:\n\tprint('WA')",
      "fixed_code": "var0 = input()\nif var0[0] == 'A' and var0[2:-1].count('C') == 1 and var0[1:].replace('C', '').islower():\n\tprint('AC')\nelse:\n\tprint('WA')"
    }
  },
  {
    "p_name": "p04045",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = []\nfor i in range(10):\n\tif i not in var2:\n\t\tvar3.append(i)\nvar4 = var0 * 10\nfor var5 in map(str, var3):\n\tfor var6 in map(str, var3):\n\t\tfor var7 in map(str, var3):\n\t\t\tfor var8 in map(str, var3):\n\t\t\t\tvar9 = int(var5 + var6 + var7 + var8)\n\t\t\t\tif var9 >= var0:\n\t\t\t\t\tvar4 = min(var4, var9)\nprint(var4)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(str, input().split()))\nfor var9 in range(var0, 10 * var0 + 1):\n\tvar10 = list(str(var9))\n\tvar11 = 0\n\tfor var12 in var10:\n\t\tif var12 in var2:\n\t\t\tvar11 += 1\n\tif var11 == 0 and int(var9) >= var0:\n\t\tprint(var9)\n\t\texit()"
    }
  },
  {
    "p_name": "p02945",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split(' '))\nif var0 >= 0 and var1 >= 0:\n\tprint(var0 + var1)\nelif var0 <= 0 and var1 > 0:\n\tprint(var0 - var1)\nelse:\n\tprint(var0 * var1)",
      "fixed_code": "var0, var1 = map(int, input().split(' '))\nvar2 = var0 + var1\nvar3 = var0 - var1\nvar4 = var0 * var1\nif var3 >= var2 and var3 >= var4:\n\tprint(var3)\nelif var2 >= var3 and var2 >= var4:\n\tprint(var2)\nelse:\n\tprint(var4)"
    }
  },
  {
    "p_name": "p02612",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = var0 // 1000\nprint((var1 + 1) * 1000 - var0)",
      "fixed_code": "var0 = int(input())\nvar1 = var0 // 1000\nif var0 % 1000 != 0:\n\tprint((var1 + 1) * 1000 - var0)\nelse:\n\tprint(0)"
    }
  },
  {
    "p_name": "p03835",
    "code": {
      "buggy_code": "k, var0 = map(int, input().split())\nvar1 = []\nfor var2 in range(k + 1):\n\tfor var3 in range(var2, k + 1):\n\t\tif 0 <= var0 - var2 - var3 <= k:\n\t\t\tvar1.append((var2, var3, var0 - var2 - var3))\nprint(var1)",
      "fixed_code": "k, var0 = map(int, input().split())\nvar1 = 0\nfor var2 in range(k + 1):\n\tfor var3 in range(k + 1):\n\t\tif 0 <= var0 - var2 - var3 <= k:\n\t\t\tvar1 += 1\nprint(var1)"
    }
  },
  {
    "p_name": "p02730",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = len(var0)\nif var0[:(var1 - 1) // 2] != ''.join(reversed(var0[:(var1 - 1) // 2])):\n\tprint('No')\n\texit()\nif var0[(var1 + 3) // 2 - 1:] != ''.join(reversed(var0[(var1 + 3) // 2 - 1:])):\n\tprint('No')\n\texit()\nprint('Yes')",
      "fixed_code": "var0 = input()\nvar1 = len(var0)\nvar2 = var0[:int((var1 - 1) / 2)]\nvar3 = var0[int((var1 + 3) / 2) - 1:]\nif var0 == var0[::-1]:\n\tif var2 == var2[::-1]:\n\t\tif var3 == var3[::-1]:\n\t\t\tprint('Yes')\n\t\t\texit()\nprint('No')"
    }
  },
  {
    "p_name": "p03317",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = var1 - 1\nif var0 == var1:\n\tprint(1)\n\texit()\nif var0 % var3 == 0:\n\tprint(var0 // var3)\nelse:\n\tprint(var0 // var3 + 1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar0 = var0 - 1\nvar1 = var1 - 1\nif var0 == var1:\n\tprint(1)\n\texit()\nif var0 % var1 == 0:\n\tprint(var0 // var1)\nelse:\n\tprint(var0 // var1 + 1)"
    }
  },
  {
    "p_name": "p02773",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [input() for _ in range(var0)]\nvar2 = []\nfor i in var1:\n\tif var1.count(i) > 1:\n\t\tvar2.append(i)\nfor var3 in set(var2):\n\tprint(var3)",
      "fixed_code": "import collections as var4\nvar0 = int(input())\nvar1 = [input() for _ in range(var0)]\nvar1 = var4.Counter(var1)\nvar5 = max(var1.values())\nfor var3 in sorted(var1):\n\tif var1[var3] == var5:\n\t\tprint(var3)"
    }
  },
  {
    "p_name": "p03456",
    "code": {
      "buggy_code": "def method0():\n\tvar0, var1 = input().split()\n\tfor i in range(101):\n\t\tif i * i == int('{}{}'.format(var0, var1)):\n\t\t\tprint('Yes')\n\t\t\treturn\n\tprint('No')\nmethod0()",
      "fixed_code": "def method0():\n\tvar0, var1 = input().split()\n\tfor i in range(1000):\n\t\tif i * i == int('{}{}'.format(var0, var1)):\n\t\t\tprint('Yes')\n\t\t\treturn\n\tprint('No')\nmethod0()"
    }
  },
  {
    "p_name": "p02417",
    "code": {
      "buggy_code": "from collections import OrderedDict\nvar0 = OrderedDict(((chr(i), 0) for i in range(97, 97 + 26)))\nvar1 = input().lower()\nfor i in var1:\n\tif i in var0:\n\t\tvar0[i] += 1\nfor var2, var3 in var0.items():\n\tprint(var2 + ' : ' + str(var3))",
      "fixed_code": "import sys\nfrom collections import OrderedDict\nvar0 = OrderedDict(((chr(i), 0) for i in range(97, 97 + 26)))\nimport fileinput\nfor var4 in fileinput.input():\n\tvar1 = var4.strip().lower()\n\tfor i in var1:\n\t\tif i in var0:\n\t\t\tvar0[i] += 1\nfor var2, var3 in var0.items():\n\tprint(var2 + ' : ' + str(var3))"
    }
  },
  {
    "p_name": "p02570",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nif var0 / var2 < var1:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var3, var4, var5 = map(int, input().split())\nif var3 / var5 > var4:\n\tprint('No')\nelse:\n\tprint('Yes')"
    }
  },
  {
    "p_name": "p02724",
    "code": {
      "buggy_code": "var0 = int(input())\nprint(var0 // 500 + (var0 - var0 // 500) // 5)",
      "fixed_code": "var0 = int(input())\nprint(var0 // 500 * 1000 + var0 % 500 // 5 * 5)"
    }
  },
  {
    "p_name": "p02719",
    "code": {
      "buggy_code": "var0, k = map(int, input().split())\nvar0 = abs(var0 - k) % k\nif var0 == 0:\n\tprint(var0)\n\texit()\nprint(abs(var0 - k))",
      "fixed_code": "var0, k = map(int, input().split())\nvar0 = var0 % k\nvar1 = abs(var0 - k)\nif var0 <= var1:\n\tprint(var0)\nelse:\n\tprint(var1)"
    }
  },
  {
    "p_name": "p02959",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar2.append(0)\nvar3 = 0\nvar4 = 0\nfor i in range(var0 + 1):\n\tvar5 = var2[i] + var4\n\tif var1[i] >= var5:\n\t\tvar3 += var5\n\t\tvar4 = 0\n\telse:\n\t\tvar3 += var1[i]\n\t\tvar4 = var2[i] - (var1[i] - var4)\nprint(var3)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar2.append(0)\nvar3 = 0\nvar4 = 0\nfor i in range(var0 + 1):\n\tvar5 = var2[i] + var4\n\tif var1[i] >= var5:\n\t\tvar3 += var5\n\t\tvar4 = 0\n\telse:\n\t\tvar3 += var1[i]\n\t\tif var1[i] > var4:\n\t\t\tvar4 = var2[i] - (var1[i] - var4)\n\t\telse:\n\t\t\tvar4 = var2[i]\nprint(var3)"
    }
  },
  {
    "p_name": "p02572",
    "code": {
      "buggy_code": "from numba import var1\nimport numpy as var0\n\n@var1\ndef method0():\n\tvar2 = int(input())\n\tvar3 = var0.array(list(map(int, input().split())), var4=var0.int64)\n\tvar5 = 10 ** 9 + 7\n\tvar6 = 0\n\tfor i in range(var2):\n\t\tvar6 = var6 % var5 + var3[i] % var5 * var3[i + 1:].sum() % var5\n\tprint(var6)\nmethod0()",
      "fixed_code": "var2 = int(input())\nvar3 = list(map(int, input().split()))\nvar5 = 10 ** 9 + 7\nvar7 = sum(map(lambda var8: var8 * var8, var3))\nvar9 = sum(var3) * sum(var3)\nvar6 = (var9 - var7) // 2\nprint(var6 % var5)"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "import sys\nvar0 = int(input())\nvar1 = list(map(int, input().split()))\nif 0 in var1:\n\tprint(21)\n\tsys.exit()\nvar2 = False\nvar3 = 1\nfor i in var1:\n\tvar3 *= i\n\tif var3 > 1e+18:\n\t\tvar2 = True\n\t\tbreak\nif var2:\n\tprint(-1)\nelse:\n\tprint(var3)",
      "fixed_code": "import sys\nvar0 = int(input())\nvar1 = list(map(int, input().split()))\nif 0 in var1:\n\tprint(0)\n\tsys.exit()\nvar2 = False\nvar3 = 1\nfor i in var1:\n\tvar3 *= i\n\tif var3 > 1e+18:\n\t\tvar2 = True\n\t\tbreak\nif var2:\n\tprint(-1)\nelse:\n\tprint(var3)"
    }
  },
  {
    "p_name": "p03986",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = [1]\nfor i in range(1, len(var0)):\n\tif var0[i] == var0[i - 1]:\n\t\tvar1[-1] += 1\n\telse:\n\t\tvar1 += [1]\nvar2 = 0\nif var0[0] == 'T':\n\tvar2 += var1.pop(0)\nif var0[-1] == 'S':\n\tvar2 += var1.pop(-1)\nwhile len(var1) > 1:\n\tvar1 = [i - j for i, j in zip(var1[::2], var1[1::2]) if i != j]\n\tif var1:\n\t\tif var1[0] < 0:\n\t\t\tvar2 += abs(var1.pop(0))\n\tif var1:\n\t\tif var1[-1] > 0:\n\t\t\tvar2 += var1.pop(-1)\n\tvar1 = [abs(i) for i in var1 if i != 0]\nprint(var2 + abs(var1[0]) if var1 else var2)",
      "fixed_code": "var1 = []\nfor i in input():\n\tif i == 'S':\n\t\tvar1 += i\n\tif var1:\n\t\tif i == 'T' and var1[-1] == 'T':\n\t\t\tvar1 += i\n\t\tif i == 'T' and var1[-1] == 'S':\n\t\t\tvar1.pop(-1)\n\telif i == 'T' and len(var1) == 0:\n\t\tvar1 += i\nprint(len(var1))"
    }
  },
  {
    "p_name": "p02687",
    "code": {
      "buggy_code": "var0 = input()\nprint('ABC' if var0 == 'ARC' else 'ABC')",
      "fixed_code": "var0 = input()\nif var0 == 'ABC':\n\tprint('ARC')\nelse:\n\tprint('ABC')"
    }
  },
  {
    "p_name": "p03679",
    "code": {
      "buggy_code": "import sys\n\ndef method0():\n\tvar0, var1, var2 = map(int, input().split())\n\tvar3 = var2 - var1\n\tvar4 = var0 - var3\n\tif var3 < 0:\n\t\tprint('delicious')\n\t\tsys.exit()\n\tif var4 > 0:\n\t\tprint('safe')\n\telif var4 < 0:\n\t\tprint('dangerous')\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "def method0():\n\tvar0, var1, var2 = map(int, input().split())\n\tvar3 = var2 - var1\n\tif var3 <= 0:\n\t\tprint('delicious')\n\telif var3 <= var0:\n\t\tprint('safe')\n\telif var3 > var0:\n\t\tprint('dangerous')\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p03043",
    "code": {
      "buggy_code": "import math\nimport decimal\nvar0, var1 = map(int, input().split())\nvar2 = 0\nfor i in range(1, min(var0 + 1, var1)):\n\tvar3 = var1 / i\n\tvar2 += 0.5 ** max(math.ceil(math.log2(var3)), 1) * (1 / var0)\nif var0 > var1:\n\tvar2 += (var0 - var1 + 1) / var0\nprint('{:.12f}'.format(var2))",
      "fixed_code": "import math\nimport decimal\nvar0, var1 = map(int, input().split())\nvar2 = 0\nfor i in range(1, min(var0 + 1, var1)):\n\tvar3 = var1 / i\n\tvar2 += 0.5 ** max(math.ceil(math.log2(var3)), 1) * (1 / var0)\nif var0 >= var1:\n\tvar2 += (var0 - var1 + 1) / var0\nprint('{:.12f}'.format(var2))"
    }
  },
  {
    "p_name": "p02917",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = [0] * var0\nfor i in range(1, var0 - 1):\n\tvar2[i] = min(var1[i - 1], var1[i])\nvar2[var0 - 1] = var1[var0 - 2]\nvar2[0] = min(var1[0], var2[1])\nprint(sum(var2))",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = [0] * var0\nfor i in range(1, var0 - 1):\n\tvar2[i] = min(var1[i - 1], var1[i])\nvar2[var0 - 1] = var1[var0 - 2]\nvar2[0] = var1[0]\nprint(sum(var2))"
    }
  },
  {
    "p_name": "p02755",
    "code": {
      "buggy_code": "from math import ceil\n\ndef method0():\n\tvar0, var1 = map(int, input().split())\n\tvar2 = ceil(var0 / 0.08)\n\tvar3 = ceil((var0 + 1) / 0.08)\n\tvar4 = int(var1 / 0.1)\n\tvar5 = int((var1 + 1) / 0.1) - 1\n\tif var3 >= var5 >= var2:\n\t\tprint(var2)\n\telif var2 <= var4 <= var3:\n\t\tprint(var4)\n\telse:\n\t\tprint(-1)\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "from math import ceil, floor\n\ndef method0():\n\tvar0, var1 = map(int, input().split())\n\tvar2 = ceil(var0 / 0.08)\n\tvar3 = int((var0 + 1) // 0.08)\n\tvar4 = int(var1 / 0.1)\n\tvar5 = int((var1 + 1) / 0.1) - 1\n\tif var3 >= var5 >= var2 and var2 >= var4:\n\t\tprint(var2)\n\telif var2 <= var4 <= var3 and var2 <= var4:\n\t\tprint(var4)\n\telse:\n\t\tprint(-1)\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "from decimal import *\ngetcontext().prec = 16\nvar0, var1 = map(var2, input().split())\nprint(int(int(var0 * var1)))",
      "fixed_code": "from decimal import *\ngetcontext().prec = 32\nvar0, var1 = map(str, input().split())\nvar1 = int(var2(var1) * 100)\nvar0 = int(var0)\nprint(var0 * var1 // 100)"
    }
  },
  {
    "p_name": "p02682",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nif var3 <= var0 + var1:\n\tprint(var0)\nelse:\n\tprint(var0 - (var3 - var0 - var1))",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nif var3 <= var0:\n\tprint(var3)\nelif var3 <= var0 + var1:\n\tprint(var0)\nelse:\n\tprint(var0 - (var3 - var0 - var1))"
    }
  },
  {
    "p_name": "p02705",
    "code": {
      "buggy_code": "print(int(input()) * 3.14)",
      "fixed_code": "import math\nvar0 = int(input())\nprint(var0 * 2 * math.pi)"
    }
  },
  {
    "p_name": "p03543",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = input()\n\tvar1 = list()\n\tfor i in range(10):\n\t\tvar1.append(0)\n\tfor var2 in var0:\n\t\tvar3 = int(var2)\n\t\tvar1[var3] += 1\n\tvar4 = ''\n\tfor i in range(10):\n\t\tif var1[i] >= 3:\n\t\t\tvar4 = 'Yes'\n\t\t\tbreak\n\tif var4 == 'Yes':\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\nmethod0()",
      "fixed_code": "def method0():\n\tvar0 = input()\n\tvar4 = ''\n\tfor i in range(len(var0) - 2):\n\t\tif var0[i] == var0[i + 1] and var0[i] == var0[i + 2]:\n\t\t\tvar4 = 'Yes'\n\t\t\tbreak\n\t\telse:\n\t\t\tvar4 = 'No'\n\tprint(var4)\nmethod0()"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var0 > var1:\n\tvar0, var1 = (var1, var0)\nvar1 = min(var0 * 2 - 1, var1)\nvar2 = var1 * (var0 // 2)\nif var0 % 2:\n\tvar2 += (var1 + 1) // 2\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif min(var0, var1) == 1:\n\tvar2 = 1\nelse:\n\tvar2 = var1 * (var0 // 2)\n\tif var0 % 2:\n\t\tvar2 += (var1 + 1) // 2\nprint(var2)"
    }
  },
  {
    "p_name": "p03835",
    "code": {
      "buggy_code": "k, var0 = map(int, input().split())\nvar1 = 0\nfor var2 in range(1, k + 1):\n\tfor var3 in range(1, k + 1):\n\t\tif var0 - var2 - var3 >= 0 and var0 - var2 - var3 <= k:\n\t\t\tvar1 += 1\nprint(var1)",
      "fixed_code": "k, var0 = map(int, input().split())\nvar1 = 0\nfor var2 in range(k + 1):\n\tfor var3 in range(k + 1):\n\t\tif var0 - var2 - var3 >= 0 and var0 - var2 - var3 <= k:\n\t\t\tvar1 += 1\nprint(var1)"
    }
  },
  {
    "p_name": "p02682",
    "code": {
      "buggy_code": "var0, var1, var2, k = map(int, input().split())\nif var0 < k:\n\tif var1 < k - var0:\n\t\tvar3 = var0 + (k - var0 - var1) * -1\n\telse:\n\t\tvar3 = var0\nelse:\n\tvar3 = var0\nprint(var3)",
      "fixed_code": "var0, var1, var2, k = map(int, input().split())\nif var0 < k:\n\tif var1 < k - var0:\n\t\tvar3 = var0 + (k - var0 - var1) * -1\n\telse:\n\t\tvar3 = var0\nelse:\n\tvar3 = k\nprint(var3)"
    }
  },
  {
    "p_name": "p02640",
    "code": {
      "buggy_code": "var0 = input().split()\nvar1 = list(map(int, var0))\nvar2 = var1[0] * 2 - var1[1] / 2\nvar3 = -var1[0] + var1[1] / 2\nif var2 >= 0 and var3 >= 0:\n\tif var2.is_integer() and var3.is_integer():\n\t\tprint('yes')\n\telse:\n\t\tprint('no')\nelse:\n\tprint('no')",
      "fixed_code": "var0 = input().split()\nvar1 = list(map(int, var0))\nvar2 = var1[0] * 2 - var1[1] / 2\nvar3 = -var1[0] + var1[1] / 2\nif var2 >= 0 and var3 >= 0:\n\tif var2.is_integer() and var3.is_integer():\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02725",
    "code": {
      "buggy_code": "k, var0 = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = []\nvar3 = 0\nfor i in range(var0):\n\tvar3 = abs(var1[i] - var1[i - 1])\n\tif var3 > k / 2:\n\t\tvar3 = var3 - int(k / 2)\n\tvar2.append(var3)\nprint(sum(var2) - max(var2))",
      "fixed_code": "k, var0 = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = []\nvar3 = 0\nfor i in range(var0):\n\tvar3 = abs(var1[i] - var1[i - 1])\n\tif var3 > k / 2:\n\t\tvar3 = abs(var3 - k)\n\tvar2.append(var3)\nprint(sum(var2) - max(var2))"
    }
  },
  {
    "p_name": "p03328",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nvar3 = var1 - var0\nfor i in range(1, 999):\n\tvar2 += i\n\tif i == var3:\n\t\tprint(var2 - var1)\n\t\texit()",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nvar3 = var1 - var0\nfor i in range(1, 1000):\n\tvar2 += i\n\tif i == var3:\n\t\tprint(var2 - var1)\n\t\texit()"
    }
  },
  {
    "p_name": "p02767",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 10 ** 4\nfor var3 in range(max(var1) - min(var1)):\n\tvar4 = 0\n\tfor j in range(var0):\n\t\tvar4 = var4 + (var1[j] - var3) ** 2\n\tif var4 < var2:\n\t\tvar2 = var4\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar5 = min(var1)\nvar6 = max(var1)\nvar2 = 10 ** 18\nfor var3 in range(var5, var6 + 1):\n\tvar4 = 0\n\tfor j in range(var0):\n\t\tvar4 = var4 + (var1[j] - var3) ** 2\n\tif var4 <= var2:\n\t\tvar2 = var4\nprint(var2)"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "import math\nvar0, var1 = input().split()\nvar0 = int(var0)\nvar1 = float(var1)\nprint(int(math.floor(var0 * var1)))",
      "fixed_code": "import math\nfrom decimal import Decimal\nvar0, var1 = input().split()\nvar0 = Decimal(var0)\nvar1 = Decimal(var1)\nif var0 == 0 or var1 == 0:\n\tprint(0)\nelse:\n\tprint(int(math.floor(var0 * var1)))"
    }
  },
  {
    "p_name": "p03485",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = int((var0 + var1) / 2)\nprint(var2) if var2 == var0 + var1 else print(var2 + 1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = int((var0 + var1) / 2)\nprint(var2) if var2 == (var0 + var1) / 2 else print(var2 + 1)"
    }
  },
  {
    "p_name": "p03861",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nprint((var1 - var0 + 1) // var2)",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nprint(var1 // var2 - (var0 - 1) // var2)"
    }
  },
  {
    "p_name": "p02754",
    "code": {
      "buggy_code": "var0, var1, var2 = input().split(' ')\nvar3 = int(var0)\nvar4 = int(var1)\nvar5 = int(var2)\nvar6 = var3 % (var4 + var5)\nvar7 = var3 // (var4 + var5)\nif var6 > var4:\n\tprint(var5 * var7 + var6)\nelse:\n\tprint(var5 * var7)",
      "fixed_code": "var0, var1, var2 = input().split(' ')\nvar3 = int(var0)\nvar4 = int(var1)\nvar5 = int(var2)\nvar6 = var3 % (var4 + var5)\nvar7 = var3 // (var4 + var5)\nif var6 < var4 + 1:\n\tprint(var4 * var7 + var6)\nelse:\n\tprint(var4 * var7 + var4)"
    }
  },
  {
    "p_name": "p03079",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = [var0, var1, var2]\nvar3 = sorted(var3)\nif var3[2] < var3[0] + var3[1]:\n\tvar4 = 'Yes'\nelse:\n\tvar4 = 'No'\nprint(var4)",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = [var0, var1, var2]\nvar3 = sorted(var3)\nif var3[2] == var3[0] == var3[1]:\n\tvar4 = 'Yes'\nelse:\n\tvar4 = 'No'\nprint(var4)"
    }
  },
  {
    "p_name": "p02712",
    "code": {
      "buggy_code": "import sys\n\ndef method0(var0: int):\n\tvar1 = []\n\tfor i in range(var0):\n\t\tif i % 3 == 0 or i % 5 == 0:\n\t\t\tcontinue\n\t\tvar1.append(i)\n\tprint(sum(var1))\n\treturn\n\ndef method1():\n\n\tdef method2():\n\t\tfor var2 in sys.stdin:\n\t\t\tfor var3 in var2.split():\n\t\t\t\tyield var3\n\tvar4 = method2()\n\tvar0 = int(next(var4))\n\tmethod0(var0)\nif __name__ == '__main__':\n\tmethod1()",
      "fixed_code": "import sys\n\ndef method0(var0: int):\n\tvar1 = []\n\tfor i in range(1, var0 + 1):\n\t\tif i % 3 == 0 or i % 5 == 0:\n\t\t\tcontinue\n\t\tvar1.append(i)\n\tprint(sum(var1))\n\treturn\n\ndef method1():\n\n\tdef method2():\n\t\tfor var2 in sys.stdin:\n\t\t\tfor var3 in var2.split():\n\t\t\t\tyield var3\n\tvar4 = method2()\n\tvar0 = int(next(var4))\n\tmethod0(var0)\nif __name__ == '__main__':\n\tmethod1()"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "def method0():\n\treturn map(int, input().split())\nimport math\nvar0, var1, var2 = method0()\nif var2 - var0 - var1 - 2 * math.sqrt(var0 * var1) > 0:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "def method0():\n\treturn map(str, input().split())\nfrom decimal import *\nvar0, var1, var2 = method0()\ngetcontext().prec = 1500\nvar0 = Decimal(var0) ** Decimal('0.50')\nvar1 = Decimal(var1) ** Decimal('0.50')\nvar2 = Decimal(var2) ** Decimal('0.50')\nif var2 > var0 + var1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02729",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nprint(var0 * (var0 - 1) / 2 + var1 * (var1 - 1) / 2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nprint(int(var0 * (var0 - 1) / 2 + var1 * (var1 - 1) / 2))"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 1\nvar3 = 1\nvar4 = pow(10, 18)\nfor var5 in var1:\n\tvar2 = var2 * var5\n\tif var2 > var4:\n\t\tvar3 = 0\n\telif var5 == 0:\n\t\tvar2 = 0\nif var3 == 1:\n\tprint(var2)\nelse:\n\tprint(-1)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 1\nvar3 = 1\nvar4 = pow(10, 18)\nfor var5 in var1:\n\tif var5 == 0:\n\t\tvar2 = 0\n\t\tvar3 = 1\n\t\tbreak\n\tif var3 == 1:\n\t\tvar2 = var2 * var5\n\t\tif var2 > var4:\n\t\t\tvar3 = 2\nif var3 == 1:\n\tprint(var2)\nelif var3 == 2:\n\tprint(-1)"
    }
  },
  {
    "p_name": "p03289",
    "code": {
      "buggy_code": "var0 = input()\nif var0[0] == 'A' and 'C' in var0[2:-1]:\n\ttry:\n\t\tvar1 = list(var0[2:-2])\n\t\tvar1.remove('C')\n\t\tvar1 += var0[-1]\n\t\tif ''.join(var1).islower():\n\t\t\tprint('AC')\n\t\telse:\n\t\t\tprint('WA')\n\texcept:\n\t\tprint('WA')\nelse:\n\tprint('WA')",
      "fixed_code": "var0 = input()\nif len(var0) >= 4 and len(var0) <= 10 and (var0[0] == 'A') and (var0[2:-1].count('C') == 1):\n\ttry:\n\t\tvar1 = list(var0[2:-1])\n\t\tvar1.remove('C')\n\t\tvar1 += var0[-1]\n\t\tif var0[1].islower() and ''.join(var1).islower():\n\t\t\tprint('AC')\n\t\telse:\n\t\t\tprint('WA')\n\texcept:\n\t\tprint('WA')\nelse:\n\tprint('WA')"
    }
  },
  {
    "p_name": "p02677",
    "code": {
      "buggy_code": "import numpy\nvar0, var1, var2, var3 = map(int, input().split())\nvar4 = var2 * 30 + var3 * 0.5\nvar5 = var3 * 6\nif var4 == var5:\n\texit(print(var1 - var0))\nif abs(var4 - var5) == 180:\n\texit(print(var0 + var1))\nvar6 = var4 - var5 if var4 > var5 else var5 - var4\nif var6 > 180:\n\tvar6 -= 180\nvar6 = numpy.radians(var6)\nprint(numpy.sqrt(var0 ** 2 + var1 ** 2 - 2 * var0 * var1 * numpy.cos(var6)))",
      "fixed_code": "import math\nvar0, var1, var2, var3 = map(int, input().split())\nvar4 = var2 * 30 + var3 * 0.5\nvar5 = var3 * 6\nvar6 = math.radians(abs(var4 - var5))\nprint(math.sqrt(var0 ** 2 + var1 ** 2 - 2 * var0 * var1 * math.cos(var6)))"
    }
  },
  {
    "p_name": "p02646",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2, var3 = map(int, input().split())\nvar4 = int(input())\nvar5 = 0\nif var1 - var3 <= 0:\n\tvar5 = 0\nelif (var1 - var3) * var4 >= var0 - var2:\n\tvar5 = 1\nif var5 == 1:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2, var3 = map(int, input().split())\nvar4 = int(input())\nvar5 = 0\nif var1 - var3 <= 0:\n\tvar5 = 0\nelif (var1 - var3) * var4 >= abs(var0 - var2):\n\tvar5 = 1\nif var5 == 1:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p02923",
    "code": {
      "buggy_code": "import numpy as var0\nvar1 = int(input())\nvar2 = var0.array(list(map(int, input().split())))\nif var1 == 1:\n\tprint(0)\nelse:\n\tvar3 = 0\n\tvar4 = 0\n\tvar5 = var2[0]\n\tfor var6 in var2[1:]:\n\t\tif var5 >= var6:\n\t\t\tvar3 += 1\n\t\t\tvar4 = var3\n\t\telse:\n\t\t\tvar3 = 0\n\t\tvar5 = var6\n\tprint(int(var4))",
      "fixed_code": "import numpy as var0\nvar1 = int(input())\nvar2 = var0.array(list(map(int, input().split())))\nif var1 == 1:\n\tprint(0)\nelse:\n\tvar3 = 0\n\tvar4 = 0\n\tvar5 = var2[0]\n\tfor var6 in var2[1:]:\n\t\tif var5 >= var6:\n\t\t\tvar3 += 1\n\t\t\tif var4 < var3:\n\t\t\t\tvar4 = var3\n\t\telse:\n\t\t\tvar3 = 0\n\t\tvar5 = var6\n\tprint(int(var4))"
    }
  },
  {
    "p_name": "p02755",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\ni = 0\nwhile True:\n\tvar2 = int(i * 0.08)\n\tvar3 = int(i * 0.1)\n\tif var0 == var2 and var1 == var3:\n\t\tbreak\n\ti = i + 1\nif i == 100:\n\ti = -1\n\tprint(i)\nelse:\n\tprint(i)",
      "fixed_code": "var0, var1 = map(int, input().split())\ni = 0\nwhile i < 1001:\n\tvar2 = int(i * 0.08)\n\tvar3 = int(i * 0.1)\n\tif var0 == var2 and var1 == var3:\n\t\tbreak\n\ti = i + 1\nif i == 1001:\n\ti = -1\n\tprint(i)\nelse:\n\tprint(i)"
    }
  },
  {
    "p_name": "p03633",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [int(input()) for i in range(var0)]\nvar1.sort()\n\ndef method0(var2, var3):\n\tif var3 == 0:\n\t\treturn var2\n\treturn method0(var3, var2 % var3)\n\ndef method1(var2, var3):\n\treturn var2 * int(var3 / method0(var2, var3))\nvar4 = var1[0]\nfor i in range(len(var1) - 1):\n\tvar5 = method1(var4, var1[i + 1])\n\tvar4 = var5\nprint(int(var4))",
      "fixed_code": "var0 = int(input())\nvar1 = [int(input()) for i in range(var0)]\n\ndef method0(var2, var3):\n\twhile var3:\n\t\tvar2, var3 = (var3, var2 % var3)\n\treturn var2\n\ndef method1(var2, var3):\n\treturn var2 * var3 // method0(var2, var3)\nvar4 = var1[0]\nfor i in range(len(var1) - 1):\n\tvar5 = method1(var4, var1[i + 1])\n\tvar4 = var5\nprint(var4)"
    }
  },
  {
    "p_name": "p03071",
    "code": {
      "buggy_code": "var0 = 0\nvar1, var2 = map(int, input().split())\nif var1 >= var2:\n\tvar0 += var1\n\tvar1 = var1 - 1\nelse:\n\tvar0 += var2\nif var1 >= var2:\n\tvar0 += var1\n\tvar1 = var1 - 1\nelse:\n\tvar0 += var2\nprint(var0)",
      "fixed_code": "var0 = 0\nvar1, var2 = map(int, input().split())\nif var1 >= var2:\n\tvar0 += var1\n\tvar1 = var1 - 1\nelse:\n\tvar0 += var2\n\tvar2 = var2 - 1\nif var1 >= var2:\n\tvar0 += var1\n\tvar1 = var1 - 1\nelse:\n\tvar0 += var2\n\tvar2 = var2 - 1\nprint(var0)"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "var0, var1 = map(float, input().split())\nprint(int(var0 * var1))",
      "fixed_code": "from decimal import Decimal\nvar2, var3 = input().split()\nvar2 = int(var2)\nvar3 = Decimal(var3)\nprint(int(var2 * var3))"
    }
  },
  {
    "p_name": "p03061",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\n\ndef method0(var2, var3):\n\twhile var3:\n\t\tvar2, var3 = (var3, var2 % var3)\n\treturn var2\nvar4 = var1[0]\nfor i in range(var0):\n\tvar4 = method0(var4, var1[i])\nfor i in range(var0):\n\tvar1[i] //= var4\nvar5 = var1[0]\nfor i in range(var0):\n\tif i != 0:\n\t\tvar5 = method0(var5, var1[i])\nvar6 = var1[1]\nfor i in range(var0):\n\tif i != 1:\n\t\tvar6 = method0(var6, var1[i])\nprint(var4 * max(var5, var6))",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\n\ndef method0(var2, var3):\n\twhile var3:\n\t\tvar2, var3 = (var3, var2 % var3)\n\treturn var2\nvar4 = var1[0]\nfor i in range(var0):\n\tvar4 = method0(var4, var1[i])\nfor i in range(var0):\n\tvar1[i] //= var4\nvar1.sort(var7=True)\nvar5 = var1[0]\nvar8 = 0\nfor i in range(var0):\n\tvar9 = var5\n\tvar5 = method0(var5, var1[i])\n\tif var5 == 1:\n\t\tvar8 += 1\n\t\tif var8 == 1:\n\t\t\tvar5 = var9\nvar6 = var1[1]\nvar10 = 0\nfor i in range(var0):\n\tvar11 = var6\n\tvar6 = method0(var6, var1[i])\n\tif var6 == 1:\n\t\tvar10 += 1\n\t\tif var10 == 1:\n\t\t\tvar6 = var11\nif 1:\n\tvar12 = 1\n\tvar13 = 1\n\tif var8 == 1 and var5 <= 10 ** 9:\n\t\tvar12 = var5\n\tif var10 == 1 and var6 <= 10 ** 9:\n\t\tvar13 = var6\n\tprint(var4 * max(var12, var13))"
    }
  },
  {
    "p_name": "p03351",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nif abs(var0 - var1) <= var3 and abs(var1 - var2) <= var3:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nif abs(var0 - var1) <= var3 and abs(var1 - var2) <= var3:\n\tprint('Yes')\nelif abs(var0 - var2) <= var3:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03775",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nvar1 = math.ceil(math.sqrt(var0))\nvar2 = float('inf')\nfor i in range(1, var1):\n\tvar3 = var0 / i\n\tif var3.is_integer():\n\t\tvar3 = int(var3)\n\t\ti = int(i)\n\t\tvar4 = max(len(str(i)), len(str(var3)))\n\t\tif var2 > var4:\n\t\t\tvar2 = var4\nprint(var2)",
      "fixed_code": "import math\nvar0 = int(input())\nvar1 = math.ceil(math.sqrt(var0))\nvar2 = float('inf')\nfor i in range(1, var1 + 1):\n\tvar3 = var0 / i\n\tif var3.is_integer():\n\t\tvar3 = int(var3)\n\t\ti = int(i)\n\t\tvar4 = max(len(str(i)), len(str(var3)))\n\t\tif var2 > var4:\n\t\t\tvar2 = var4\nprint(var2)"
    }
  },
  {
    "p_name": "p03862",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = input().split()\nvar3 = 0\nfor i in range(var0):\n\tvar2[i] = int(var2[i])\nfor i in range(var0 - 1):\n\tvar4 = var2[i] + var2[i + 1]\n\tvar5 = var4 - var1\n\tif var5 > 0:\n\t\tvar3 += var5\n\t\tvar2[i] = 0\n\t\tvar2[i + 1] -= var5 - var2[i]\n\telse:\n\t\tvar2[i] = 0\nprint(var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = input().split()\nvar3 = 0\nfor i in range(var0):\n\tvar2[i] = int(var2[i])\nfor i in range(1, var0):\n\tvar4 = var2[i - 1] + var2[i]\n\tvar5 = var4 - var1\n\tif var5 > 0:\n\t\tvar3 += var5\n\t\tvar2[i - 1] = 0\n\t\tvar2[i] -= var5 - var2[i - 1]\n\t\tif var2[i] < 0:\n\t\t\tvar2[i] = 0\n\telse:\n\t\tvar2[i - 1] = 0\nprint(var3)"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "from collections import deque\nvar0 = int(input())\nvar1 = deque()\nvar1 = list(map(int, input().split()))\nvar2 = 0\nvar3 = 1\nfor i in range(var0):\n\tvar4 = var1.pop()\n\tif var4 == 0:\n\t\tvar3 = 0\n\t\tbreak\n\tvar3 = var3 * var4\n\tif len(str(var3)) >= 19:\n\t\tif var3 == 10 ** 18 and i == var0 - 1:\n\t\t\tbreak\n\t\tvar3 = -1\n\t\tbreak\nprint(var3)",
      "fixed_code": "from collections import deque\nvar0 = int(input())\nvar1 = deque()\nvar1 = list(map(int, input().split()))\nvar3 = 0\nif var1.count(0) == 0:\n\tvar3 = 1\n\tfor i in range(var0):\n\t\tvar4 = var1.pop()\n\t\tvar3 = var3 * var4\n\t\tif len(str(var3)) >= 19:\n\t\t\tif var3 == 10 ** 18 and i == var0 - 1:\n\t\t\t\tbreak\n\t\t\tvar3 = -1\n\t\t\tbreak\nprint(var3)"
    }
  },
  {
    "p_name": "p03037",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 1\nvar3 = var0\nfor i in range(var1):\n\tvar4, var5 = map(int, input().split())\n\tvar2 = max(var4, var2)\n\tvar3 = min(var5, var3)\nprint(var3 - var2 + 1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 1\nvar3 = var0\nfor i in range(var1):\n\tvar4, var5 = map(int, input().split())\n\tvar2 = max(var4, var2)\n\tvar3 = min(var5, var3)\nif var3 >= var2:\n\tprint(var3 - var2 + 1)\nelse:\n\tprint(0)"
    }
  },
  {
    "p_name": "p03835",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nfor var3 in range(var0 + 1):\n\tfor var4 in range(var1 - var3 + 1):\n\t\tfor var5 in range(var1 - var3 - var4 + 1):\n\t\t\tif var3 + var4 + var5 == var1:\n\t\t\t\tvar2 = var2 + 1\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nfor var3 in range(min([var0 + 1, var1 + 1])):\n\tfor var4 in range(min([var0 + 1, var1 + 1 - var3])):\n\t\tif var1 - var3 - var4 <= var0:\n\t\t\tvar2 = var2 + 1\nprint(var2)"
    }
  },
  {
    "p_name": "p03042",
    "code": {
      "buggy_code": "var0 = str(input())\nvar1 = int(var0[:2])\nvar2 = int(var0[2:])\nvar3 = list(var0)\nif var1 > 12 or var1 == 0:\n\tif 1 < var2 <= 12:\n\t\tprint('YYMM')\n\telse:\n\t\tprint('NA')\nelif var1 <= 12 and var1 == 0:\n\tif 1 < var2 <= 12:\n\t\tprint('AMBIGUOUS')\n\telse:\n\t\tprint('MMYY')",
      "fixed_code": "var0 = str(input())\nvar1 = int(var0[:2])\nvar2 = int(var0[2:])\nvar3 = list(var0)\nif var1 > 12 or var1 == 0:\n\tif 0 < var2 <= 12:\n\t\tprint('YYMM')\n\telse:\n\t\tprint('NA')\nelif var1 <= 12 or var1 == 0:\n\tif 0 < var2 <= 12:\n\t\tprint('AMBIGUOUS')\n\telse:\n\t\tprint('MMYY')"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = []\nvar3 = []\nfor i in range(var1):\n\tvar4, var5 = map(int, input().split())\n\tvar2.append(var4)\n\tvar3.append(var5)\nfor i in range(var1):\n\tif var2[i] == 1 and var3[i] == 0:\n\t\tprint(-1)\n\t\texit()\nfor i in range(var1):\n\tfor j in range(var1):\n\t\tif i != j and var2[i] == var2[j] and (var3[i] != var3[j]):\n\t\t\tprint(-1)\n\t\t\texit()\nif var0 == 0:\n\tvar6 = [0]\nelse:\n\tvar6 = [1] + [0] * (var0 - 1)\nfor i in range(var1):\n\tvar6[var2[i] - 1] = var3[i]\nvar7 = [str(i) for i in var6]\nvar7 = ''.join(var7)\nprint(var7)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = []\nvar3 = []\nfor i in range(var1):\n\tvar4, var5 = map(int, input().split())\n\tvar2.append(var4)\n\tvar3.append(var5)\nfor i in range(var1):\n\tif var0 != 1 and var2[i] == 1 and (var3[i] == 0):\n\t\tprint(-1)\n\t\texit()\nfor i in range(var1):\n\tfor j in range(var1):\n\t\tif i != j and var2[i] == var2[j] and (var3[i] != var3[j]):\n\t\t\tprint(-1)\n\t\t\texit()\nif var0 == 1:\n\tvar6 = [0]\nelse:\n\tvar6 = [1] + [0] * (var0 - 1)\nfor i in range(var1):\n\tvar6[var2[i] - 1] = var3[i]\nvar7 = [str(i) for i in var6]\nvar7 = ''.join(var7)\nprint(var7)"
    }
  },
  {
    "p_name": "p03351",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = abs(var0 - var2)\nvar5 = abs(var0 - var1)\nvar6 = abs(var2 - var1)\nif var4 <= var3:\n\tprint('Yes')\nelif (var5, var6 <= var3):\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = abs(var0 - var2)\nvar5 = abs(var0 - var1)\nvar6 = abs(var2 - var1)\nif var4 <= var3:\n\tprint('Yes')\nelif var5 <= var3 and var6 <= var3:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03030",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = []\nfor var2 in range(1, var0 + 1):\n\tvar3 = [var2]\n\tvar3 += input().split()\n\tvar3[2] = int(var3[2])\n\tvar1.append(var3)\nvar1.sort(var4=True, var5=lambda var6: var6[1])\nfor var7 in range(len(var1)):\n\tprint(var1.pop()[0])",
      "fixed_code": "var0 = int(input())\nvar1 = []\nfor var2 in range(1, var0 + 1):\n\tvar3 = [var2]\n\tvar3 += input().split()\n\tvar3[2] = int(var3[2])\n\tvar1.append(var3)\nvar1.sort(var5=lambda var6: (var6[1], -var6[2]))\nfor var8 in var1:\n\tprint(var8[0])"
    }
  },
  {
    "p_name": "p02705",
    "code": {
      "buggy_code": "var0 = float(input())\nprint(var0 * 3.14152)",
      "fixed_code": "var0 = float(input())\nprint(var0 * 2 * 3.1415926535)"
    }
  },
  {
    "p_name": "p02842",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 0\nfor i in range(var0):\n\tif int(i * 1.08) == var0:\n\t\tprint(i)\n\telse:\n\t\tvar1 += 1\nif var1 == var0:\n\tprint(':(')",
      "fixed_code": "var0 = int(input())\nvar1 = 0\nvar2 = 0\nfor i in range(var0 + 1):\n\tif int(i * 1.08) == var0:\n\t\tvar2 = i\nif var2 == 0:\n\tprint(':(')\nelse:\n\tprint(var2)"
    }
  },
  {
    "p_name": "p03796",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 1\nfor i in range(var0):\n\tvar1 *= i\n\tvar1 %= 10 ** 9 + 7\nprint(var1)",
      "fixed_code": "var0 = int(input())\nvar1 = 1\nfor i in range(1, var0 + 1):\n\tvar1 *= i\n\tvar1 %= 10 ** 9 + 7\nprint(var1)"
    }
  },
  {
    "p_name": "p02987",
    "code": {
      "buggy_code": "input = input().split()\nvar0 = list(input[0])\nvar0.sort()\nvar1 = 1\nfor i in range(0, len(var0) - 1, 2):\n\tif var0[i] != var0[i + 1]:\n\t\tvar1 = 0\n\t\tbreak\nif var1 == 0:\n\tprint('No')\nelse:\n\tprint('Yes')",
      "fixed_code": "input = input().split()\nvar0 = list(input[0])\nvar0.sort()\nvar1 = 1\nfor i in range(0, len(var0) - 1, 2):\n\tif var0[i] != var0[i + 1]:\n\t\tvar1 = 0\n\t\tbreak\n\tif var0[1] == var0[2]:\n\t\tvar1 = 0\n\t\tbreak\nif var1 == 0:\n\tprint('No')\nelse:\n\tprint('Yes')"
    }
  },
  {
    "p_name": "p02713",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nvar1 = 0\nfor i in range(var0):\n\tfor j in range(var0):\n\t\tfor k in range(var0):\n\t\t\tvar1 += math.gcd(math.gcd(i, j), k)\nprint(var1)",
      "fixed_code": "import math\nvar2 = 0\nvar0 = int(input())\nfor i in range(1, var0 + 1):\n\tfor j in range(1, var0 + 1):\n\t\tvar3 = math.gcd(i, j)\n\t\tfor k in range(1, var0 + 1):\n\t\t\tvar2 += math.gcd(var3, k)\nprint(var2)"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "import sys, os, math, bisect, itertools, collections, heapq, queue\nfrom decimal import Decimal\nfrom collections import defaultdict\nsys.setrecursionlimit(10000000)\nvar0 = lambda: int(sys.stdin.buffer.readline().rstrip())\nvar1 = lambda: list(map(int, sys.stdin.buffer.readline().split()))\nvar2 = lambda: list(map(float, sys.stdin.buffer.readline().split()))\nvar3 = lambda var4: [int(sys.stdin.buffer.readline().rstrip()) for _ in range(var4)]\nvar5 = lambda: sys.stdin.buffer.readline().decode().rstrip()\nvar6 = lambda: list(map(str, sys.stdin.buffer.readline().decode().split()))\nvar7 = lambda var4: [sys.stdin.buffer.readline().decode().rstrip() for _ in range(var4)]\nvar8 = lambda var9, var10: var9 * var10 // math.gcd(var9, var10)\nvar11 = 10 ** 9 + 7\nvar12 = float('inf')\n\ndef method0():\n\tif os.getenv('LOCAL'):\n\t\tsys.stdin = open('input.txt', 'var18')\n\tvar13 = 2019\n\tvar14, var15 = var1()\n\tvar14 = var14 % var13\n\tvar15 = var15 % var13\n\tvar16 = var12\n\tfor var17 in range(var14, var15 + 1):\n\t\tfor var18 in range(var17 + 1, var15 + 1):\n\t\t\tvar16 = min(var16, var17 * var18)\n\tprint(var16)\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "import sys\nimport os\nvar11 = 2019\n\ndef method0():\n\tif os.getenv('LOCAL'):\n\t\tsys.stdin = open('input.txt', 'var18')\n\tvar14, var15 = list(map(int, sys.stdin.readline().split()))\n\tvar16 = float('inf')\n\tif var15 - var14 >= 2019:\n\t\tprint(0)\n\t\texit()\n\tfor i in range(var14, var15 + 1):\n\t\tfor j in range(i + 1, var15 + 1):\n\t\t\tvar16 = min(var16, i * j % var11)\n\tprint(var16)\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02829",
    "code": {
      "buggy_code": "var0 = [1, 2, 3]\nvar1 = int(input())\nvar2 = int(input())\nvar0.remove(var1)\nvar0.remove(var2)\nprint(var0)",
      "fixed_code": "var0 = [1, 2, 3]\nvar1 = int(input())\nvar2 = int(input())\nvar0.remove(var1)\nvar0.remove(var2)\nprint(var0[0])"
    }
  },
  {
    "p_name": "p03479",
    "code": {
      "buggy_code": "import math\nvar0, var1 = map(int, input().split())\nif var0 != var1:\n\tvar2 = math.floor(math.log2(var1) - math.log2(var0))\n\tprint(var2 + 1)\nelse:\n\tprint(1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar3 = 0\nwhile var0 <= var1:\n\tvar0 *= 2\n\tvar3 += 1\nprint(var3)"
    }
  },
  {
    "p_name": "p03252",
    "code": {
      "buggy_code": "import sys\nfrom collections import defaultdict\nvar0 = input()\nvar1 = input()\nvar2 = len(var0)\nvar3 = defaultdict(int)\nfor i in range(var2):\n\tvar4 = var0[i]\n\tvar5 = var1[i]\n\tif var3[var4] == 0:\n\t\tvar3[var4] = var5\n\telif var3[var4] != var5:\n\t\tprint('No')\n\t\tsys.exit()\n\tif var3[var5] == 0:\n\t\tvar3[var5] = var4\n\telif var3[var5] != var4:\n\t\tprint('No')\n\t\tsys.exit()\nprint('Yes')",
      "fixed_code": "var0 = input()\nvar1 = input()\nvar6 = []\nvar7 = []\nfor i in range(len(var0)):\n\tif var0[i] not in var6:\n\t\tvar6.append(var0[i])\n\tvar7.append(var6.index(var0[i]))\nvar6 = []\nvar8 = []\nfor i in range(len(var1)):\n\tif var1[i] not in var6:\n\t\tvar6.append(var1[i])\n\tvar8.append(var6.index(var1[i]))\nif var7 == var8:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03797",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nif var0 < var1:\n\tvar2 = var0 + (var1 - var0 * 2) // 4\nelse:\n\tvar2 = var1 / 2 + (var0 - var1 / 2) // 3\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nif var0 < var1:\n\tvar2 = var0 + (var1 - var0 * 2) // 4\nelse:\n\tvar2 = var1 // 2\nprint(var2)"
    }
  },
  {
    "p_name": "p03250",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = sorted([var0, var1, var2])\nprint(var3[2] * 10 + var3[1] + var3[1])",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = sorted([var0, var1, var2])\nprint(var3[2] * 10 + var3[1] + var3[0])"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "import math\nvar0, var1 = map(int, input().split())\nif var1 == 0:\n\tprint(0)\nelse:\n\tprint(math.ceil(var0 * var1 / 2))",
      "fixed_code": "import math\nvar0, var1 = map(int, input().split())\nif var0 > 1 and var1 > 1:\n\tprint(math.ceil(var0 * var1 / 2))\nelif var1 == 1 or var0 == 1:\n\tprint(1)"
    }
  },
  {
    "p_name": "p02957",
    "code": {
      "buggy_code": "var0 = list(map(int, input().split()))\nif (var0[0] + var0[1]) % 2 == 0:\n\tprint((var0[0] + var0[1]) / 2)\nelse:\n\tprint('IMPOSSIBLE')",
      "fixed_code": "var0 = list(map(int, input().split()))\nif (var0[0] + var0[1]) % 2 == 0:\n\tprint(int((var0[0] + var0[1]) / 2))\nelse:\n\tprint('IMPOSSIBLE')"
    }
  },
  {
    "p_name": "p03617",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = int(input())\nvar1 = min(2 * var0, var1)\nvar2 = min(2 * var1, var2)\nvar3 = min(2 * var2, var3)\nvar5 = 0\nvar5 += var4 // 2 * var3\nvar4 = var4 % 2.0\nvar5 += var4 // 1 * var2\nvar4 = var4 % 1.0\nvar5 += var4 // 0.5 * var1\nvar4 = var4 % 0.5\nvar5 += var4 // 0.25 * var0\nprint(int(var5))",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = int(input())\nvar1 = min(2 * var0, var1)\nvar2 = min(2 * var1, var2)\nvar3 = min(2 * var2, var3)\nvar5 = 0\nvar5 += var4 // 2 * var3\nvar4 = var4 % 2\nvar5 += var4 * var2\nprint(int(var5))"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "var0, var1 = map(float, input().split())\nvar1 *= 100\nvar1 = round(var1)\nprint(var0 * var1 // 100)",
      "fixed_code": "var0, var1 = map(float, input().split())\nvar0 = int(var0)\nvar1 *= 100\nvar1 = round(var1)\nprint(var0 * var1 // 100)"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "var0 = input().split()\nvar1 = int(var0[0])\nvar2 = float(var0[1])\nvar2 = int(var2 * 100)\nvar3 = str(var1 * var2)\nif len(var3) > 2:\n\tprint(int(var3[0:-2]))\nelse:\n\tprint(0)",
      "fixed_code": "import decimal\nvar0 = input().split()\nvar1 = decimal.Decimal(var0[0])\nvar2 = decimal.Decimal(var0[1])\nprint(int(var1 * var2))"
    }
  },
  {
    "p_name": "p02747",
    "code": {
      "buggy_code": "var0 = input()\nfor i in range(1, 100):\n\tif var0 in 'hi' * i:\n\t\tprint('Yes')\n\t\tbreak\n\telse:\n\t\tpass\nelse:\n\tprint('No')",
      "fixed_code": "var0 = input()\nfor i in range(1, 6):\n\tif var0 == 'hi' * i:\n\t\tprint('Yes')\n\t\tbreak\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02676",
    "code": {
      "buggy_code": "k = int(input())\nvar0 = str(input())\nif k > len(var0):\n\tprint(var0)\nelse:\n\tprint(var0[0:k] + '...')",
      "fixed_code": "k = int(input())\nvar0 = str(input())\nif k >= len(var0):\n\tprint(var0)\nelse:\n\tprint(var0[0:k] + '...')"
    }
  },
  {
    "p_name": "p02866",
    "code": {
      "buggy_code": "import math\nimport collections\nvar0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 998244353\nvar3 = collections.Counter(var1)\nvar4 = 1\nfor i in range(len(dict(var3))):\n\tvar5 = var3[i]\n\tif var5 != 1:\n\t\tvar4 *= math.factorial(var5)\nvar4 *= var3[1]\nprint(var4 % var2)",
      "fixed_code": "import collections\nvar0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 998244353\nif var1[0] != 0:\n\tprint(0)\n\texit()\nvar3 = dict(collections.Counter(var1))\nif var3[0] == 1:\n\tvar6 = max(var3)\n\tfor i in range(var6):\n\t\tif i not in var3:\n\t\t\tprint(0)\n\t\t\texit()\n\tvar4 = 1\n\tfor i in range(var6):\n\t\tvar7 = var3[i]\n\t\tvar8 = var3[i + 1]\n\t\tvar4 *= var7 ** var8 % var2\n\tprint(var4 % var2)\nelse:\n\tprint(0)"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "import io, sys\nsys.setrecursionlimit(10 ** 6)\n\ndef method0():\n\tvar0 = int(input())\n\tvar1 = list(map(int, sys.stdin.readline().rstrip().split()))\n\tvar2 = 1\n\tfor var3 in var1:\n\t\tvar2 *= var3\n\t\tif var2 > 10 ** 18:\n\t\t\tvar2 = -1\n\t\t\tbreak\n\tprint(var2)\nmethod0()",
      "fixed_code": "import io, sys\nsys.setrecursionlimit(10 ** 6)\n\ndef method0():\n\tvar0 = int(input())\n\tvar1 = list(map(int, sys.stdin.readline().rstrip().split()))\n\tvar2 = 1\n\tif 0 in var1:\n\t\tvar2 = 0\n\telse:\n\t\tfor var3 in var1:\n\t\t\tvar2 *= var3\n\t\t\tif var2 > 10 ** 18:\n\t\t\t\tvar2 = -1\n\t\t\t\tbreak\n\tprint(var2)\nmethod0()"
    }
  },
  {
    "p_name": "p02765",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var0 >= 10:\n\tprint(var1)\nelse:\n\tprint(var1 - 100 * (10 - var0))",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 >= 10:\n\tprint(var1)\nelse:\n\tprint(var1 + 100 * (10 - var0))"
    }
  },
  {
    "p_name": "p02693",
    "code": {
      "buggy_code": "k = int(input())\nvar0, var1 = map(int, input().split())\nfor i in range(var0, var1 + 1):\n\ti % k == 0\n\tprint('OK')\n\texit()\nprint('NG')",
      "fixed_code": "k = int(input())\nvar0, var1 = map(int, input().split())\nfor i in range(var0, var1 + 1):\n\tif i % k == 0:\n\t\tprint('OK')\n\t\texit()\nprint('NG')"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = var0 * var1\nif var2 % 2 == 0:\n\tvar3 = var2 // 2\nelse:\n\tvar3 = var2 // 2 + 1\nprint(var3)",
      "fixed_code": "import sys\nvar0, var1 = map(int, input().split())\nvar2 = var0 * var1\nif var0 == 1 or var1 == 1:\n\tprint(1)\n\tsys.exit()\nif var2 % 2 == 0:\n\tvar3 = var2 // 2\nelse:\n\tvar3 = var2 // 2 + 1\nprint(var3)"
    }
  },
  {
    "p_name": "p03011",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nprint(var0 + var1)",
      "fixed_code": "var3 = list(map(int, input().split()))\nvar3.sort()\nprint(var3[0] + var3[1])"
    }
  },
  {
    "p_name": "p03250",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = 10 * var0 + var1 + var2\nvar4 = var0 + 10 * var1 + var2\nvar5 = var2 * 10 + var0 + var1\nprint(max(var3, var4))",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = 10 * var0 + var1 + var2\nvar4 = var0 + 10 * var1 + var2\nvar5 = var2 * 10 + var0 + var1\nprint(max(var3, var4, var5))"
    }
  },
  {
    "p_name": "p03073",
    "code": {
      "buggy_code": "import sys\nvar0 = '10010010'\nvar1 = list(var0)\nvar2 = len(var0)\nif len(var0) % 2 == 0:\n\tvar3 = list('01' * int(var2 / 2))\n\tvar4 = list('10' * int(var2 / 2))\nelse:\n\tvar3 = list('01' * (var2 // 2) + '0')\n\tvar4 = list('10' * (var2 // 2) + '1')\nvar5 = 0\nvar6 = 0\nfor var7, var8 in zip(var1, var3):\n\tif var7 != var8:\n\t\tvar5 = var5 + 1\nfor var7, var9 in zip(var1, var4):\n\tif var7 != var9:\n\t\tvar6 = var6 + 1\nprint(min(var5, var6))",
      "fixed_code": "import sys\nvar0 = input()\nvar1 = list(var0)\nvar2 = len(var0)\nif len(var0) % 2 == 0:\n\tvar3 = list('01' * int(var2 / 2))\n\tvar4 = list('10' * int(var2 / 2))\nelse:\n\tvar3 = list('01' * (var2 // 2) + '0')\n\tvar4 = list('10' * (var2 // 2) + '1')\nvar5 = 0\nvar6 = 0\nfor var7, var8 in zip(var1, var3):\n\tif var7 != var8:\n\t\tvar5 = var5 + 1\nfor var7, var9 in zip(var1, var4):\n\tif var7 != var9:\n\t\tvar6 = var6 + 1\nprint(min(var5, var6))"
    }
  },
  {
    "p_name": "p03136",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar1.sort\nif sum(var1[:-1]) > var1[-1]:\n\tvar2 = 'Yes'\nelse:\n\tvar2 = 'No'\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar1.sort()\nif sum(var1[:-1]) > var1[-1]:\n\tvar2 = 'Yes'\nelse:\n\tvar2 = 'No'\nprint(var2)"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "var0, var1 = map(str, input().split())\nvar2 = int(var0)\nvar3 = int(var1.replace('.', ''))\nprint(int(var2 * var3 / 100))",
      "fixed_code": "var0, var1 = map(str, input().split())\nvar2 = int(var0)\nvar3 = int(var1.replace('.', ''))\nprint(var2 * var3 // 100)"
    }
  },
  {
    "p_name": "p02388",
    "code": {
      "buggy_code": "def method0(var0):\n\treturn var0 ** 3\n\ndef method1():\n\tvar0 = int(input('Enter a number to be cubed: '))\n\tprint(method0(var0))\nif __name__ == '__main__':\n\tmethod1()",
      "fixed_code": "def method0(var0):\n\treturn var0 ** 3\n\ndef method1():\n\tvar0 = int(input())\n\tprint(method0(var0))\nif __name__ == '__main__':\n\tmethod1()"
    }
  },
  {
    "p_name": "p02909",
    "code": {
      "buggy_code": "var0 = input()\nif var0 == 'Sunny':\n\tprint('Cloudy')\nelif var0 == 'Cloudy':\n\tprint('Rainy')\nelse:\n\tprint('Rainy')",
      "fixed_code": "var1 = input()\nif var1 == 'Sunny':\n\tprint('Cloudy')\nelif var1 == 'Cloudy':\n\tprint('Rainy')\nelse:\n\tprint('Sunny')"
    }
  },
  {
    "p_name": "p02891",
    "code": {
      "buggy_code": "var0 = input()\nk = int(input())\nvar1 = 0\nif len(var0) == 1:\n\tprint(k // 2)\nelse:\n\tif var0[0] == var0[-1]:\n\t\tvar2 = 1\n\t\tfor i in range(1, len(var0)):\n\t\t\tif var0[0] == var0[i]:\n\t\t\t\tvar2 += 1\n\t\t\telse:\n\t\t\t\tbreak\n\t\tvar3 = 1\n\t\tfor i in range(len(var0) - 2, -1, -1):\n\t\t\tif var0[-1] == var0[i]:\n\t\t\t\tvar3 += 1\n\t\t\telse:\n\t\t\t\tbreak\n\t\tif var2 == len(var0):\n\t\t\tvar1 = var2 * k // 2\n\t\t\tk = 1\n\t\telse:\n\t\t\tvar1 = (var2 + var3) // 2\n\telse:\n\t\tvar2 = var3 = 0\n\tif var2 + var3 < len(var0):\n\t\tvar4 = var0[var2]\n\t\tvar5 = 1\n\t\tfor i in range(var2 + 1, len(var0) - var3):\n\t\t\tif var4 == var0[i]:\n\t\t\t\tvar5 += 1\n\t\t\t\tif var5 & 2:\n\t\t\t\t\tvar1 += 1\n\t\t\telse:\n\t\t\t\tvar4 = var0[i]\n\t\t\t\tvar5 = 1\n\tprint(var1 * k)",
      "fixed_code": "var0 = input()\nk = int(input())\nif len(var0) == 1:\n\tprint(k // 2)\nelse:\n\tvar6 = 0\n\tif var0[0] == var0[-1]:\n\t\tvar2 = 1\n\t\tfor i in range(1, len(var0)):\n\t\t\tif var0[0] == var0[i]:\n\t\t\t\tvar2 += 1\n\t\t\telse:\n\t\t\t\tbreak\n\t\tvar3 = 1\n\t\tfor i in range(len(var0) - 2, -1, -1):\n\t\t\tif var0[-1] == var0[i]:\n\t\t\t\tvar3 += 1\n\t\t\telse:\n\t\t\t\tbreak\n\t\tif var2 == len(var0):\n\t\t\tvar6 = var2 * k // 2\n\t\t\tk = 1\n\t\telse:\n\t\t\tvar6 = var2 // 2 + var3 // 2 + (var2 + var3) // 2 * (k - 1)\n\telse:\n\t\tvar2 = var3 = 0\n\tvar7 = 0\n\tif var2 + var3 < len(var0):\n\t\tvar4 = var0[var2]\n\t\tvar5 = 1\n\t\tfor i in range(var2 + 1, len(var0) - var3):\n\t\t\tif var4 == var0[i]:\n\t\t\t\tvar5 += 1\n\t\t\t\tif var5 == 2:\n\t\t\t\t\tvar7 += 1\n\t\t\t\t\tvar5 = 0\n\t\t\telse:\n\t\t\t\tvar4 = var0[i]\n\t\t\t\tvar5 = 1\n\tvar7 *= k\n\tprint(var6 + var7)"
    }
  },
  {
    "p_name": "p03854",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = len(var0)\nvar2 = [False] * (var1 + 1)\nvar2[1] = True\nvar3 = ['dream', 'dreamer', 'erase', 'eraser']\nfor i in range(var1 + 1):\n\tif var2[i]:\n\t\tvar4 = ''\n\t\tif i + 5 <= var1:\n\t\t\tfor var5 in range(5):\n\t\t\t\tvar4 += var0[i + var5 - 1]\n\t\t\tif var4 in var3:\n\t\t\t\tvar2[i + 5] = True\n\t\tif i + 6 <= var1:\n\t\t\tvar4 += var0[i + 4]\n\t\t\tif var4 in var3:\n\t\t\t\tvar2[i + 6] = True\n\t\tif i + 7 <= var1:\n\t\t\tvar4 += var0[i + 5]\n\t\t\tif var4 in var3:\n\t\t\t\tvar2[i + 7] = True\nif var2[var1]:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0 = input()\nvar1 = len(var0)\nvar2 = [False] * (var1 + 1)\nvar3 = ['dream', 'dreamer', 'erase', 'eraser']\nif var0[:5] in var3:\n\tvar2[5] = True\nif var0[:6] in var3:\n\tvar2[6] = True\nif var0[:7] in var3:\n\tvar2[7] = True\nfor i in range(var1 + 1):\n\tif var2[i]:\n\t\tvar4 = ''\n\t\tif i + 5 <= var1:\n\t\t\tfor var5 in range(5):\n\t\t\t\tvar4 += var0[i + var5]\n\t\t\tif var4 in var3:\n\t\t\t\tvar2[i + 5] = True\n\t\tif i + 6 <= var1:\n\t\t\tvar4 += var0[i + 5]\n\t\t\tif var4 in var3:\n\t\t\t\tvar2[i + 6] = True\n\t\tif i + 7 <= var1:\n\t\t\tvar4 += var0[i + 6]\n\t\t\tif var4 in var3:\n\t\t\t\tvar2[i + 7] = True\nif var2[var1]:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p02730",
    "code": {
      "buggy_code": "var0 = input()\n\ndef method0(var1):\n\tvar2 = True\n\tfor i in range(int(len(var1) / 2)):\n\t\tif var1[i] != var1[-1 - i]:\n\t\t\tvar2 = False\n\t\t\tbreak\n\treturn var2\nif method0(var0[0:int((len(var0) - 1) / 2)]):\n\tif method0(var0[int((len(var0) + 3) / 2 - 1):]):\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = input()\n\ndef method0(var1):\n\tvar2 = True\n\tfor i in range(int(len(var1) / 2)):\n\t\tif var1[i] != var1[-1 - i]:\n\t\t\tvar2 = False\n\t\t\tbreak\n\treturn var2\nif method0(var0[0:int((len(var0) - 1) / 2)]):\n\tif method0(var0[int((len(var0) + 3) / 2 - 1):]):\n\t\tif method0(var0):\n\t\t\tprint('Yes')\n\t\telse:\n\t\t\tprint('No')\n\telse:\n\t\tprint('No')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 2019\nif var0 <= var2 and var1 <= var2:\n\tprint(var0 * var1 % var2)\nelse:\n\tprint(2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar1 = min(var1, var0 + 673)\nvar3 = 2018\nfor i in range(var0, var1 + 1):\n\tfor j in range(i + 1, var1 + 1):\n\t\tvar3 = min(var3, i * j % 2019)\nprint(var3)"
    }
  },
  {
    "p_name": "p03632",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nif var1 < var2 or var0 > var3:\n\tprint(0)\nelif var3 > var1 > var2:\n\tprint(var1 - var2)\nelif var3 > var0 > var2:\n\tprint(var3 - var0)\nelse:\n\tprint(min(var1 - var0, var3 - var2))",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nif var1 <= var2 or var0 >= var3:\n\tprint(0)\nelif var3 >= var1 > var2 and var0 <= var2:\n\tprint(var1 - var2)\nelif var1 >= var3 > var0 and var2 <= var0:\n\tprint(var3 - var0)\nelse:\n\tprint(min(var1 - var0, var3 - var2))"
    }
  },
  {
    "p_name": "p02747",
    "code": {
      "buggy_code": "import re\nvar0 = re.search('{(hi)+}', input())\nif var0:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "import re\nvar0 = re.fullmatch('(hi)+', input())\nif var0:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03427",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = input()\n\tvar1 = len(var0)\n\tif all(('9' == var2 for var2 in var0)):\n\t\tprint(var1 * 9)\n\telif var1 == 1:\n\t\tprint(var0)\n\telif var0[0] == '1':\n\t\tprint(9 * (var1 - 1))\n\telse:\n\t\tprint(int(var0[0]) - 1 + 9 * (var1 - 1))\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "def method0():\n\tvar1 = int(input())\n\tvar0 = str(var1)\n\tvar3 = len(var0)\n\tif var3 == 1:\n\t\treturn print(var1)\n\tif var0[1] == '9':\n\t\tvar4 = var0[0] + var0[1] + '9' * (var3 - 2)\n\t\tif int(var4) > var1:\n\t\t\tvar4 = int(var4) - 10 ** (var3 - 1)\n\t\t\tvar4 = str(var4)\n\telse:\n\t\tvar4 = str(int(var0[0]) - 1) + '9' + '9' * (var3 - 2)\n\tvar5 = 0\n\tfor var6 in var4:\n\t\tvar5 += int(var6)\n\tprint(var5)\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p03611",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nvar1 = [int(i) for i in input().split()]\nvar2 = []\nvar3 = math.ceil(sum(var1) / var0)\nvar2 = var1.count(var3 - 1) + var1.count(var3) + var1.count(var3 + 1)\nprint(var2)",
      "fixed_code": "import collections\nvar0 = int(input())\nvar4 = sorted(list(map(int, input().split())))\nvar2 = 1\nvar5 = collections.Counter(var4)\nvar6 = [0] * (max(var4) + 1)\nfor i in var5.keys():\n\tvar6[i] = var5[i]\nfor i in range(len(var6)):\n\tvar2 = max(var2, sum(var6[i:i + 3]))\nprint(var2)"
    }
  },
  {
    "p_name": "p03136",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = map(int, input().split())\nvar2 = sum(var1)\nvar3 = 0\nfor var4 in var1:\n\tif var4 > var2:\n\t\tvar3 = 1\nif var3 == 0:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = int(input())\nvar1 = [int(i) for i in input().split()]\nvar2 = sum(var1)\nvar5 = max(var1)\nif var5 < var2 - var5:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p04011",
    "code": {
      "buggy_code": "var0 = int(input())\nk = int(input())\nvar1 = int(input())\nvar2 = int(input())\nif var0 <= k:\n\tprint(var0 * var1)\nelse:\n\tprint(var0 * var1 + (k - var0) * var2)",
      "fixed_code": "var0 = int(input())\nk = int(input())\nvar1 = int(input())\nvar2 = int(input())\nif var0 <= k:\n\tprint(var0 * var1)\nelse:\n\tprint(k * var1 + (var0 - k) * var2)"
    }
  },
  {
    "p_name": "p02612",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = var0 // 1000\nvar2 = var1 + 1\nprint(f'{1000 * var2 - var0}')",
      "fixed_code": "var0 = int(input())\nvar1 = var0 // 1000\nif var0 % 1000 != 0:\n\tvar2 = var1 + 1\n\tprint(f'{1000 * var2 - var0}')\nelse:\n\tprint('0')"
    }
  },
  {
    "p_name": "p03659",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [int(i) for i in input().split()]\nvar2 = 0\nk = sum(var1)\nvar3 = 3 * 10 ** 5\nfor i in range(var0 - 1):\n\tvar2 += var1[i]\n\tif var3 > abs(2 * var2 - k):\n\t\tvar3 = abs(2 * var2 - k)\nprint(var3)",
      "fixed_code": "var0 = int(input())\nvar1 = [int(i) for i in input().split()]\nvar2 = 0\nk = sum(var1)\nvar3 = 2 * 10 ** 9\nfor i in range(var0 - 1):\n\tvar2 += var1[i]\n\tif var3 > abs(2 * var2 - k):\n\t\tvar3 = abs(2 * var2 - k)\nprint(var3)"
    }
  },
  {
    "p_name": "p02711",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 0\nfor i in range(3):\n\tif var0[i] == 7:\n\t\tvar1 = var1 + 1\nif var1 != 1:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = input()\nvar1 = 0\nfor i in range(3):\n\tif var0[i] == '7':\n\t\tvar1 = var1 + 1\nif var1 >= 1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02922",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = var0\nwhile True:\n\tif var2 >= var1:\n\t\tbreak\n\tvar2 += var0 - 1\nprint(-(-var2 // var0))",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = var0\nif var1 == 1:\n\tprint(0)\n\texit()\nvar3 = 1\nwhile True:\n\tif var2 >= var1:\n\t\tbreak\n\tvar2 += var0 - 1\n\tvar3 += 1\nprint(var3)"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split()))\nvar2 = var0 * var1\nfor i in range(var0, min(var1, var0 + 2020)):\n\tfor j in range(i + 1, min(var1 + 1, i + 2021)):\n\t\tvar2 = min(var2, i * j // 2019)\nprint(var2)",
      "fixed_code": "var0, var1 = list(map(int, input().split()))\nvar2 = var0 * var1\nfor i in range(var0, min(var1, var0 + 2020)):\n\tfor j in range(i + 1, min(var1 + 1, i + 2021)):\n\t\tvar2 = min(var2, i * j % 2019)\nprint(var2)"
    }
  },
  {
    "p_name": "p03001",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = [int(i) for i in input().split()]\nif var0 == var1:\n\tprint('{:.10f}'.format(var0 * var1 / 2), 1)\nelse:\n\tvar4 = 0\n\tif var0 < var1:\n\t\tvar4 = var1 * min(var0 - var2, var2)\n\telse:\n\t\tvar4 = var0 * min(var1 - var3, var3)\n\tprint('{:.10f}'.format(var4), 0)",
      "fixed_code": "var0, var1, var2, var3 = [int(i) for i in input().split()]\nprint('{:.10f}'.format(var0 * var1 / 2), int(2 * var2 == var0 and 2 * var3 == var1))"
    }
  },
  {
    "p_name": "p03495",
    "code": {
      "buggy_code": "var0, k = map(int, input().split())\nvar1 = [int(i) for i in input().split()]\nvar2 = {}\nfor i in var1:\n\tif i in var2:\n\t\tvar2[i] += 1\n\telse:\n\t\tvar2[i] = 1\nvar3 = []\nfor i in var2:\n\tvar3.append(var2[i])\nprint(sum(var3[0:-2]))",
      "fixed_code": "var0, k = map(int, input().split())\nvar1 = [int(i) for i in input().split()]\nvar2 = {}\nfor i in var1:\n\tif i in var2:\n\t\tvar2[i] += 1\n\telse:\n\t\tvar2[i] = 1\nvar3 = []\nfor i in var2:\n\tvar3.append(var2[i])\nvar3.sort()\nprint(sum(var3[0:-k]))"
    }
  },
  {
    "p_name": "p03069",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = input()\nvar2 = 0\nvar3 = 0\nfor i in range(var0 - 1):\n\tif var1[i:i + 2] == '#.':\n\t\tvar2 += 1\nfor i in range(var0 - 1):\n\tif var1[i] == '#':\n\t\tvar3 += 1\nprint(min(var2, var3))",
      "fixed_code": "var0 = int(input())\nvar1 = input()\nvar4 = [0] * var0\nvar5 = [0] * var0\nvar6 = []\nif var1[0] == '#':\n\tvar4[0] = 1\nif var1[var0 - 1] == '.':\n\tvar5[var0 - 1] = 1\nfor i in range(var0 - 1):\n\tif var1[i + 1] == '#':\n\t\tvar4[i + 1] = var4[i] + 1\n\telse:\n\t\tvar4[i + 1] = var4[i]\n\tif var1[var0 - i - 2] == '.':\n\t\tvar5[var0 - i - 2] = var5[var0 - i - 1] + 1\n\telse:\n\t\tvar5[var0 - i - 2] = var5[var0 - i - 1]\nvar6.append(var4[var0 - 1])\nvar6.append(var5[0])\nfor i in range(var0 - 1):\n\tvar6.append(var4[i] + var5[i + 1])\nprint(min(var6))"
    }
  },
  {
    "p_name": "p02957",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif abs(var0 - var1) % 2 == 0:\n\tprint(abs(var0 - var1) // 2)\nelse:\n\tprint('IMPOSSIBLE')",
      "fixed_code": "var0, var1 = map(int, input().split())\nif abs(var0 - var1) % 2 == 0:\n\tprint((var0 + var1) // 2)\nelse:\n\tprint('IMPOSSIBLE')"
    }
  },
  {
    "p_name": "p02663",
    "code": {
      "buggy_code": "def method0():\n\tvar0, var1, var2, var3, var4 = map(int, input().split(' '))\n\tvar5 = var2 * 60 + var3 - var4 - var0 * 60 + var1\n\tprint(var5)\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "def method0():\n\tvar0, var1, var2, var3, var4 = map(int, input().split(' '))\n\tif var2 != 0:\n\t\tvar2 = var2 * 60\n\tif var0 != 0:\n\t\tvar0 = var0 * 60\n\tvar5 = var2 + var3 - var4 - var0 - var1\n\tprint(var5)\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02841",
    "code": {
      "buggy_code": "var0, var1 = [int(var2) for var2 in input().split()]\nvar3, var4 = [int(var2) for var2 in input().split()]\nif var1 + 1 == var4:\n\tprint('No')\nelse:\n\tprint('Yes')",
      "fixed_code": "var0, var1 = [int(var2) for var2 in input().split()]\nvar3, var4 = [int(var2) for var2 in input().split()]\nif var1 + 1 == var4:\n\tprint('0')\nelse:\n\tprint('1')"
    }
  },
  {
    "p_name": "p03145",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nif var0 ** 2 + var1 ** 2 == var2 ** 2:\n\tprint(var0 * var1 / 2)\nelif var1 ** 2 + var2 ** 2 == var0 ** 2:\n\tprint(var1 * var2 / 2)\nelse:\n\tprint(var2 * var0 / 2)",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nif var0 ** 2 + var1 ** 2 == var2 ** 2:\n\tprint(var0 * var1 // 2)\nelif var1 ** 2 + var2 ** 2 == var0 ** 2:\n\tprint(var1 * var2 // 2)\nelse:\n\tprint(var2 * var0 // 2)"
    }
  },
  {
    "p_name": "p03351",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nif var2 - var1 <= var3:\n\tif var1 - var0 <= var3:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\nelif var2 - var0 <= var3:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nif abs(var2 - var1) <= var3:\n\tif abs(var1 - var0) <= var3:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\nelif abs(var2 - var0) <= var3:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03471",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = [-1, -1, -1]\nfor var3 in range(var0 + 1):\n\tfor var4 in range(var0 - var3):\n\t\tvar5 = int(var1 / 1000) - 10 * var3 - 5 * var4\n\t\tif 0 <= var5 and var5 <= var0 - var3 - var4:\n\t\t\tvar6 = True\n\t\t\tvar2 = [var3, var4, var5]\n\t\t\tbreak\nprint(var2[0], var2[1], var2[2])\n'\\var0\t\tif 0<= var1/1000 + 12*var3 + 5*var4 <= var0+1-var3-var4:\\var0\t\t\tprint(var3,var4,var5)\\var0\t\t\tbreak\\var0'",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = [-1, -1, -1]\nfor var3 in range(var0 + 1):\n\tfor var4 in range(var0 + 1 - var3):\n\t\tvar5 = int(var1 / 1000) - 10 * var3 - 5 * var4\n\t\tif 0 <= var5 and var5 == var0 - var3 - var4:\n\t\t\tvar6 = True\n\t\t\tvar2 = [var3, var4, var5]\n\t\t\tbreak\nprint(var2[0], var2[1], var2[2])\n'\\var0\t\tif 0<= var1/1000 + 12*var3 + 5*var4 <= var0+1-var3-var4:\\var0\t\t\tprint(var3,var4,var5)\\var0\t\t\tbreak\\var0'"
    }
  },
  {
    "p_name": "p03145",
    "code": {
      "buggy_code": "var0 = list(map(int, input().split()))\nvar0.sort()\nprint((var0[0] + var0[1]) / 2)",
      "fixed_code": "var0 = list(map(int, input().split()))\nvar0.sort()\nprint(var0[0] * var0[1] // 2)"
    }
  },
  {
    "p_name": "p03012",
    "code": {
      "buggy_code": "import sys\nvar0 = int(sys.stdin.readline())\nvar1 = [int(var2) for var2 in sys.stdin.readline().rstrip().split()]\nvar3 = sum(var1)\nvar4 = var3 // 2\nvar5 = 0\nvar6 = 0\nfor i in range(var0):\n\tvar7 = var5\n\tvar5 += var1[i]\n\tif var5 > var4:\n\t\tbreak\nvar8 = abs(2 * var7 - var3)\nvar9 = abs(2 * var5 - var3)\nif var8 > var9:\n\tprint(i + 1)\nelse:\n\tprint(i)",
      "fixed_code": "import sys\nvar0 = int(sys.stdin.readline())\nvar1 = [int(var2) for var2 in sys.stdin.readline().rstrip().split()]\nvar3 = sum(var1)\nvar4 = var3 // 2\nvar5 = 0\nvar6 = 0\nfor i in range(var0):\n\tvar7 = var5\n\tvar5 += var1[i]\n\tif var5 > var4:\n\t\tbreak\nvar8 = abs(2 * var7 - var3)\nvar9 = abs(2 * var5 - var3)\nprint(min(var8, var9))"
    }
  },
  {
    "p_name": "p02891",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = int(input())\nif len(set(var0)) == 1:\n\tprint(len(var0) * var1 // 2)\n\texit(0)\nwhile var0[0] == var0[-1]:\n\tvar0 = var0[1:] + var0[:1]\nimport itertools\nvar2 = 0\nfor var3, var4 in itertools.groupby(var0):\n\tvar5 = len(list(var4))\n\tvar2 += var5 // 2\nprint(var2 * var1)",
      "fixed_code": "var0 = input()\nvar1 = int(input())\nimport itertools\nif len(set(var0)) == 1:\n\tprint(len(var0) * var1 // 2)\nelif var0[0] != var0[-1]:\n\tvar6 = 0\n\tfor var3, var4 in itertools.groupby(var0):\n\t\tvar6 += len(list(var4)) // 2\n\tprint(var6 * var1)\nelse:\n\tvar7 = 0\n\tvar8 = 0\n\tvar6 = 0\n\tvar9 = True\n\tfor var3, var4 in itertools.groupby(var0):\n\t\tvar10 = len(list(var4))\n\t\tif var9:\n\t\t\tvar7 = var10\n\t\t\tvar9 = False\n\t\telse:\n\t\t\tvar8 = var10\n\t\t\tvar6 += var10 // 2\n\tvar6 -= var10 // 2\n\tprint(var6 * var1 + (var7 + var8) // 2 * (var1 - 1) + var7 // 2 + var8 // 2)"
    }
  },
  {
    "p_name": "p02612",
    "code": {
      "buggy_code": "var0 = int(input())\nprint(1000 - var0 % 1000)",
      "fixed_code": "var0 = int(input())\nif var0 % 1000 == 0:\n\tprint(0)\n\texit()\nprint(1000 - var0 % 1000)"
    }
  },
  {
    "p_name": "p03210",
    "code": {
      "buggy_code": "var0 = int(input())\nif var0 == 3 or 5 or 7:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0 = int(input())\nif var0 == 3 or var0 == 5 or var0 == 7:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p02571",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = input()\nvar2 = len(var1)\n\ndef method0(var3, var4):\n\tvar5 = len(var3)\n\tvar5 -= len([i for i, j in zip(var3, var4) if i == j])\n\treturn var5\nvar6 = 1000000000\nfor i in range(len(var0)):\n\tvar6 = min(var6, method0(var1, var0[i:i + var2]))\nprint(var6)",
      "fixed_code": "var0 = input()\nvar1 = input()\nvar2 = len(var1)\n\ndef method0(var3, var4):\n\tvar5 = len(var3)\n\tvar5 -= len([i for i, j in zip(var3, var4) if i == j])\n\treturn var5\nvar6 = 1000000000\nfor i in range(len(var0)):\n\tif i + var2 <= len(var0):\n\t\tvar6 = min(var6, method0(var1, var0[i:i + var2]))\nprint(var6)"
    }
  },
  {
    "p_name": "p02639",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = list(map(int, input().split()))\n\tfor i in range(0, len(var0)):\n\t\tif var0[i] == 0:\n\t\t\treturn i\nprint(method0())",
      "fixed_code": "def method0():\n\tvar0 = list(map(int, input().split()))\n\tfor i in range(0, len(var0)):\n\t\tif var0[i] == 0:\n\t\t\treturn i + 1\nprint(method0())"
    }
  },
  {
    "p_name": "p02865",
    "code": {
      "buggy_code": "print('Yes')",
      "fixed_code": "var0 = int(input())\nvar1 = (var0 - 1) // 2\nprint(var1)"
    }
  },
  {
    "p_name": "p02947",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nvar1 = {}\n\ndef method0(var0, var2):\n\treturn math.factorial(var0) // (math.factorial(var0 - var2) * math.factorial(var2))\nfor var3 in range(var0):\n\tvar4 = ''.join(sorted(list(input())))\n\tif var4 in var1:\n\t\tvar1[var4] = var1[var4] + 1\n\telse:\n\t\tvar1[var4] = 1\nvar5 = 0\nprint(var1)\nfor k in var1.values():\n\tif k >= 2:\n\t\tvar5 += method0(k, 2)\n\telse:\n\t\tvar5 = var5\nprint(var5)",
      "fixed_code": "import math\nvar0 = int(input())\nvar1 = {}\n\ndef method0(var0, var2):\n\treturn math.factorial(var0) // (math.factorial(var0 - var2) * math.factorial(var2))\nfor var3 in range(var0):\n\tvar4 = ''.join(sorted(list(input())))\n\tif var4 in var1:\n\t\tvar1[var4] = var1[var4] + 1\n\telse:\n\t\tvar1[var4] = 1\nvar5 = 0\nfor k in var1.values():\n\tif k >= 2:\n\t\tvar5 += method0(k, 2)\n\telse:\n\t\tvar5 = var5\nprint(var5)"
    }
  },
  {
    "p_name": "p02700",
    "code": {
      "buggy_code": "import math\nvar0, var1, var2, var3 = map(int, input().split())\nvar4 = math.ceil(var2 / var1)\nvar5 = math.ceil(var0 / var3)\nif var4 > var5:\n\tprint('Yes')\nelif var4 == var5:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "import math\nvar0, var1, var2, var3 = map(int, input().split())\nvar4 = math.ceil(var2 / var1)\nvar5 = math.ceil(var0 / var3)\nif var4 > var5:\n\tprint('No')\nelif var4 == var5:\n\tprint('Yes')\nelse:\n\tprint('Yes')"
    }
  },
  {
    "p_name": "p02953",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [int(i) for i in input().split()]\nvar1[0] -= 1\nvar2 = [True]\nif len(var1) == 1:\n\tprint('Yes')\nelse:\n\tfor i in range(1, var0):\n\t\tif var1[i - 1] < var1[i]:\n\t\t\tvar1[i] -= 1\n\t\telif var1[i - 1] > var1[1]:\n\t\t\tprint('No')\n\t\t\texit()\n\tprint('Yes')",
      "fixed_code": "var0 = int(input())\nvar1 = [int(i) for i in input().split()]\nvar1[0] -= 1\nvar2 = [True]\nif len(var1) == 1:\n\tprint('Yes')\nelse:\n\tfor i in range(1, var0):\n\t\tif var1[i] > var1[i - 1]:\n\t\t\tvar1[i] -= 1\n\t\telif var1[i] < var1[i - 1]:\n\t\t\tprint('No')\n\t\t\texit()\n\tprint('Yes')"
    }
  },
  {
    "p_name": "p03029",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nprint((var0 ** 3 + var1) // 2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nprint((var0 * 3 + var1) // 2)"
    }
  },
  {
    "p_name": "p02836",
    "code": {
      "buggy_code": "var0 = list(input())\nvar1 = len(var0)\nvar2 = 0\nfor var3 in range(var1):\n\tif var0[var3] != var0[var1 - var3 - 1]:\n\t\tvar2 = var2 + 1\nprint(var2 / 2)",
      "fixed_code": "var0 = list(input())\nvar1 = len(var0)\nvar2 = 0\nfor var3 in range(var1):\n\tif var0[var3] != var0[var1 - var3 - 1]:\n\t\tvar2 = var2 + 1\nprint(round(var2 / 2))"
    }
  },
  {
    "p_name": "p02608",
    "code": {
      "buggy_code": "import itertools\nimport math\nvar0 = int(input())\nvar1 = int(math.sqrt(var0))\n\ndef method0(var2, var3, var4):\n\treturn var2 ** 2 + var3 ** 2 + var4 ** 2 + var2 * var3 + var3 * var4 + var4 * var2\n\ndef method1(var5):\n\tvar6 = [0] * (var5 + 1)\n\tfor var7, (var2, var3, var4) in enumerate(itertools.product(''.join(map(str, range(1, var1 + 1))), var8=3)):\n\t\tvar9 = method0(int(var2), int(var3), int(var4))\n\t\tif var9 <= var0:\n\t\t\tvar6[var9] += 1\n\treturn var6\nvar10 = method1(var0)\nfor i in range(1, var0 + 1):\n\tprint(var10[i])",
      "fixed_code": "import itertools\nimport math\nvar0 = int(input())\nvar1 = int(math.sqrt(var0)) + 1\n\ndef method0(var2, var3, var4):\n\treturn var2 ** 2 + var3 ** 2 + var4 ** 2 + var2 * var3 + var3 * var4 + var4 * var2\n\ndef method1(var5):\n\tvar6 = [0] * (var5 + 1)\n\tfor var7, (var2, var3, var4) in enumerate(itertools.product(range(1, var1 + 1), var8=3)):\n\t\tvar9 = method0(int(var2), int(var3), int(var4))\n\t\tif var9 <= var0:\n\t\t\tvar6[var9] += 1\n\treturn var6\nvar10 = method1(var0)\nfor i in range(1, var0 + 1):\n\tprint(var10[i])"
    }
  },
  {
    "p_name": "p03220",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1, var2 = map(int, input().split())\nvar3 = [int(i) for i in input().split()]\nvar4 = 9999999\nvar5 = 0\nfor var6, var7 in enumerate(var3):\n\tvar8 = var2 - (var1 - var7 * 0.006)\n\tif var4 >= var8:\n\t\tvar4 = var8\n\t\tvar5 = var6 + 1\nprint(var5)",
      "fixed_code": "var0 = int(input())\nvar1, var2 = map(int, input().split())\nvar3 = [int(i) for i in input().split()]\nvar4 = 9999999\nvar5 = 0\nfor var6, var7 in enumerate(var3):\n\tvar8 = abs(var2 - (var1 - var7 * 0.006))\n\tif var4 >= var8:\n\t\tvar4 = var8\n\t\tvar5 = var6 + 1\nprint(var5)"
    }
  },
  {
    "p_name": "p03309",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nfor i in range(var0):\n\tvar2 += var1[i] - (i + 1)\nvar3 = var2 // var0\nvar4 = 99999999\nfor var5 in range(var3 - 5, var3 + 5):\n\tvar2 = 0\n\tfor i in range(var0):\n\t\tvar2 += abs(var1[i] - (var5 + (i + 1)))\n\tvar4 = min(var4, var2)\nprint(var4)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar6 = sorted([var1[i] - (i + 1) for i in range(var0)])\nif len(var1) != 1:\n\tvar3 = var6[int((len(var1) - 1) / 2)]\n\tvar7 = var6[int((len(var1) - 1) / 2 + 1)]\n\tvar8 = sum([abs(var6[i] - var3) for i in range(var0)])\n\tvar9 = sum([abs(var6[i] - var7) for i in range(var0)])\n\tprint(min(var8, var9))\nelse:\n\tprint('0')"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "import math\nvar0, var1 = input().split()\nvar0 = int(var0)\nvar1 = float(var1)\nprint(math.floor(var0 * var1))",
      "fixed_code": "import decimal\nvar0, var1 = input().split()\nvar0 = decimal.Decimal(var0)\nvar1 = decimal.Decimal(var1)\nprint(int(var0 * var1))"
    }
  },
  {
    "p_name": "p04011",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = int(input())\nvar2 = int(input())\nvar3 = int(input())\nprint(int(var1 * var2 + (var0 - var1) * var3))",
      "fixed_code": "var0 = int(input())\nvar1 = int(input())\nvar2 = int(input())\nvar3 = int(input())\nif var0 >= var1:\n\tprint(var1 * var2 + (var0 - var1) * var3)\nelse:\n\tprint(var0 * var2)"
    }
  },
  {
    "p_name": "p02613",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = []\nvar2 = []\nvar3 = []\nvar4 = []\nfor i in range(var0):\n\tvar5 = str(input())\n\tif var5 == 'var1':\n\t\tvar1.append(var5)\n\telif var5 == 'var2':\n\t\tvar2.append(var5)\n\telif var5 == 'var3':\n\t\tvar3.append(var5)\n\telif var5 == 'var4':\n\t\tvar4.append(var5)\nprint('var1 × ' + str(len(var1)))\nprint('var2 × ' + str(len(var2)))\nprint('var3 × ' + str(len(var3)))\nprint('var4 × ' + str(len(var4)))",
      "fixed_code": "var0 = int(input())\nvar1 = []\nvar2 = []\nvar3 = []\nvar4 = []\nfor i in range(var0):\n\tvar5 = str(input())\n\tif var5 == 'var1':\n\t\tvar1.append(var5)\n\telif var5 == 'var2':\n\t\tvar2.append(var5)\n\telif var5 == 'var3':\n\t\tvar3.append(var5)\n\telif var5 == 'var4':\n\t\tvar4.append(var5)\nprint('var1 x ' + str(len(var1)))\nprint('var2 x ' + str(len(var2)))\nprint('var3 x ' + str(len(var3)))\nprint('var4 x ' + str(len(var4)))"
    }
  },
  {
    "p_name": "p03377",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nif var0 < var1 and var1 > var2:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nif var0 <= var2 <= var0 + var1:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p02694",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 100\nvar2 = 0\nwhile var1 < var0:\n\tvar1 *= 1.01\n\tvar2 += 1\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = 100\nvar2 = 0\nwhile var1 < var0:\n\tvar1 *= 1.01\n\tvar2 += 1\n\tvar1 = int(var1)\nprint(var2)"
    }
  },
  {
    "p_name": "p02701",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = []\nvar2 = 0\nfor i in range(var0):\n\tvar3 = input()\n\tvar4 = len(var1)\n\tfor j in range(var4):\n\t\tif var3 == var1[j]:\n\t\t\tvar2 += 1\n\tif var2 == 0:\n\t\tvar1.append(var3)\nprint(len(var1))",
      "fixed_code": "var0 = int(input())\nvar1 = []\nfor i in range(var0):\n\tvar3 = input()\n\tvar1.append(var3)\nprint(len(set(var1)))"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "def method0():\n\treturn int(input())\n\ndef method1():\n\treturn map(int, input().split())\n\ndef method2():\n\treturn list(map(int, input().split()))\nvar0, var1 = map(float, input().split())\nvar0 = int(var0)\nvar1 = int(100 * var1)\nprint(var0 * var1 // 100)",
      "fixed_code": "def method0():\n\treturn int(input())\n\ndef method1():\n\treturn map(int, input().split())\n\ndef method2():\n\treturn list(map(int, input().split()))\nvar0, var1 = map(str, input().split())\nvar0 = int(var0)\nvar2, var3 = var1.split('.')\nvar2 = int(var2)\nvar3 = int(var3)\nvar4 = var0 * var2 + var0 * var3 // 100\nprint(var4)"
    }
  },
  {
    "p_name": "p02842",
    "code": {
      "buggy_code": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10 ** 9)\n\ndef method0(var0=int):\n\treturn map(var0, input().split())\n\ndef method1(var1=int):\n\treturn tuple(method0(var1))\n\ndef method2(var1=int):\n\treturn list(method0(var1))\nfrom fractions import gcd\n\ndef method3():\n\tvar2 = int(input())\n\tfor i in range(var2):\n\t\tif int(i * 1.08) == var2:\n\t\t\tprint(i)\n\t\t\treturn\n\tprint(':(')\nmethod3()",
      "fixed_code": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10 ** 9)\n\ndef method0(var0=int):\n\treturn map(var0, input().split())\n\ndef method1(var1=int):\n\treturn tuple(method0(var1))\n\ndef method2(var1=int):\n\treturn list(method0(var1))\nfrom fractions import gcd\n\ndef method3():\n\tvar2 = int(input())\n\tfor i in range(var2 + 100):\n\t\tif int(i * 1.08) == var2:\n\t\t\tprint(i)\n\t\t\treturn\n\tprint(':(')\nmethod3()"
    }
  },
  {
    "p_name": "p02887",
    "code": {
      "buggy_code": "var0 = input()\nk = 1\nfor var1, var2 in zip(var0[:-1], var0[1:]):\n\tif var1 == var2:\n\t\tk += 1\nprint(k)",
      "fixed_code": "var3 = input()\nvar0 = input()\nk = 1\nfor var1, var2 in zip(var0[:-1], var0[1:]):\n\tif var1 != var2:\n\t\tk += 1\nprint(k)"
    }
  },
  {
    "p_name": "p03293",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = input()\nfor i in range(len(var0)):\n\tif var0[i:] + var0[:i] == var1:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')",
      "fixed_code": "var0 = input()\nvar1 = input()\nvar2 = 0\nfor i in range(len(var0)):\n\tif var0[i:] + var0[:i] == var1:\n\t\tvar2 = 1\n\t\tbreak\nif var2 == 1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03434",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar1.sort()\nvar2 = 0\nvar3 = 0\nfor var4, var5 in enumerate(var1):\n\tif var4 % 2 == 0:\n\t\tvar2 += var5\n\telse:\n\t\tvar3 += var5\nprint(var2 - var3)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar1.sort(var6=True)\nvar2 = 0\nvar3 = 0\nfor var4, var5 in enumerate(var1):\n\tif var4 % 2 == 0:\n\t\tvar2 += var5\n\telse:\n\t\tvar3 += var5\nprint(var2 - var3)"
    }
  },
  {
    "p_name": "p02881",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = 10 ** 12\n\tfor i in range(1, int(var1 ** 0.5)):\n\t\tif var1 % i == 0:\n\t\t\tvar0 = min(var0, i + var1 // i - 2)\n\tprint(var0)\nif __name__ == '__main__':\n\tvar1 = int(input())\n\tmethod0()",
      "fixed_code": "def method0():\n\tvar0 = 10 ** 12\n\tfor i in range(1, int(var1 ** 0.5) + 1):\n\t\tif var1 % i == 0:\n\t\t\tvar0 = min(var0, i + var1 // i - 2)\n\tif var1 == 2:\n\t\tprint(1)\n\telif var1 == 3:\n\t\tprint(2)\n\telse:\n\t\tprint(var0)\nif __name__ == '__main__':\n\tvar1 = int(input())\n\tmethod0()"
    }
  },
  {
    "p_name": "p02754",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nprint(var0 // (var1 + var2) * var1 + var0 % (var1 + var2))",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = var0 // (var1 + var2) * var1 + min(var0 % (var1 + var2), var1)\nprint(var3)"
    }
  },
  {
    "p_name": "p02681",
    "code": {
      "buggy_code": "var0 = str(input())\nvar1 = str(input())\nif len(var0) - len(var1) == 1:\n\tif var0 == var1[:-1]:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = str(input())\nvar1 = str(input())\nif var0 == var1[:-1]:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02571",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = input()\nvar2 = len(var0)\nvar3 = len(var1)\nvar4 = 10 ** 9\nvar5 = 0\nif var1 in var0:\n\tprint('0')\nelse:\n\tfor var6 in range(0, var2 - var3):\n\t\tfor i in range(0, var3):\n\t\t\tif var1[i] != var0[var6 + i]:\n\t\t\t\tvar5 += 1\n\t\tvar4 = min(var4, var5)\n\t\tvar5 = 0\n\tprint(var4)",
      "fixed_code": "var0 = input()\nvar1 = input()\nvar2 = len(var0)\nvar3 = len(var1)\nvar4 = 10 ** 20\nvar5 = 0\nfor var6 in range(0, var2 - var3 + 1):\n\tvar5 = 0\n\tfor i in range(0, var3):\n\t\tif var1[i] != var0[var6 + i]:\n\t\t\tvar5 += 1\n\tvar4 = min(var4, var5)\nprint(var4)"
    }
  },
  {
    "p_name": "p03329",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [[float('inf') for i in range(var0 + 1)] for j in range(2)]\nvar1[0][0] = 0\nvar1[1][0] = 0\n\ndef method0(var2, var3):\n\t\n\tvar4 = 0\n\twhile var2 >= var3 ** var4:\n\t\tvar4 += 1\n\treturn var4 - 1\nvar5 = method0(var0, 9)\nvar6 = method0(var0, 6)\nfor i in range(var5, 0, -1):\n\tfor j in range(var0 + 1):\n\t\tif j - 9 ** i >= 0:\n\t\t\tvar1[0][j] = min(var1[0][j], var1[0][j - 9 ** i] + 1)\nfor i in range(var6, 0, -1):\n\tfor j in range(var0 + 1):\n\t\tif j - 6 ** i >= 0:\n\t\t\tvar1[1][j] = min(var1[1][j], var1[1][j - 6 ** i] + 1)\n\t\tif j - 9 ** i >= 0:\n\t\t\tvar1[1][j] = min(var1[1][j], var1[0][j - 9 ** i] + 1)\nvar7 = var1[1][var0]\nfor i in range(1, min(var0 + 1, 6)):\n\tvar7 = min(var7, var1[1][var0 - i] + i)\nprint(var7)",
      "fixed_code": "var0 = int(input())\nvar1 = [float('inf') for i in range(var0 + 1)]\nvar1[0] = 0\nif var0 >= 6:\n\tvar1[6] = 1\n\ndef method0(var2, var3):\n\t\n\tvar4 = 0\n\twhile var2 >= var3 ** var4:\n\t\tvar4 += 1\n\treturn var4 - 1\nvar5 = method0(var0, 9)\nvar6 = method0(var0, 6)\nfor i in range(var6, 0, -1):\n\tfor j in range(var0 + 1):\n\t\tif j - 6 ** i >= 0:\n\t\t\tvar1[j] = min(var1[j], var1[j - 6 ** i] + 1)\nfor i in range(var5, 0, -1):\n\tfor j in range(var0 + 1):\n\t\tif j - 9 ** i >= 0:\n\t\t\tvar1[j] = min(var1[j], var1[j - 9 ** i] + 1)\nvar7 = var1[var0]\nfor i in range(1, min(var0 + 1, 6)):\n\tvar7 = min(var7, var1[var0 - i] + i)\nprint(var7)"
    }
  },
  {
    "p_name": "p02922",
    "code": {
      "buggy_code": "var0 = list(map(int, input().split()))\nif var0[1] == 0:\n\tprint(0)\n\texit()\nif var0[0] >= var0[1]:\n\tprint(1)\n\texit()\nimport math\nprint(math.ceil((var0[1] - 1) / (var0[0] - 1)))",
      "fixed_code": "var0 = list(map(int, input().split()))\nif var0[1] == 1:\n\tprint(0)\n\texit()\nelif var0[1] <= var0[0]:\n\tprint(1)\n\texit()\nimport math\nvar1 = math.ceil((var0[1] - 1) / (var0[0] - 1))\nprint(var1)"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = sorted(map(int, input().split()))\nvar2 = var1[0]\nfor i in range(1, var0):\n\tvar2 = var2 * var1[i]\nprint(-1 if var2 >= 10 ** 18 else var2)",
      "fixed_code": "var0 = int(input())\nvar1 = sorted(map(int, input().split()))\nvar2 = var1[0]\nfor i in range(1, var0):\n\tvar2 = var2 * var1[i]\n\tif var2 >= 10 ** 18:\n\t\tbreak\nprint(-1 if var2 > 10 ** 18 else var2)"
    }
  },
  {
    "p_name": "p03544",
    "code": {
      "buggy_code": "var0, var1 = (2, 1)\nfor i in range(int(input()) - 1):\n\tvar0, var1 = (var1, var0 + var1)\nprint(var0)",
      "fixed_code": "var0, var1 = (2, 1)\nfor i in range(int(input())):\n\tvar0, var1 = (var1, var0 + var1)\nprint(var0)"
    }
  },
  {
    "p_name": "p02641",
    "code": {
      "buggy_code": "def method0():\n\tvar0, var1 = map(int, input().split())\n\tif var1 == 0:\n\t\tprint(var0)\n\telse:\n\t\tvar2 = list(map(int, input().split()))\n\t\tvar3 = min(min(var2), var0) - 1\n\t\tvar4 = max(max(var2), var0)\n\t\tvar5 = {}\n\t\tfor var6 in range(var3, var4):\n\t\t\tif var6 in var2:\n\t\t\t\tNone\n\t\t\telse:\n\t\t\t\tvar7 = int(abs(var0 - var6))\n\t\t\t\tif var7 in var5.keys():\n\t\t\t\t\tvar5[var7] = var5[var7] + [var6]\n\t\t\t\telse:\n\t\t\t\t\tvar5[var7] = [var6]\n\t\tvar7 = min(var5.keys())\n\t\tprint(min(var5[var7]))\nmethod0()",
      "fixed_code": "def method0():\n\tvar0, var1 = map(int, input().split())\n\tif var1 == 0:\n\t\tprint(var0)\n\telse:\n\t\tvar2 = list(map(int, input().split()))\n\t\tfor i in range(100):\n\t\t\tvar5 = var0 - i\n\t\t\tif var5 not in var2:\n\t\t\t\tprint(var5)\n\t\t\t\tbreak\n\t\t\tvar5 = var0 + i\n\t\t\tif var5 not in var2:\n\t\t\t\tprint(var5)\n\t\t\t\tbreak\nmethod0()"
    }
  },
  {
    "p_name": "p03035",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var0 >= 13:\n\tprint(var1)\nelif 6 <= var0 <= 12:\n\tprint(var1 / 2)\nelse:\n\tprint(0)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 >= 13:\n\tprint(var1)\nelif 6 <= var0 <= 12:\n\tprint(int(var1 / 2))\nelse:\n\tprint(0)"
    }
  },
  {
    "p_name": "p02718",
    "code": {
      "buggy_code": "import sys\nvar0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = sum(var2)\nvar4 = sorted(var2, var5=True)\nvar6 = var3 // (4 * var1)\nfor i in range(0, var1):\n\tif var4[i] < var6:\n\t\tprint('No')\n\t\tsys.exit()\nprint('Yes')",
      "fixed_code": "import sys\nvar0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = sum(var2)\nvar4 = sorted(var2, var5=True)\nvar6 = var3 / (4 * var1)\nvar7 = 0\nfor i in range(0, var0):\n\tif var4[i] >= var6:\n\t\tvar7 += 1\n\tif var7 == var1:\n\t\tprint('Yes')\n\t\tsys.exit()\nprint('No')"
    }
  },
  {
    "p_name": "p03266",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nif var1 % 2 != 0:\n\tvar2 = (var0 // var1) ** 3\nelse:\n\tvar3 = var1 // 2\n\tvar4 = var0 // var3 - var0 // var1\n\tvar2 = var3 ** 3 + var4 ** 3\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nif var1 % 2 != 0:\n\tvar2 = (var0 // var1) ** 3\nelse:\n\tvar3 = var1 // 2\n\tvar4 = var0 // var3 - var0 // var1\n\tvar2 = (var0 // var1) ** 3 + var4 ** 3\nprint(var2)"
    }
  },
  {
    "p_name": "p02639",
    "code": {
      "buggy_code": "var0 = list(map(int, input().split()))\nprint(var0)\nfor i in range(len(var0)):\n\tif var0[i] == 0:\n\t\tprint(i + 1)",
      "fixed_code": "var0 = list(map(int, input().split()))\nfor i in range(len(var0)):\n\tif var0[i] == 0:\n\t\tprint(i + 1)"
    }
  },
  {
    "p_name": "p03105",
    "code": {
      "buggy_code": "var0 = input().split()\nif int(var0[1]) / int(var0[0]) <= int(var0[2]):\n\tprint(int(int(var0[1]) / int(var0[0])))\nelse:\n\tprint(0)",
      "fixed_code": "var0 = input().split()\nif int(int(var0[1]) / int(var0[0])) <= int(var0[2]):\n\tprint(int(int(var0[1]) / int(var0[0])))\nelse:\n\tprint(var0[2])"
    }
  },
  {
    "p_name": "p03720",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = []\nfor i in range(var1):\n\tvar3, var4 = map(int, input().split())\n\tvar2.append(var3)\n\tvar2.append(var4)\nfor i in range(var0):\n\tprint(var2.count(i))",
      "fixed_code": "var2 = []\nvar0, var1 = map(int, input().split())\nfor i in range(var1):\n\tvar3, var4 = map(int, input().split())\n\tvar2.append(var3)\n\tvar2.append(var4)\nfor i in range(1, var0 + 1):\n\tprint(var2.count(i))"
    }
  },
  {
    "p_name": "p03000",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = [0] * (var0 + 1)\nfor i in range(1, var0 + 1):\n\tvar3[i] = var3[i - 1] + var2[i - 1]\nfor i in range(var0 + 1):\n\tif var1 < var3[i]:\n\t\tprint(i)\n\t\texit()\n\telif var1 == var3[i]:\n\t\tprint(i - 1)",
      "fixed_code": "import bisect\nvar0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = [0] * (var0 + 1)\nfor i in range(1, var0 + 1):\n\tvar3[i] = var3[i - 1] + var2[i - 1]\nfor i in range(var0 + 1):\n\tif var1 == var3[i]:\n\t\tprint(bisect.bisect_right(var3, var1))\n\t\texit()\nprint(bisect.bisect_left(var3, var1))"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nif var0 ** 0.5 + var1 ** 0.5 < var2 ** 0.5:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nif var0 + var1 < var2 and (var0 + var1 - var2) ** 2 > 4 * var0 * var1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "import sys\ninput = sys.stdin.readline\nif __name__ == '__main__':\n\tvar0, var1 = input().split()\n\tprint(int(int(var0) * float(var1)))",
      "fixed_code": "import sys\ninput = sys.stdin.readline\nif __name__ == '__main__':\n\tvar0, var1 = input().split()\n\tvar2 = int(var0)\n\tvar3 = round(float(var1) * 100)\n\tprint(var2 * var3 // 100)"
    }
  },
  {
    "p_name": "p03416",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nfor i in range(var0, var1):\n\tvar3 = str(i)\n\tif var3 == var3[::-1]:\n\t\tvar2 += 1\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nfor i in range(var0, var1 + 1):\n\tvar3 = str(i)\n\tif var3 == var3[::-1]:\n\t\tvar2 += 1\nprint(var2)"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "import sys\nimport math\nimport fractions\nfrom collections import defaultdict\nvar0 = sys.var0\nvar1 = lambda: var0.readline().rstrip()\nvar2 = lambda: int(var0.readline().rstrip())\nvar3 = lambda: map(int, var0.readline().split())\nvar4 = lambda: list(map(int, var0.readline().split()))\nvar5, var6 = map(str, var0.readline().split())\nvar7 = float(var5)\nvar8 = float(var6)\nprint(math.floor(var7 * var8))",
      "fixed_code": "import sys\nimport math\nimport fractions\nfrom collections import defaultdict\nvar0 = sys.var0\nvar1 = lambda: var0.readline().rstrip()\nvar2 = lambda: int(var0.readline().rstrip())\nvar3 = lambda: map(int, var0.readline().split())\nvar4 = lambda: list(map(int, var0.readline().split()))\nvar5, var6 = map(str, var0.readline().split())\nvar7 = int(var5)\nvar9 = list(var6)\nvar10 = int(var9[0])\nvar6 = int(var9[2])\nvar11 = int(var9[3])\nvar12 = 0\nvar12 += var10 * var7\nvar12 += var7 * var6 // 10\nvar12 += var7 * var11 // 100\nif 10 <= var7 * var6 % 10 + var7 * var11 % 100 // 10:\n\tvar12 += 1\nprint(var12)"
    }
  },
  {
    "p_name": "p03610",
    "code": {
      "buggy_code": "var0 = input()\nfor i in range(len(var0)):\n\tif i % 2 == 0:\n\t\tprint(var0[i])",
      "fixed_code": "var0 = input()\nvar1 = ''\nfor i in range(0, len(var0), 2):\n\tvar1 += var0[i]\nprint(var1)"
    }
  },
  {
    "p_name": "p03631",
    "code": {
      "buggy_code": "var0 = input()\nprint('Yes' if var0 == reversed(var0) else 'No')",
      "fixed_code": "var0 = input()\nprint('Yes' if var0 == var0[::-1] else 'No')"
    }
  },
  {
    "p_name": "p02612",
    "code": {
      "buggy_code": "var0 = int(input())\nprint(var0 % 1000)",
      "fixed_code": "var0 = int(input())\nif var0 % 1000 == 0:\n\tprint(0)\nelse:\n\tprint(1000 - var0 % 1000)"
    }
  },
  {
    "p_name": "p03042",
    "code": {
      "buggy_code": "var0 = input()\nif 0 < int(var0[:2]) <= 12 and 0 < int(var0[2:]) <= 12:\n\tprint('AMBIGUOUS')\nelif (int(var0[:2]) > 12 or int(var0[:2]) == 0) and 0 < int(var0[2:]) <= 12:\n\tprint('YYMM')\nelif 0 < int(var0[:2]) <= 12 and (int(var0[2:]) > 12 or int(var0[:2]) == 0):\n\tprint('MMYY')\nelse:\n\tprint('NA')",
      "fixed_code": "var0 = input()\nif 0 < int(var0[:2]) <= 12 and 0 < int(var0[2:]) <= 12:\n\tprint('AMBIGUOUS')\nelif (int(var0[:2]) > 12 or int(var0[:2]) == 0) and 0 < int(var0[2:]) <= 12:\n\tprint('YYMM')\nelif 0 < int(var0[:2]) <= 12 and (int(var0[2:]) > 12 or int(var0[2:]) == 0):\n\tprint('MMYY')\nelse:\n\tprint('NA')"
    }
  },
  {
    "p_name": "p02641",
    "code": {
      "buggy_code": "import sys\nvar0, var1 = map(int, input().split())\nif var1 == 0:\n\tprint(var0)\n\tsys.exit()\nvar2 = list(map(int, input().split()))\nfor i in range(250):\n\tif var0 - i not in var2:\n\t\tprint(var0 + i)\n\t\tsys.exit()\n\tif var0 + i not in var2:\n\t\tprint(var0 + i)\n\t\tsys.exit()",
      "fixed_code": "import sys\nvar0, var1 = map(int, input().split())\nif var1 == 0:\n\tprint(var0)\n\tsys.exit()\nvar2 = list(map(int, input().split()))\nfor i in range(250):\n\tif var0 - i not in var2:\n\t\tprint(var0 - i)\n\t\tsys.exit()\n\tif var0 + i not in var2:\n\t\tprint(var0 + i)\n\t\tsys.exit()"
    }
  },
  {
    "p_name": "p03001",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nif var1 / 2 >= var3 and var0 / 2 >= var2:\n\tvar4 = var2 * var1\n\tvar5 = var0 * var3\nelif var1 / 2 >= var3 and var0 / 2 < var2:\n\tvar4 = (var0 - var2) * var1\n\tvar5 = var0 * var3\nelif var1 / 2 < var3 and var0 / 2 >= var2:\n\tvar4 = var2 * var1\n\tvar5 = var0 * (var1 - var3)\nelse:\n\tvar4 = (var0 - var2) * var1\n\tvar5 = var0 * (var1 - var3)\nif var4 == var5:\n\tprint(var4, 1)\nelse:\n\tprint(max(var4, var5), 0)",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nif var2 == var0 / 2 and var3 == var1 / 2:\n\tprint(var0 * var1 / 2, 1)\nelse:\n\tprint(var0 * var1 / 2, 0)"
    }
  },
  {
    "p_name": "p03481",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 1\nwhile var0 < var1:\n\tvar0 *= 2\n\tvar2 += 1\nprint(var2 - 1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar3 = 0\nwhile var0 <= var1:\n\tvar0 *= 2\n\tvar3 += 1\nprint(var3)"
    }
  },
  {
    "p_name": "p03137",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar2.sort()\nvar3 = 0\nvar4 = []\nfor i in range(len(var2) - 1):\n\tvar4.append(abs(var2[i] - var2[i + 1]))\nvar4.sort()\nif var1 == 1:\n\tprint(0)\nelse:\n\tprint(sum(var4[0:-(var0 - 1)]))",
      "fixed_code": "import numpy as var5\nvar0, var1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar2.sort()\nvar3 = 0\nvar4 = var5.zeros(var1)\nfor i in range(len(var2) - 1):\n\tvar4[i] = var2[i + 1] - var2[i]\nvar6 = sorted(var4, var7=True)\nprint(int(sum(var6[var0 - 1:])))"
    }
  },
  {
    "p_name": "p02959",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar3 = 0\nfor i in range(var0):\n\tif var2[i] >= sum(var1[i:i + 2]):\n\t\tvar3 += sum(var1[i:i + 2])\n\telif var1[i] >= var2[i]:\n\t\tvar3 += var2[i]\n\telif var1[i] < var2[i]:\n\t\tvar3 += var2[i]\n\t\tvar1[i + 1] -= var2[i] - var1[i]\nprint(var3)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar3 = 0\nfor i in range(var0):\n\tif var2[i] >= sum(var1[i:i + 2]):\n\t\tvar3 += sum(var1[i:i + 2])\n\t\tvar1[i + 1] = 0\n\telif var1[i] >= var2[i]:\n\t\tvar3 += var2[i]\n\telif var1[i] < var2[i]:\n\t\tvar3 += var2[i]\n\t\tvar1[i + 1] -= var2[i] - var1[i]\nprint(var3)"
    }
  },
  {
    "p_name": "p02987",
    "code": {
      "buggy_code": "import collections\nvar0 = input()\nvar0 = list(var0)\nvar0.sort()\nvar1 = 0\nvar2 = collections.Counter(var0)\nif var2 == 2:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "import collections\nvar0 = input()\nvar0 = list(var0)\nvar0.sort()\nvar1 = 0\nvar2 = collections.Counter(var0)\nvar2 = len(var2)\nif var2 == 2:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03543",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 0\nfor i in range(1, 4):\n\tif var0[i] == var0[i - 1]:\n\t\tvar1 += 1\n\telif var1 != 2:\n\t\tvar1 -= 1\nif var1 >= 2:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = input()\nif var0[0] == var0[1] and var0[1] == var0[2] or (var0[1] == var0[2] and var0[2] == var0[3]):\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 10 ** 9\nvar3 = 10 ** 9\nfor var4 in range(var0, min(var1 + 1, var0 + 2019 ** 2)):\n\tif var4 % 2019 < var3:\n\t\tvar3 = var4 % 2019\n\telif var3 < var4 % 2019 < var2:\n\t\tvar2 = var4 % 2019\n\telse:\n\t\tpass\nprint(var2 * var3 % 2019)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 2019\nfor var4 in range(var0, min(var1, var0 + 2019)):\n\tfor var5 in range(var4 + 1, min(var1 + 1, var0 + 2019)):\n\t\tif var2 > var4 * var5 % 2019:\n\t\t\tvar2 = var4 * var5 % 2019\nprint(var2)"
    }
  },
  {
    "p_name": "p02641",
    "code": {
      "buggy_code": "var0, var1 = input().split()\n\ndef method0(var0, var1):\n\tif int(var1) == 0:\n\t\tprint(var0)\n\t\treturn\n\tvar2 = input().split()\n\tvar0 = int(var0)\n\tvar1 = int(var1)\n\tfor i in range(1, 50):\n\t\tvar3 = str(var0 - int(i))\n\t\tvar4 = str(var0 + int(i))\n\t\tif var3 in var2 and var4 in var2:\n\t\t\tcontinue\n\t\telse:\n\t\t\tif var3 not in var2:\n\t\t\t\tprint(var3)\n\t\t\t\treturn\n\t\t\tif var4 not in var2:\n\t\t\t\tprint(var4)\n\t\t\t\treturn\nmethod0(var0, var1)",
      "fixed_code": "var0, var1 = input().split()\nvar0 = int(var0)\nvar1 = int(var1)\n\ndef method0(var0, var1):\n\tif int(var1) == 0:\n\t\tprint(var0)\n\t\treturn\n\tvar2 = input().split()\n\tfor i in range(0, 100):\n\t\tvar3 = str(var0 - int(i))\n\t\tvar4 = str(var0 + int(i))\n\t\tif var3 not in var2 or var4 not in var2:\n\t\t\tif var3 not in var2:\n\t\t\t\tprint(var3)\n\t\t\t\treturn\n\t\t\tif var4 not in var2:\n\t\t\t\tprint(var4)\n\t\t\t\treturn\n\t\tif var3 not in var2 and var4 not in var2:\n\t\t\tprint(var3)\nmethod0(var0, var1)"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "import math\nvar0, var1, var2 = map(int, input().split())\nif math.sqrt(var0) + math.sqrt(var1) < math.sqrt(var2):\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "from decimal import Decimal\nvar0, var1, var2 = map(int, input().split())\nif Decimal(var0).sqrt() + Decimal(var1).sqrt() < Decimal(var2).sqrt():\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02718",
    "code": {
      "buggy_code": "import sys\nsys.setrecursionlimit(100000)\nvar0 = float('inf')\nvar1 = 10 ** 9 + 7\nvar2 = 10 ** (-7)\nvar3, var4 = [int(var5) for var5 in input().split()]\nvar6 = [int(var5) for var5 in input().split()]\nvar7 = sum(var6)\nvar8 = 0\nfor var9 in var6:\n\tif var9 > var7 / (4 * var4):\n\t\tvar8 += 1\nif var8 >= var4:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "import sys\nsys.setrecursionlimit(100000)\nvar0 = float('inf')\nvar1 = 10 ** 9 + 7\nvar2 = 10 ** (-7)\nvar3, var4 = [int(var5) for var5 in input().split()]\nvar6 = [int(var5) for var5 in input().split()]\nvar7 = sum(var6)\nvar8 = 0\nfor var9 in var6:\n\tif var9 * (4 * var4) >= var7:\n\t\tvar8 += 1\nif var8 >= var4:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02681",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = input()\nif var0 == var1[:len(var0) - 2]:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = input()\nvar1 = input()\nif var0 == var1[:len(var0)]:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03288",
    "code": {
      "buggy_code": "var0 = int(input())\nif var0 <= 1199:\n\tprint('ABC')\nelif var0 <= 2800:\n\tprint('ARC')\nelse:\n\tprint('AGC')",
      "fixed_code": "var0 = int(input())\nif var0 <= 1199:\n\tprint('ABC')\nelif var0 <= 2799:\n\tprint('ARC')\nelse:\n\tprint('AGC')"
    }
  },
  {
    "p_name": "p03001",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nif var0 == var2 * 2 and var1 == var3 * 2:\n\tprint(var0 * var1 / 2)\n\tprint(1)\nelse:\n\tvar4 = max(var1 * min(var2, var0 - var2), var0 * min(var3, var1 - var3))\n\tprint(var4)\n\tprint(0)",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nprint(var0 * var1 / 2, int(var0 / 2 == var2 and var1 / 2 == var3))"
    }
  },
  {
    "p_name": "p02773",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = []\nfor i in range(var0):\n\tvar1.append(input())\nvar2 = {}\nfor j in var1:\n\tif j not in var2:\n\t\tvar2[j] = 1\n\telse:\n\t\tvar2[j] += 1\nvar3 = set()\nvar4 = 0\nfor k in var2:\n\tif var2[k] > var4:\n\t\tvar3.clear()\n\t\tvar3.add(k)\n\t\tvar4 = var2[k]\n\tif var2[k] == var4:\n\t\tvar3.add(k)\nfor var5 in var3:\n\tprint(var5)",
      "fixed_code": "var0 = int(input())\nvar1 = []\nfor i in range(var0):\n\tvar1.append(input())\nvar2 = {}\nfor j in var1:\n\tif j not in var2:\n\t\tvar2[j] = 1\n\telse:\n\t\tvar2[j] += 1\nvar3 = set()\nvar4 = 0\nfor k in var2:\n\tif var2[k] > var4:\n\t\tvar3.clear()\n\t\tvar3.add(k)\n\t\tvar4 = var2[k]\n\telif var2[k] == var4:\n\t\tvar3.add(k)\nvar3 = list(var3)\n\ndef method0(var6):\n\tvar6.sort()\n\tfor i in var6:\n\t\tprint(i)\nmethod0(var3)"
    }
  },
  {
    "p_name": "p03545",
    "code": {
      "buggy_code": "def method0():\n\tvar0, var1, var2, var3 = input()\n\tfor i in range(2 ** 3):\n\t\tvar4 = ['+', '+', '+']\n\t\tfor j in range(len(var4)):\n\t\t\tif i >> j & 1:\n\t\t\t\tvar4[j] = '-'\n\t\tif eval(var0 + var4[0] + var1 + var4[1] + var2 + var4[2] + var3) == 7:\n\t\t\tprint(var0 + var4[0] + var1 + var4[1] + var2 + var4[2] + var3 + '=7')\n\t\t\tbreak\n\tmethod0()",
      "fixed_code": "def method0():\n\tvar0, var1, var2, var3 = input()\n\tfor i in range(2 ** 3):\n\t\tvar4 = ['+', '+', '+']\n\t\tfor j in range(len(var4)):\n\t\t\tif i >> j & 1:\n\t\t\t\tvar4[j] = '-'\n\t\tif eval(var0 + var4[0] + var1 + var4[1] + var2 + var4[2] + var3) == 7:\n\t\t\tprint(var0 + var4[0] + var1 + var4[1] + var2 + var4[2] + var3 + '=7')\n\t\t\tbreak\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02880",
    "code": {
      "buggy_code": "var0 = int(input())\ni = 1\nwhile i < 11:\n\tif i == 10:\n\t\tprint('NO')\n\t\tbreak\n\telif var0 % i == 0 and var0 / i < 10:\n\t\tprint('YES')\n\t\tbreak\n\telse:\n\t\ti += 1",
      "fixed_code": "var0 = int(input())\ni = 1\nwhile i < 11:\n\tif i == 10:\n\t\tprint('No')\n\t\tbreak\n\telif var0 % i == 0 and var0 / i < 10:\n\t\tprint('Yes')\n\t\tbreak\n\telse:\n\t\ti += 1"
    }
  },
  {
    "p_name": "p03773",
    "code": {
      "buggy_code": "import sys\nfor var0 in sys.stdin.readlines():\n\tvar1 = var0.strip().split(' ')\n\tvar2 = int(var1[0])\n\tvar3 = int(var1[1])\n\tprint(var2 + var3 % 24)",
      "fixed_code": "import sys\nfor var0 in sys.stdin.readlines():\n\tvar1 = var0.strip().split(' ')\n\tvar2 = int(var1[0])\n\tvar3 = int(var1[1])\n\tprint((var2 + var3) % 24)"
    }
  },
  {
    "p_name": "p02612",
    "code": {
      "buggy_code": "var0 = int(input())\nwhile var0 / 1000 >= 1:\n\tvar0 = var0 - 1000\nprint(var0)",
      "fixed_code": "var0 = int(input())\nvar1 = 0\nwhile var0 - 1000 * var1 >= 1000:\n\tvar1 += 1\nif var0 - 1000 * var1 == 0:\n\tprint(1000 * var1 - var0)\nelse:\n\tprint(1000 * (var1 + 1) - var0)"
    }
  },
  {
    "p_name": "p03042",
    "code": {
      "buggy_code": "var0 = input()\nif int(var0[:1]) <= 12 and int(var0[:1]) >= 1:\n\tif int(var0[2:]) <= 12 and int(var0[2:]) >= 1:\n\t\tprint('AMBIGUOUS')\n\telse:\n\t\tprint('MMYY')\nelif int(var0[:1]) > 12:\n\tif int(var0[2:]) <= 12 and int(var0[2:]) >= 1:\n\t\tprint('YYMM')\n\telse:\n\t\tprint('NA')\nelif int(var0[:1]) == 0:\n\tif int(var0[2:]) < 12 and int(var0[2:]) >= 1:\n\t\tprint('YYMM')\n\telse:\n\t\tprint('NA')",
      "fixed_code": "var0 = input()\nvar1 = int(var0[0]) * 10 + int(var0[1])\nvar2 = int(var0[2]) * 10 + int(var0[3])\nif var2 >= 1 and var2 <= 12:\n\tif var1 >= 1 and var1 <= 12:\n\t\tprint('AMBIGUOUS')\n\telse:\n\t\tprint('YYMM')\nelif var1 >= 1 and var1 <= 12:\n\tprint('MMYY')\nelse:\n\tprint('NA')"
    }
  },
  {
    "p_name": "p02688",
    "code": {
      "buggy_code": "import itertools\nvar0, var1 = map(int, input().split())\nvar2 = [list(map(int, input().split())) for i in range(2 * var1)]\nvar3 = []\nvar4 = 0\nfor i in var2[1::2]:\n\tfor j in i:\n\t\tif not j in var3:\n\t\t\tvar3.append(j)\n\t\telse:\n\t\t\tbreak\n\telse:\n\t\tvar4 += 1\nprint(var4)",
      "fixed_code": "import itertools\nvar0, var1 = map(int, input().split())\nvar2 = [list(map(int, input().split())) for i in range(2 * var1)]\nvar3 = [int(i) for i in range(1, var0 + 1)]\nfor i in var2[1::2]:\n\tfor j in i:\n\t\ttry:\n\t\t\tvar3.remove(j)\n\t\texcept:\n\t\t\tcontinue\nprint(len(var3))"
    }
  },
  {
    "p_name": "p03854",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = len(var0)\nwhile var1 > 0:\n\tif var0[var1 - 5:var1] == 'erase' or var0[var1 - 5:var1] == 'dream':\n\t\tvar1 -= 5\n\telif var0[var1 - 6:var1] == 'eraser':\n\t\tvar1 -= 6\n\telif var0[var1 - 7:var1] == 'dreamer':\n\t\tvar1 -= 7\n\telse:\n\t\tvar1 = -10\n\tprint(var1)\nif var1 == 0:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0 = input()\nvar1 = len(var0)\nwhile var1 > 0:\n\tif var0[var1 - 5:var1] == 'erase' or var0[var1 - 5:var1] == 'dream':\n\t\tvar1 -= 5\n\telif var0[var1 - 6:var1] == 'eraser':\n\t\tvar1 -= 6\n\telif var0[var1 - 7:var1] == 'dreamer':\n\t\tvar1 -= 7\n\telse:\n\t\tvar1 = -10\nif var1 == 0:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p02694",
    "code": {
      "buggy_code": "from decimal import Decimal\nvar0 = int(input())\nvar1 = 100\nvar2 = 0\nwhile True:\n\tvar1 = int(var1 + Decimal(var1 / 100))\n\tvar2 += 1\n\tif var1 >= var0:\n\t\tprint(var2)\n\t\texit()",
      "fixed_code": "var0 = int(input())\nvar1 = 100\nvar2 = 0\nwhile True:\n\tvar1 = var1 + var1 // 100\n\tvar2 += 1\n\tif var1 >= var0:\n\t\tprint(var2)\n\t\texit()"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "def method0():\n\tvar0, var1 = map(int, input().split())\n\tvar2 = [tuple(map(int, input().split())) for _ in range(var1)]\n\tif var0 > 1:\n\t\tif (1, 0) in var2:\n\t\t\tprint(-1)\n\t\t\treturn\n\tif var0 == 1:\n\t\tif set(var2) == {(1, 0)}:\n\t\t\tprint(0)\n\t\t\treturn\n\tvar3 = []\n\tfor i in range(10 ** (var0 - 1), 10 ** var0):\n\t\tvar4 = str(i)\n\t\tif all([var4[var5 - 1] == str(var6) for var5, var6 in var2]):\n\t\t\tvar3.append(i)\n\tif not var3:\n\t\tprint(-1)\n\telse:\n\t\tprint(min(var3))\nmethod0()",
      "fixed_code": "def method0():\n\tvar0, var1 = map(int, input().split())\n\tvar2 = [list(map(int, input().split())) for _ in range(var1)]\n\tvar3 = []\n\tfor i in range(0, 10 ** var0):\n\t\tvar4 = str(i)\n\t\tif var0 == len(var4):\n\t\t\tif all([var4[var5 - 1] == str(var6) for var5, var6 in var2]):\n\t\t\t\tvar3.append(i)\n\tif not var3:\n\t\tprint(-1)\n\telse:\n\t\tprint(min(var3))\nmethod0()"
    }
  },
  {
    "p_name": "p03427",
    "code": {
      "buggy_code": "def method0(var0: int, var1: int) -> int:\n\tif var0 < var1:\n\t\treturn var0\n\telse:\n\t\treturn method0(int(var0 / var1), var1) + var0 % var1\n\ndef method1(var2: int) -> int:\n\tif var2 < 10:\n\t\treturn var2\n\telif str(var2)[0:1] == '1':\n\t\tvar3 = var2 % 10 ** (len(str(var2)) - 1)\n\t\tvar4 = '9' * len(str(var3))\n\t\tvar3 = int(var4)\n\t\treturn max(method0(var2, 10), method0(var3, 10))\n\telse:\n\t\tvar5 = var2 // 10 ** (len(str(var2)) - 1)\n\t\tvar4 = str(var5 - 1) + '9' * (len(str(var2)) - 1)\n\t\tvar3 = int(var4)\n\t\treturn max(method0(var2, 10), method0(var3, 10))\nvar2 = int(input())\nvar6 = method1(var2)\nprint(var6)",
      "fixed_code": "def method0(var2: int) -> int:\n\tvar7 = var2\n\tvar6 = 0\n\twhile var7 > 0:\n\t\tvar6 = var6 + var7 % 10\n\t\tvar7 //= 10\n\treturn var6\n\ndef method2(var2: int) -> int:\n\tvar7 = var2\n\tvar6 = 0\n\twhile var7 > 0:\n\t\tvar6 += 1\n\t\tvar7 //= 10\n\treturn var6\nvar2 = int(input())\nvar8 = method2(var2)\nvar6 = 0\nif var2 >= 2 * 10 ** (var8 - 1):\n\tvar6 = var2 // 10 ** (var8 - 1) - 1\n\tvar6 += 9 * (var8 - 1)\nelif var2 == 2 * 10 ** (var8 - 1) - 1:\n\tvar6 = method0(var2)\nelse:\n\tvar6 = 9 * (var8 - 1)\nvar6 = max(var6, method0(var2))\nprint(var6)"
    }
  },
  {
    "p_name": "p02681",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = input()\nvar2 = 'Yes'\nif len(var0) + 1 == len(var1) and var0 == var1[0:len(var1)]:\n\tvar2 = 'Yes'\nelse:\n\tvar2 = 'No'\nprint(var2)",
      "fixed_code": "var0 = input()\nvar1 = input()\nvar2 = 'Yes'\nif len(var0) + 1 == len(var1) and var0 == var1[0:len(var1) - 1]:\n\tvar2 = 'Yes'\nelse:\n\tvar2 = 'No'\nprint(var2)"
    }
  },
  {
    "p_name": "p03862",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nprint(sum(var2) - (sum((min(var1, var3 + var4) for var3, var4 in zip(var2, var2[1:]))) + min(var2[0], var1) + min(var2[-1], var1)) // 2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar5 = 0\nvar6 = 0\nfor var7 in var2:\n\tvar8 = max(var5 + var7 - var1, 0)\n\tvar6 += var8\n\tvar5 = var7 - var8\nvar5 = 0\nvar9 = 0\nfor var7 in var2:\n\tvar8 = max(var5 + var7 - var1, 0)\n\tvar9 += var8\n\tvar5 = var7 - var8\nprint(min(var6, var9))"
    }
  },
  {
    "p_name": "p03311",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = (sum(var1) - sum(range(1, var0 + 1))) // var0\nvar3 = 0\nfor var4, i in zip(var1, range(1, var0 + 1)):\n\tvar3 += abs(var4 - (var2 + i))\nprint(var3)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar5 = [var4 - i - 1 for i, var4 in enumerate(var1)]\nvar5.sort()\nvar2 = var5[var0 // 2]\nprint(sum((abs(var4 - var2) for var4 in var5)))"
    }
  },
  {
    "p_name": "p02730",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = len(var0)\nvar2 = var0[:(var1 - 1) // 2]\nvar3 = var0[(var1 + 1) // 2:]\nif var0 == var0[::1] and var2 == var2[::-1] and (var3 == var3[::-1]):\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = input()\nvar1 = len(var0)\nvar2 = var0[:(var1 - 1) // 2]\nvar3 = var0[(var1 - 1) // 2 + 1:]\nif var0 == var0[::-1] and var2 == var2[::-1] and (var3 == var3[::-1]):\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02958",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = int(input())\n\tvar1 = [int(i) for i in input().split(' ')]\n\tvar2 = sorted(var1)\n\tvar3 = 0\n\tfor i, j in zip(var1, var2):\n\t\tif i != j:\n\t\t\tvar3 += 1\n\tif var3 == 2:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "def method0():\n\tvar0 = int(input())\n\tvar1 = [int(i) for i in input().split(' ')]\n\tvar2 = sorted(var1)\n\tvar3 = 0\n\tfor i, j in zip(var1, var2):\n\t\tif i != j:\n\t\t\tvar3 += 1\n\tif var3 == 2 or var3 == 0:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02785",
    "code": {
      "buggy_code": "var0, k = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = sorted(var1)[0:-var0]\nprint(sum(var2))",
      "fixed_code": "var0, k = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = sorted(var1)\nif k != 0:\n\tvar2 = var2[:-k]\nprint(sum(var2))"
    }
  },
  {
    "p_name": "p02866",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nif var1[0] != 0:\n\tprint(0)\n\texit()\nvar2 = [0] * var0\nfor var3 in var1[1:]:\n\tvar2[var3] += 1\nif var2[0] != 0:\n\tprint(0)\n\texit()\nvar4 = 1\nfor i in range(var0 - 2):\n\tvar4 *= var2[i + 1] ** var2[i + 2]\nprint(var4)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nif var1[0] != 0:\n\tprint(0)\n\texit()\nvar2 = [0] * var0\nfor var3 in var1[1:]:\n\tvar2[var3] += 1\nif var2[0] != 0:\n\tprint(0)\n\texit()\nvar4 = 1\nfor i in range(var0 - 2):\n\tvar4 = var4 * var2[i + 1] ** var2[i + 2] % 998244353\nprint(var4)"
    }
  },
  {
    "p_name": "p02773",
    "code": {
      "buggy_code": "from collections import defaultdict\nvar0 = int(input())\nvar1 = [input() for _ in range(var0)]\nvar1.sort()\nvar2 = defaultdict(int)\nfor var3 in var1:\n\tvar2[var3] += 1\nvar4 = sorted(var2.items())\nvar5 = var4[len(var4) - 1][1]\nfor k, var6 in var4:\n\tif var6 == var5:\n\t\tprint(k)\n\telse:\n\t\tcontinue",
      "fixed_code": "def method0():\n\timport itertools\n\tfrom operator import itemgetter\n\tvar0 = int(input())\n\tvar7 = [input() for _ in range(var0)]\n\tvar7.sort()\n\tvar4 = []\n\tvar8 = itertools.groupby(var7)\n\tvar9 = 0\n\tfor var10, var11 in var8:\n\t\tvar12 = len(list(var11))\n\t\tvar4.append((var12, var10))\n\t\tif var12 > var9:\n\t\t\tvar9 = var12\n\tvar4.sort(var10=itemgetter(0), var13=True)\n\tvar10 = var4[0][0]\n\tfor k, var6 in var4:\n\t\tif var10 == k:\n\t\t\tprint(var6)\n\t\telse:\n\t\t\tbreak\nmethod0()"
    }
  },
  {
    "p_name": "p03069",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = input()\nvar2 = [0] * var0\nvar3 = [0] * var0\nvar4 = var0\nfor i in range(var0):\n\tvar2[i] += var2[i - 1] + 1 * (var1[i] == '#')\n\tvar3[i] += var3[i - 1] + 1 * (var1[i] == '.')\nvar2 = [0] + var2\nvar3 = [0] + var3\nfor i in range(var0):\n\tvar4 = min(var4, var2[i + 1] + var3[var0] - var3[i + 1])\nprint(var4)",
      "fixed_code": "var0 = int(input())\nvar1 = input()\nvar2 = var1.count('#')\nvar3 = var1.count('.')\nvar5 = [0] * var0\nvar6 = [0] * (var0 + 1)\nvar5[0] = 1 * (var1[0] == '#')\nfor i in range(1, var0):\n\tif var1[i] == '#':\n\t\tvar5[i] = var5[i - 1] + 1\n\telse:\n\t\tvar5[i] = var5[i - 1]\nvar6[var0 - 1] = 1 * (var1[var0 - 1] == '.')\nvar6[var0] = var6[var0 - 1]\nfor i in range(var0 - 2, -1, -1):\n\tif var1[i] == '.':\n\t\tvar6[i] = var6[i + 1] + 1\n\telse:\n\t\tvar6[i] = var6[i + 1]\nvar7 = var0\nfor i in range(var0):\n\tvar7 = min(var7, var5[i] + var6[i + 1])\nprint(min(var7, var2, var3))"
    }
  },
  {
    "p_name": "p03254",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar2.sort()\nvar3 = 0\nvar4 = var1\nfor i in range(var0):\n\tif 0 < var4 - var2[i]:\n\t\tvar4 = var4 - var2[i]\n\t\tvar3 += 1\n\telif var4 == 0:\n\t\tbreak\nif var4 > 0:\n\tvar3 -= 1\nprint(var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar2.sort()\nvar3 = 0\nvar4 = var1\nfor i in range(var0):\n\tif 0 <= var4 - var2[i]:\n\t\tvar4 = var4 - var2[i]\n\t\tvar3 += 1\n\telif var4 == 0:\n\t\tbreak\nif var3 == var0 and var4 > 0:\n\tvar3 -= 1\nprint(var3)"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "import sys\nimport math\nfor var0 in sys.stdin:\n\tvar1, var2 = map(int, var0.split())\n\tif var1 * var2 % 2 == 0:\n\t\tprint(int(var1 * var2 / 2))\n\telse:\n\t\tvar3 = 0\n\t\tfor i in range(7):\n\t\t\tif i % 2 == 0:\n\t\t\t\tvar3 += math.ceil(var2 / 2)\n\t\t\telse:\n\t\t\t\tvar3 += math.floor(var2 / 2)\n\t\tprint(var3)",
      "fixed_code": "import sys\nimport math\nfor var0 in sys.stdin:\n\tvar1, var2 = map(int, var0.split())\n\tif var1 == 1 or var2 == 1:\n\t\tprint(1)\n\telif var1 * var2 % 2 == 0:\n\t\tprint(int(var1 * var2 / 2))\n\telse:\n\t\tprint(math.ceil(var1 * var2 / 2))"
    }
  },
  {
    "p_name": "p03854",
    "code": {
      "buggy_code": "var0 = input().replace('eraser', '').replace('erase', '').replace('dream', '').replace('dreamer', '')\nif var0:\n\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "var0 = input().replace('eraser', '').replace('erase', '').replace('dreamer', '').replace('dream', '')\nif var0:\n\tprint('NO')\nelse:\n\tprint('YES')"
    }
  },
  {
    "p_name": "p03285",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 'No'\nfor i in range(1, 251):\n\tfor j in range(1, 15):\n\t\tif i * 4 + j * 7 == var0:\n\t\t\tvar1 = 'Yes'\n\t\t\tbreak\nprint(var1)",
      "fixed_code": "var0 = int(input())\nvar1 = 'No'\nfor i in range(var0 // 4 + 1):\n\tfor j in range(var0 // 7 + 1):\n\t\tif i * 4 + j * 7 == var0:\n\t\t\tvar1 = 'Yes'\n\t\t\tbreak\nprint(var1)"
    }
  },
  {
    "p_name": "p02582",
    "code": {
      "buggy_code": "var0 = str(input())\nif var0 == 'SSS':\n\tprint(3)\nelif var0 == 'RSS' or var0 == 'SSR':\n\tprint(2)\nelse:\n\tprint(1)",
      "fixed_code": "var0 = str(input())\nif var0 == 'RRR':\n\tprint(3)\nelif var0 == 'RRS' or var0 == 'SRR':\n\tprint(2)\nelif var0 == 'SSS':\n\tprint(0)\nelse:\n\tprint(1)"
    }
  },
  {
    "p_name": "p02676",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = input()\nvar2 = ''\nif len(var1) <= var0:\n\tprint(var1)\nelse:\n\tfor i in range(var0):\n\t\tvar2 += var1[i]\n\tprint(var2, '...')",
      "fixed_code": "var0 = int(input())\nvar1 = input()\nif len(var1) <= var0:\n\tprint(var1)\nelse:\n\tprint(var1[:var0] + '...')"
    }
  },
  {
    "p_name": "p02646",
    "code": {
      "buggy_code": "import sys\nvar0, var1 = map(int, input().split())\nvar2, var3 = map(int, input().split())\nvar4 = int(input())\nfor i in range(var4):\n\tvar0 = var0 + var1\n\tvar2 = var2 + var3\n\tif var0 == var2:\n\t\tprint('YES')\n\t\tsys.exit()\nprint('NO')",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2, var3 = map(int, input().split())\nvar4 = int(input())\nif var0 > var2:\n\tvar0, var2 = (var2, var0)\nvar5 = var0 + var1 * var4\nvar6 = var2 + var3 * var4\nif var5 >= var6:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p03632",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = min(var1, var3) - max(var0, var2)\nprint(var4) if var4 != 0 else print(0)",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = min(var1, var3) - max(var0, var2)\nprint(var4) if var4 > 0 else print(0)"
    }
  },
  {
    "p_name": "p03145",
    "code": {
      "buggy_code": "var0 = list(map(int, input().split()))\nvar0.sort()\nprint(var0[0] * var0[1] / 2)",
      "fixed_code": "var0 = list(map(int, input().split()))\nvar0.sort()\nprint(int(var0[0] * var0[1] / 2))"
    }
  },
  {
    "p_name": "p02970",
    "code": {
      "buggy_code": "import math\nvar0, var1 = map(int, input().split())\nprint(math.ceil(var0 // (2 * var1)))",
      "fixed_code": "import math\nvar0, var1 = map(int, input().split())\nprint(math.ceil(var0 / (2 * var1 + 1)))"
    }
  },
  {
    "p_name": "p03208",
    "code": {
      "buggy_code": "var0, k = map(int, input().split())\nvar1 = []\nfor i in range(var0):\n\tvar1.append(int(input()))\nvar1.sort()\nvar2 = 10000000000000000\nprint(var1)\nfor i in range(var0 - k + 1):\n\tif var1[i + (k - 1)] - var1[i] <= var2:\n\t\tvar2 = var1[i + (k - 1)] - var1[i]\nprint(var2)",
      "fixed_code": "var0, k = map(int, input().split())\nvar1 = []\nfor i in range(var0):\n\tvar1.append(int(input()))\nvar1 = sorted(var1)\nvar3 = int(10000000000.0)\nfor i in range(var0 - k + 1):\n\tif var3 >= var1[i + (k - 1)] - var1[i]:\n\t\tvar3 = var1[i + (k - 1)] - var1[i]\nprint(var3)"
    }
  },
  {
    "p_name": "p03545",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = ['+', '-']\nfor var2 in var1:\n\tfor var3 in var1:\n\t\tfor var4 in var1:\n\t\t\tvar5 = var0[0] + var2 + var0[1] + var3 + var0[2] + var4 + var0[3]\n\t\t\tif eval(var5) == 7:\n\t\t\t\tprint(var5 + '=7')\n\t\t\t\tbreak",
      "fixed_code": "var0 = input()\nvar1 = ['+', '-']\nfor var2 in var1:\n\tfor var3 in var1:\n\t\tfor var4 in var1:\n\t\t\tvar5 = var0[0] + var2 + var0[1] + var3 + var0[2] + var4 + var0[3]\n\t\t\tif eval(var5) == 7:\n\t\t\t\tvar6 = var5\nprint(var6 + '=7')"
    }
  },
  {
    "p_name": "p03212",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = ['3', '5', '7']\nfor i in range(len(var0) - 1):\n\tvar2 = []\n\tfor var3 in var1:\n\t\tvar2 += ['3' + var3]\n\t\tvar2 += ['5' + var3]\n\t\tvar2 += ['7' + var3]\n\tvar1 += var2\nvar4 = ['5', '7']\nfor i in range(len(var0) - 1):\n\tvar5 = []\n\tfor var6 in var4:\n\t\tvar5 += ['5' + var6]\n\t\tvar5 += ['7' + var6]\n\tvar4 += var5\nvar7 = ['3', '5']\nfor i in range(len(var0) - 1):\n\tvar8 = []\n\tfor var9 in var7:\n\t\tvar8 += ['3' + var9]\n\t\tvar8 += ['5' + var9]\n\tvar7 += var8\nvar10 = ['3', '7']\nfor i in range(len(var0) - 1):\n\tvar11 = []\n\tfor var12 in var10:\n\t\tvar11 += ['3' + var12]\n\t\tvar11 += ['7' + var12]\n\tvar10 += var11\nvar1 = set(var1) - (set(var4) | set(var7) | set(var10))\nvar13 = 0\nfor var3 in var1:\n\tif var3 <= var0:\n\t\tvar13 += 1\nprint(var13)",
      "fixed_code": "var0 = input()\nvar1 = ['3', '5', '7']\nfor i in range(len(var0) - 1):\n\tvar2 = []\n\tfor var3 in var1:\n\t\tvar2 += ['3' + var3]\n\t\tvar2 += ['5' + var3]\n\t\tvar2 += ['7' + var3]\n\tvar1 += var2\nvar4 = ['5', '7']\nfor i in range(len(var0) - 1):\n\tvar5 = []\n\tfor var6 in var4:\n\t\tvar5 += ['5' + var6]\n\t\tvar5 += ['7' + var6]\n\tvar4 += var5\nvar7 = ['3', '5']\nfor i in range(len(var0) - 1):\n\tvar8 = []\n\tfor var9 in var7:\n\t\tvar8 += ['3' + var9]\n\t\tvar8 += ['5' + var9]\n\tvar7 += var8\nvar10 = ['3', '7']\nfor i in range(len(var0) - 1):\n\tvar11 = []\n\tfor var12 in var10:\n\t\tvar11 += ['3' + var12]\n\t\tvar11 += ['7' + var12]\n\tvar10 += var11\nvar1 = set(var1) - (set(var4) | set(var7) | set(var10))\nvar13 = 0\nfor var3 in var1:\n\tif int(var3) <= int(var0):\n\t\tvar13 += 1\nprint(var13)"
    }
  },
  {
    "p_name": "p03329",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = [(var2, var3, var4, var5, var6, var7) for var2 in range(0, 6) for var3 in range(0, 6) for var4 in range(0, 6) for var5 in range(0, 6) for var6 in range(0, 6) for var7 in range(0, 6)]\nvar8 = []\nfor var9 in var1:\n\tvar2, var3, var4, var5, var6, var7 = var9\n\tvar10 = 6 ** 1 * var2 + 6 ** 2 * var3 + 6 ** 3 * var4 + 6 ** 4 * var5 + 6 ** 5 * var6 + 6 ** 6 * var7\n\tif var10 > var0:\n\t\tcontinue\n\telse:\n\t\tvar11 = var0 - var10\n\t\tvar12 = sum(var9)\n\t\tfor i in reversed(range(1, 5)):\n\t\t\tvar13 = var11 // 9 ** i\n\t\t\tvar11 -= 9 ** i * var13\n\t\t\tvar12 += var13\n\t\tvar12 += var11\n\t\tvar8.append(var12)\nprint(min(var8))",
      "fixed_code": "var0 = int(input())\nvar1 = [(var2, var3, var4, var5, var6, var7) for var2 in range(0, 6) for var3 in range(0, 6) for var4 in range(0, 6) for var5 in range(0, 6) for var6 in range(0, 6) for var7 in range(0, 6)]\nvar8 = []\nfor var9 in var1:\n\tvar2, var3, var4, var5, var6, var7 = var9\n\tvar10 = 6 ** 1 * var2 + 6 ** 2 * var3 + 6 ** 3 * var4 + 6 ** 4 * var5 + 6 ** 5 * var6 + 6 ** 6 * var7\n\tif var10 > var0:\n\t\tcontinue\n\telse:\n\t\tvar11 = var0 - var10\n\t\tvar12 = sum(var9)\n\t\tfor i in reversed(range(1, 6)):\n\t\t\tvar13 = var11 // 9 ** i\n\t\t\tvar11 -= 9 ** i * var13\n\t\t\tvar12 += var13\n\t\tvar12 += var11\n\t\tvar8.append(var12)\nprint(str(min(var8)))"
    }
  },
  {
    "p_name": "p03427",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = str(var0)\nvar2 = len(var1)\nprint(int(var1[0]) + 9 * var2)",
      "fixed_code": "var0 = int(input())\nvar1 = str(var0)\nvar2 = len(var1)\nif var1[1:] == '9' * (var2 - 1):\n\tprint(int(var1[0]) + 9 * var2 - 9)\nelse:\n\tprint(int(var1[0]) - 1 + 9 * var2 - 9)"
    }
  },
  {
    "p_name": "p02596",
    "code": {
      "buggy_code": "from sys import stdin\nvar0 = int(stdin.readline().rstrip())\n\ndef method0(var0):\n\tvar1 = 0\n\tfor i in range(1, var0):\n\t\tvar1 = (10 % var0 * var1 + 7) % var0\n\t\tif var1 == 0:\n\t\t\treturn i\n\treturn -1\nprint(method0(var0))",
      "fixed_code": "from sys import stdin\nvar0 = int(stdin.readline().rstrip())\n\ndef method0(var0):\n\tvar1 = 0\n\tfor i in range(1, var0 + 1):\n\t\tvar1 = (10 % var0 * var1 + 7) % var0\n\t\tif var1 == 0:\n\t\t\treturn i\n\treturn -1\nprint(method0(var0))"
    }
  },
  {
    "p_name": "p02693",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1, var2 = map(int, input().split())\nif var2 // var0 - var1 // var0 >= 1:\n\tprint('OK')\nelse:\n\tprint('NG')",
      "fixed_code": "var0 = int(input())\nvar1, var2 = map(int, input().split())\nk = var1\nwhile var1 <= k <= var2:\n\tif k % var0 == 0:\n\t\tprint('OK')\n\t\texit()\n\tk += 1\nprint('NG')"
    }
  },
  {
    "p_name": "p03910",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = []\nwhile var0 != 0:\n\tvar2 = var0 // 2 + 1\n\tvar1.append(var2)\n\tvar0 -= var2\nprint('\\var0'.join(list(map(str, var1))))",
      "fixed_code": "var0 = int(input())\nvar3 = 0\nvar4 = 0\nvar5 = 0\nfor i in range(1, var0 + 1):\n\tvar5 += i\n\tif var5 >= var0:\n\t\tvar4 = i\n\t\tvar3 = var5 - var0\n\t\tbreak\nvar1 = []\nfor i in range(1, var4 + 1):\n\tif i == var3:\n\t\tcontinue\n\tvar1.append(str(i))\nprint('\\var0'.join(var1))"
    }
  },
  {
    "p_name": "p02713",
    "code": {
      "buggy_code": "import math\nfrom functools import reduce\nk = int(input())\n\ndef method0(*var0):\n\treturn reduce(math.method0, var0)\nvar1 = 0\nfor var2 in range(1, k + 1):\n\tvar1 += method0(var2, var2, var2)\nfor var2 in range(1, k + 1):\n\tfor var3 in range(1, k + 1):\n\t\tif var2 != var3:\n\t\t\tvar1 += 3 * method0(var2, var2, var3)\nfor var2 in range(1, k + 1):\n\tfor var3 in range(1, k + 1):\n\t\tfor var4 in range(1, k + 1):\n\t\t\tif var2 != var3 and var2 != var4 and (var3 != var4):\n\t\t\t\tvar1 += 6 * method0(var2, var3, var4)\nprint(var1)",
      "fixed_code": "import math\nfrom functools import reduce\nk = int(input())\n\ndef method0(*var0):\n\treturn reduce(math.method0, var0)\nvar1 = 0\nfor var2 in range(1, k + 1):\n\tvar1 += method0(var2, var2, var2)\nfor var2 in range(1, k + 1):\n\tfor var3 in range(1, k + 1):\n\t\tif var2 != var3:\n\t\t\tvar1 += 3 * method0(var2, var2, var3)\nfor var2 in range(1, k - 1):\n\tfor var3 in range(var2 + 1, k):\n\t\tfor var4 in range(var3 + 1, k + 1):\n\t\t\tvar1 += 6 * method0(var2, var3, var4)\nprint(var1)"
    }
  },
  {
    "p_name": "p02693",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1, var2 = map(int, input().split())\nfor i in range(var1, var2 + 1):\n\tif i % var0 == 0:\n\t\tprint('OK')\n\t\tbreak\nelse:\n\tprint('NO')",
      "fixed_code": "var0 = int(input())\nvar1, var2 = map(int, input().split())\nfor i in range(var1, var2 + 1):\n\tif i % var0 == 0:\n\t\tprint('OK')\n\t\tbreak\nelse:\n\tprint('NG')"
    }
  },
  {
    "p_name": "p02946",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = var1 + var0 - 1\nvar3 = var1 - var0 + 1\nvar4 = []\nif var2 == var3:\n\tprint(var2)\nelif var2 != var3:\n\tvar5 = max(var2, var3)\n\tvar6 = min(var2, var3)\n\tfor i in range(var6, var5 + 1):\n\t\tvar4.append(i)\n\tprint(var4)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = var1 + var0 - 1\nvar3 = var1 - var0 + 1\nvar4 = []\nif var2 == var3:\n\tprint(var2)\nelif var2 != var3:\n\tvar5 = max(var2, var3)\n\tvar6 = min(var2, var3)\n\tfor i in range(var6, var5 + 1):\n\t\tvar4.append(i)\nprint(' '.join((repr(var7) for var7 in var4)))"
    }
  },
  {
    "p_name": "p03673",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = input().split()\nif var0 % 2 == 0:\n\tvar2 = var1[::-2] + var1[::2]\nelse:\n\tvar2 = var1[::-2] + var1[1::2]\nprint(''.join(var2))",
      "fixed_code": "var0 = int(input())\nvar1 = [int(var3) for var3 in input().split()]\nvar4 = [var3 for var0, var3 in enumerate(var1) if (var0 + 1) % 2 == 0]\nvar5 = [var3 for var0, var3 in enumerate(var1) if (var0 + 1) % 2 == 1]\nif var0 % 2 == 0:\n\tvar4.reverse()\n\tvar6 = var4 + var5\nelse:\n\tvar5.reverse()\n\tvar6 = var5 + var4\nprint(*var6)"
    }
  },
  {
    "p_name": "p03838",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif (var0 >= 0 and var1 >= 0 or (var0 < 0 and var1 < 0)) and var0 < var1:\n\tprint(abs(var0 - var1))\nelif (var0 >= 0 and var1 >= 0) and var1 < var0:\n\tprint(abs(var0 - var1 + 2))\nelif (var0 < 0 and var1 < 0) and var1 < var0:\n\tprint(abs(var0 - var1) + 2)\nelif var0 == -var1:\n\tprint(1)\nelse:\n\tprint(abs(abs(var0) - abs(var1)) + (var0 != 0 and var1 != 0))",
      "fixed_code": "var0, var1 = map(int, input().split())\nif (var0 >= 0 and var1 >= 0 or (var0 < 0 and var1 < 0)) and var0 < var1:\n\tprint(abs(var0 - var1))\nelif (var0 >= 0 and var1 >= 0) and var1 < var0:\n\tprint(abs(var0 - var1 + 1 + (var1 != 0)))\nelif (var0 < 0 and var1 < 0) and var1 < var0:\n\tprint(abs(var0 - var1) + 2)\nelif var0 == -var1:\n\tprint(1)\nelse:\n\tprint(abs(abs(var0) - abs(var1)) + (var1 != 0))"
    }
  },
  {
    "p_name": "p03001",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = var0 * var1 / 2\nif var2 == var0 // 2 and var3 == var1 // 2:\n\tprint(var4, 1)\nelse:\n\tprint(var4, 0)",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = var0 * var1 / 2\nif var2 * 2 == var0 and var3 * 2 == var1:\n\tprint(var4, 1)\nelse:\n\tprint(var4, 0)"
    }
  },
  {
    "p_name": "p02729",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nprint(var0 * (var0 - 1) + var1 * (var1 - 1))",
      "fixed_code": "var0, var1 = map(int, input().split())\nprint(int(var0 * (var0 - 1) / 2 + var1 * (var1 - 1) / 2))"
    }
  },
  {
    "p_name": "p02819",
    "code": {
      "buggy_code": "def method0(var0):\n\tvar1 = [True] * (var0 + 1)\n\tvar1[0] = False\n\tvar1[1] = False\n\tfor i in range(2, len(var1)):\n\t\tif var1[i]:\n\t\t\tfor j in range(i, var0 // i + 1):\n\t\t\t\tvar1[i * j] = False\n\treturn var1\nvar0 = 100000\nvar2 = method0(var0)\nvar3 = int(input())\nfor i in range(var3, len(var2)):\n\tif var2[i]:\n\t\tprint(i)\n\t\tbreak",
      "fixed_code": "def method0(var0):\n\tvar1 = [True] * (var0 + 1)\n\tvar1[0] = False\n\tvar1[1] = False\n\tfor i in range(2, len(var1)):\n\t\tif var1[i]:\n\t\t\tfor j in range(i, var0 // i + 1):\n\t\t\t\tvar1[i * j] = False\n\treturn var1\nvar0 = 1000000\nvar2 = method0(var0)\nvar3 = int(input())\nfor i in range(var3, len(var2)):\n\tif var2[i]:\n\t\tprint(i)\n\t\tbreak"
    }
  },
  {
    "p_name": "p03324",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var0 == 0:\n\tvar2 = var1\nelse:\n\tvar2 = 100 ** var0 * var1\nif var1 == 100:\n\tvar2 = 100 ** (var0 + 1) + 100\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 == 0:\n\tvar2 = var1\n\tif var1 == 100:\n\t\tvar2 = 101\nelse:\n\tvar2 = 100 ** var0 * var1\n\tif var1 == 100:\n\t\tvar2 = 100 ** (var0 + 1) + 100 ** var0\nprint(var2)"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "import sys\nsys.setrecursionlimit(1000000)\nvar0, var1 = map(int, input().split())\nvar2 = 673\nif var1 - var0 >= var2 - 1:\n\tprint(0)\n\texit()\nvar3 = var0 % var2\nvar4 = var1 % var2\nvar5 = 2019\nvar6 = 2019\nif var4 > var3:\n\tfor i in range(abs(var3 - var4) + 1):\n\t\tfor j in range(1, abs(var3 - var4) + 2):\n\t\t\tif var3 + i + j > var4:\n\t\t\t\tbreak\n\t\t\tvar7 = (var3 + i) * (var3 + i + j) % var5\n\t\t\tif var6 > var7:\n\t\t\t\tvar6 = var7\n\tprint(var6)\n\texit()\nelse:\n\tprint(0)\n\texit()",
      "fixed_code": "import sys\nsys.setrecursionlimit(1000000)\nvar0, var1 = map(int, input().split())\nvar2 = 673\nif var1 - var0 >= var2 - 1:\n\tprint(0)\n\texit()\nvar5 = 2019\nvar3 = var0 % var5\nvar4 = var1 % var5\nvar6 = 2019\nif var4 > var3:\n\tfor i in range(abs(var3 - var4) + 1):\n\t\tfor j in range(1, abs(var3 - var4) + 2):\n\t\t\tif var3 + i + j > var4:\n\t\t\t\tbreak\n\t\t\tvar7 = (var3 + i) * (var3 + i + j) % var5\n\t\t\tif var6 > var7:\n\t\t\t\tvar6 = var7\n\tprint(var6)\n\texit()\nelse:\n\tprint(0)\n\texit()"
    }
  },
  {
    "p_name": "p02767",
    "code": {
      "buggy_code": "from statistics import mean\nvar0 = int(input())\nvar1 = sorted([int(var2) for var2 in input().split()])\nvar3 = int(mean(var1))\nvar4 = 0\nfor var2 in var1:\n\tvar4 += pow(var2 - var3, 2)\nprint(var4)",
      "fixed_code": "var0 = int(input())\nvar1 = sorted([int(var2) for var2 in input().split()])\nvar3 = round(sum(var1) / len(var1))\nvar4 = 0\nfor var2 in var1:\n\tvar4 += pow(var2 - var3, 2)\nprint(var4)"
    }
  },
  {
    "p_name": "p02641",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 1\nvar4 = float('inf')\nfor i in range(1, 101):\n\tif i in var2:\n\t\tcontinue\n\tif abs(i - var0) < var4 or (abs(i - var0) == var4 and i < var3):\n\t\tvar4 = abs(i - var0)\n\t\tvar3 = i\nprint(var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 1\nvar4 = float('inf')\nfor i in range(0, 102):\n\tif i in var2:\n\t\tcontinue\n\tif abs(i - var0) < var4 or (abs(i - var0) == var4 and i < var3):\n\t\tvar4 = abs(i - var0)\n\t\tvar3 = i\nprint(var3)"
    }
  },
  {
    "p_name": "p02658",
    "code": {
      "buggy_code": "var0 = int(input())\n*var1, = map(int, input().split())\nvar1 = sorted(var1, var2=True)\n\ndef method0(var1):\n\tif 0 in var1:\n\t\treturn 0\n\tvar3 = 1\n\tfor var4 in var1:\n\t\tif var3 > 10 ** 18:\n\t\t\treturn -1\n\t\tvar3 *= var4\n\treturn var3\nprint(method0(var1))",
      "fixed_code": "var0 = int(input())\n*var1, = map(int, input().split())\nvar1 = sorted(var1, var2=True)\n\ndef method0(var1):\n\tif 0 in var1:\n\t\treturn 0\n\tvar3 = 1\n\tfor var4 in var1:\n\t\tvar3 *= var4\n\t\tif var3 > 10 ** 18:\n\t\t\treturn -1\n\treturn var3\nprint(method0(var1))"
    }
  },
  {
    "p_name": "p03220",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1, var2 = map(int, input().split())\nvar3 = list(map(int, input().split()))\nvar4 = [[abs((var1 - var3[i]) * 0.006 - var2), i + 1] for i in range(var0)]\nvar4.sort()\nprint(var4[0][1])",
      "fixed_code": "var0 = int(input())\nvar1, var2 = map(int, input().split())\nvar3 = list(map(int, input().split()))\nvar4 = [[abs(var1 - var3[i] * 0.006 - var2), i + 1] for i in range(var0)]\nvar4.sort()\nprint(var4[0][1])"
    }
  },
  {
    "p_name": "p02718",
    "code": {
      "buggy_code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nvar0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = sum(var2)\nvar4 = len(list(filter(lambda var5: var5 >= var3 // (4 * var1), var2)))\nprint('Yes' if var4 >= var1 else 'No')",
      "fixed_code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nvar0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = sum(var2)\nvar6 = 0\nfor var7 in var2:\n\tif var7 * 4 * var1 >= var3:\n\t\tvar6 += 1\nprint('Yes' if var6 >= var1 else 'No')"
    }
  },
  {
    "p_name": "p02577",
    "code": {
      "buggy_code": "var0 = int(input())\nif var0 % 9 == 0:\n\tprint('yes')\nelse:\n\tprint('no')",
      "fixed_code": "var0 = input()\nvar1 = list(var0)\nvar2 = list(map(int, var1))\nvar3 = sum(var2)\nif var3 % 9 == 0:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02601",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = int(input())\nvar4 = 0\nvar5 = 0\nwhile var3 > 0:\n\tif var0 < var1 * 2 ** var3 and var1 * 2 ** var3 < var2 * 2 ** var5:\n\t\tvar4 += 1\n\tvar3 -= 1\n\tvar5 += 1\nif var4 == 1:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = int(input())\nvar4 = 0\nvar5 = 0\nwhile var3 >= 0:\n\tif var0 < var1 * 2 ** var3 and var1 * 2 ** var3 < var2 * 2 ** var5:\n\t\tvar4 += 1\n\tvar3 -= 1\n\tvar5 += 1\nif var4 >= 1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03030",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = int(input())\n\tvar1 = []\n\tfor i in range(var0):\n\t\tvar2 = input().split()\n\t\tvar1.append((var2[0], var2[1], i + 1))\n\tvar1.sort(var3=lambda var4: var4[1], var5=True)\n\tvar1.sort(var3=lambda var4: var4[0])\n\tprint(*[var4[2] for var4 in var1])\nmethod0()",
      "fixed_code": "def method0():\n\tvar0 = int(input())\n\tvar1 = []\n\tfor i in range(var0):\n\t\tvar2 = input().split()\n\t\tvar1.append((var2[0], int(var2[1]), i + 1))\n\tvar1.sort(var3=lambda var4: var4[1], var5=True)\n\tvar1.sort(var3=lambda var4: var4[0])\n\tprint(*[var4[2] for var4 in var1])\nmethod0()"
    }
  },
  {
    "p_name": "p02612",
    "code": {
      "buggy_code": "var0 = int(input())\nwhile 1000 <= var0:\n\tvar0 = var0 - 1000\nprint(1000 - var0)",
      "fixed_code": "var0 = int(input())\nwhile 1000 < var0:\n\tvar0 = var0 - 1000\nprint(1000 - var0)"
    }
  },
  {
    "p_name": "p02718",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = sum(var2) / (4 * var1)\nvar2.sort(var4=True)\nvar5 = [i for i in var2 if i > var3]\nif len(var5) >= var1:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = sum(var2) / (4 * var1)\nvar5 = [i for i in var2 if i >= var3]\nif len(var5) >= var1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03317",
    "code": {
      "buggy_code": "from math import ceil\nvar0, k = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = var1.var2(1)\nvar3 = ceil(var2 / (k - 1))\nif var3:\n\tvar4 = ceil((var0 - var3 * k) / (k - 1))\nelse:\n\tvar4 = ceil((var0 - 1) / (k - 1))\nprint(var3 + var4)",
      "fixed_code": "from math import ceil\nvar0, k = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = var1.var2(1)\nvar3 = ceil(var2 / (k - 1))\nvar5 = (k - 1) * (var3 - 1) + k\nvar4 = ceil((var0 - var5) / (k - 1))\nprint(var3 + var4)"
    }
  },
  {
    "p_name": "p02584",
    "code": {
      "buggy_code": "from sys import stdin\ninput = stdin.readline\n\ndef method0():\n\tvar0, var1, var2 = map(int, input().rstrip().split())\n\tvar3 = abs(var0) // var2\n\tvar4 = 0\n\tif var3 >= var1:\n\t\tif var0 >= 0:\n\t\t\tvar4 = var0 - var2 * var1\n\t\telse:\n\t\t\tvar4 = var0 + var2 * var1\n\telse:\n\t\tvar5 = var0 % var2\n\t\tk = (var1 - var3) % 2\n\t\tif var5 >= 0:\n\t\t\tvar4 = var5 - var2 * k\n\t\telse:\n\t\t\tvar4 = var5 + var2 * k\n\tprint(abs(var4))\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "from sys import stdin\ninput = stdin.readline\n\ndef method0():\n\tvar0, var1, var2 = map(int, input().rstrip().split())\n\tvar0 = abs(var0)\n\tvar3 = var0 // var2\n\tif var3 < var1:\n\t\tvar0 = var0 % var2\n\t\tvar1 = var1 - var3\n\t\tvar1 = var1 % 2\n\tvar4 = var0 - var2 * var1\n\tprint(abs(var4))\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02755",
    "code": {
      "buggy_code": "import math\nvar0, var1 = map(lambda var2: int(var2), input().split(' '))\nvar3 = var0 / 0.08\nvar3 = var3 // 10\nvar3 *= 10\nvar4 = -1\nfor i in range(10):\n\tvar5 = var3 + i\n\tif math.floor(var5 * 0.08) == var0 and math.floor(var5 * 0.1) == var1:\n\t\tvar4 = int(var5)\n\t\tbreak\nprint(var4)",
      "fixed_code": "import math\nvar0, var1 = map(lambda var2: int(var2), input().split(' '))\nvar4 = -1\nfor i in range(1, 1263):\n\tif math.floor(i * 0.08) == var0 and math.floor(i * 0.1) == var1:\n\t\tvar4 = int(i)\n\t\tbreak\nprint(var4)"
    }
  },
  {
    "p_name": "p02958",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split(' ')))\nvar2 = 0\nfor i in range(1, var0):\n\tfor j in range(i - 1, -1, -1):\n\t\tif var1[j] > var1[i]:\n\t\t\tif var2 == 1:\n\t\t\t\tprint('NO')\n\t\t\t\texit()\n\t\t\telse:\n\t\t\t\tvar1[i] = var1[j]\n\t\t\t\tvar1[j] = var1[i]\n\t\t\t\tvar2 += 1\nprint('YES')",
      "fixed_code": "var0 = int(input())\nvar1 = [int(i) for i in input().split()]\nvar2 = 0\nfor i in range(var0):\n\tif var1[i] != i + 1:\n\t\tvar2 += 1\nif var2 <= 2:\n\tprint('YES')\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = [0] * var0\nvar3 = []\nvar4 = False\nfor var5 in range(var1):\n\tvar6 = list(map(int, input().split()))\n\tvar3.append(var6)\nfor i in range(len(var3) - 1):\n\tfor j in range(i + 1, len(var3)):\n\t\tif var3[i][0] == var3[j][0] and var3[i][1] != var3[j][1]:\n\t\t\tvar4 = True\nif var4:\n\tprint('-1')\nelse:\n\tvar7 = ''\n\tif var0 > 1 and var2[0] == '0':\n\t\tprint('-1')\n\telse:\n\t\tfor i in range(len(var3)):\n\t\t\tvar2[var3[i][0] - 1] = var3[i][1]\n\t\tfor i in range(var0):\n\t\t\tvar7 += str(var2[i])\n\t\tprint(var7)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = [0] * var0\nvar3 = []\nvar4 = False\nfor var5 in range(var1):\n\tvar6 = list(map(int, input().split()))\n\tvar3.append(var6)\nfor i in range(len(var3) - 1):\n\tfor j in range(i + 1, len(var3)):\n\t\tif var3[i][0] == var3[j][0] and var3[i][1] != var3[j][1]:\n\t\t\tvar4 = True\nfor i in range(len(var3)):\n\tif var0 > 1 and var3[i][0] == 1 and (var3[i][1] == 0):\n\t\tvar4 = True\nif var4:\n\tprint(-1)\nelse:\n\tvar7 = ''\n\tfor i in range(var1):\n\t\tvar2[var3[i][0] - 1] = var3[i][1]\n\tif var0 > 1 and var2[0] == 0:\n\t\tvar2[0] = 1\n\tfor i in range(var0):\n\t\tvar7 += str(var2[i])\n\tprint(int(var7))"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "def method0():\n\tfrom decimal import Decimal, getcontext\n\tgetcontext().prec = 1000\n\tvar0, var1, var2 = map(int, input().split())\n\tvar3 = Decimal(var0).sqrt()\n\tvar4 = Decimal(var1).sqrt()\n\tvar5 = Decimal(var2).sqrt()\n\tvar6 = var3 + var4 < var5\n\tvar7 = 'Yes' if var6 else 'No'\n\tprint(var7)\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "def method0():\n\tvar0, var1, var2 = list(map(int, input().split()))\n\tif var2 - var0 - var1 >= 0 and 4 * var0 * var1 < (var2 - var0 - var1) ** 2:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02755",
    "code": {
      "buggy_code": "import math\nvar0, var1 = map(int, input().split())\nvar2 = 8 / 100\nvar3 = 10 / 100\nvar4 = var0 / var2\nvar5 = (var0 + 1) / var2\nvar6 = var1 / var3\nvar7 = (var1 + 1) / var3\nif var7 < var4 or var5 < var6:\n\tprint(-1)\nelif var6 < var4 and var5 < var6:\n\tprint(math.floor(var4))\nelif var4 < var6 and var7 < var5:\n\tprint(math.floor(var6))\nelif var6 < var4 <= var7 < var5:\n\tprint(math.floor(var4))\nelif var4 < var6 <= var5 < var7:\n\tprint(math.floor(var6))\nelif var4 == var6:\n\tprint(math.floor(var4))\nelse:\n\tprint(-1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar8 = 0\nfor var9 in range(1, 10000):\n\tif int(var9 * 0.08) == var0 and int(var9 * 0.1) == var1:\n\t\tprint(var9)\n\t\tvar8 += 1\n\t\tbreak\nif var8 != 1:\n\tprint('-1')"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = (var0 * var1 + 2 - 1) // 2\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 == 1 or var1 == 1:\n\tvar2 = 1\nelse:\n\tvar2 = (var0 * var1 + 2 - 1) // 2\nprint(var2)"
    }
  },
  {
    "p_name": "p02909",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = ['Sunny', 'Cloudy', 'Rainy']\nvar2 = var1.index(var0)\nif var2 < 2:\n\tprint(var1[var2])\nelse:\n\tprint(var1[0])",
      "fixed_code": "var0 = input()\nvar1 = ['Sunny', 'Cloudy', 'Rainy']\nvar2 = var1.index(var0)\nif var2 < 2:\n\tprint(var1[var2 + 1])\nelse:\n\tprint(var1[0])"
    }
  },
  {
    "p_name": "p03196",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\n\ndef method0(var0):\n\tvar2 = int(var0 ** 0.5) + 1\n\tvar3 = {}\n\tvar4 = var0\n\tfor var5 in range(2, var2):\n\t\tvar3[var5] = 0\n\t\twhile var4 % var5 == 0:\n\t\t\tvar4 //= var5\n\t\t\tvar3[var5] += 1\n\tif var4 > 1:\n\t\tvar3[var4] = 1\n\treturn {var6: var7 for var6, var7 in var3.items() if var7 > 0}\nvar8 = method0(var1)\nvar9 = 1\nfor var10, var11 in var8.items():\n\tvar9 *= max(1, var10 * (var11 // var0))\nprint(var9)",
      "fixed_code": "var0, var1 = map(int, input().split())\n\ndef method0(var0):\n\tvar2 = int(var0 ** 0.5) + 1\n\tvar3 = {}\n\tvar4 = var0\n\tfor var5 in range(2, var2):\n\t\tvar3[var5] = 0\n\t\twhile var4 % var5 == 0:\n\t\t\tvar4 //= var5\n\t\t\tvar3[var5] += 1\n\tif var4 > 1:\n\t\tvar3[var4] = 1\n\treturn {var6: var7 for var6, var7 in var3.items() if var7 > 0}\nvar8 = method0(var1)\nvar9 = 1\nfor var10, var11 in var8.items():\n\tvar9 *= max(1, var10 ** (var11 // var0))\nprint(var9)"
    }
  },
  {
    "p_name": "p03351",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nif abs(var2 - var0) <= 2 * var3:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nif abs(var0 - var2) <= var3:\n\tprint('Yes')\nelif abs(var0 - var1) <= var3 and abs(var1 - var2) <= var3:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03324",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 100 ** var0 * var1\nif var2 % 100 ** var0 == 0:\n\tvar2 += 1\nprint(var2)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 100 ** var0 * var1\nif var1 == 100:\n\tvar2 += 100 ** var0\nprint(var2)"
    }
  },
  {
    "p_name": "p03085",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = ['var1', 'C', 'G', 'T']\nvar2 = ['var1', 'T', 'C', 'G']\nfor i in range(4):\n\tif var0 == var1[i]:\n\t\tprint(var2[i])",
      "fixed_code": "var0 = input()\nvar1 = ['var1', 'C', 'G', 'T']\nvar2 = ['T', 'G', 'C', 'var1']\nfor i in range(4):\n\tif var0 == var1[i]:\n\t\tprint(var2[i])"
    }
  },
  {
    "p_name": "p03206",
    "code": {
      "buggy_code": "var0 = int(input())\nif var0 == 25:\n\tprint('Christmas')\nelif var0 == 24:\n\tprint('Christmas Eve')\nelif var0 == 24:\n\tprint('Christmas Eve Eve')\nelse:\n\tprint('Christmas Eve Eve Eve')",
      "fixed_code": "var0 = int(input())\nif var0 == 25:\n\tprint('Christmas')\nelif var0 == 24:\n\tprint('Christmas Eve')\nelif var0 == 23:\n\tprint('Christmas Eve Eve')\nelse:\n\tprint('Christmas Eve Eve Eve')"
    }
  },
  {
    "p_name": "p03035",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var0 < 6:\n\tprint(0)\nelif var0 < 13:\n\tprint(var1 / 2)\nelse:\n\tprint(var1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 < 6:\n\tprint(0)\nelif var0 < 13:\n\tprint(int(var1 / 2))\nelse:\n\tprint(var1)"
    }
  },
  {
    "p_name": "p02897",
    "code": {
      "buggy_code": "var0 = int(input())\nif var0 % 2 == 0:\n\tprint(1 / 2)\nelse:\n\tvar1 = int(var0 / 2)\n\tprint(var1 / var0)",
      "fixed_code": "var0 = int(input())\nif var0 % 2 == 0:\n\tprint(1 / 2)\nelse:\n\tvar1 = int(var0 / 2) + 1\n\tprint(var1 / var0)"
    }
  },
  {
    "p_name": "p03359",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split()))\nprint(var0 if var0 >= var1 else var0 - 1)",
      "fixed_code": "var0, var1 = list(map(int, input().split()))\nprint(var0 if var0 <= var1 else var0 - 1)"
    }
  },
  {
    "p_name": "p02755",
    "code": {
      "buggy_code": "import sys\nvar0 = int(1000000000.0 + 7)\nvar1 = 1 << 29\n\ndef method0():\n\tvar2, var3 = map(int, input().split())\n\tvar4 = []\n\tvar5 = int(min(var2 // 0.08, var3 // 0.1))\n\tvar6 = int(max(var2 // 0.08, var3 // 0.1))\n\tfor i in range(var5, var6 + 1):\n\t\tif int(i * 0.08) == var2 and int(i * 0.1) == var3:\n\t\t\tvar4.append(i)\n\tif len(var4):\n\t\tprint(min(var4))\n\telse:\n\t\tprint(-1)\n\treturn\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "import sys\nvar0 = int(1000000000.0 + 7)\nvar1 = 1 << 29\n\ndef method0():\n\tvar2, var3 = map(int, input().split())\n\tvar4 = []\n\tvar5 = int(min(var2 // 0.08, var3 // 0.1))\n\tvar6 = int(max((var2 + 1) // 0.08, var3 // 0.1))\n\tfor i in range(var5, var6 + 1):\n\t\tif int(i * 0.08) == var2 and int(i * 0.1) == var3:\n\t\t\tvar4.append(i)\n\tif len(var4):\n\t\tprint(min(var4))\n\telse:\n\t\tprint(-1)\n\treturn\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p03281",
    "code": {
      "buggy_code": "var0 = int(input())\nif var0 < 105:\n\tprint(0)\nelse:\n\tvar1 = 0\n\tfor i in range(var0, 103, -2):\n\t\tvar2 = 1\n\t\tfor j in range(1, 99, 2):\n\t\t\tvar3 = var0 % j\n\t\t\tif var3 == 0:\n\t\t\t\tvar2 += 1\n\t\t\tif var2 == 9:\n\t\t\t\tvar1 -= 1\n\t\t\tif var2 == 8:\n\t\t\t\tvar1 += 1\n\tprint(var1)",
      "fixed_code": "var0 = int(input())\nvar4 = 0\nfor i in range(1, var0 + 1, 2):\n\tvar5 = 0\n\tfor j in range(1, var0 + 1):\n\t\tif i % j == 0:\n\t\t\tvar5 += 1\n\tif var5 == 8:\n\t\tvar4 += 1\nprint(var4)"
    }
  },
  {
    "p_name": "p03072",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 1\nfor i in range(1, var0):\n\tif var1[0] <= var1[i] and var1[i - 1] <= var1[i]:\n\t\tvar2 += 1\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 1\nfor i in range(1, var0):\n\tif max(var1[:i]) <= var1[i]:\n\t\tvar2 += 1\nprint(var2)"
    }
  },
  {
    "p_name": "p03262",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = min([abs(int(var3) - var1) for var3 in input().split()])\nprint(var2)",
      "fixed_code": "from fractions import var6\nfrom functools import reduce\nvar4, var3 = map(int, input().split())\nvar1 = [int(i) for i in input().split()]\nvar1 = [abs(var3 - j) for j in var1]\nvar5 = reduce(var6, var1)\nprint(var5)"
    }
  },
  {
    "p_name": "p02767",
    "code": {
      "buggy_code": "def method0():\n\tvar0 = int(input())\n\tvar1 = list(map(int, input().split()))\n\tvar2 = min(var1)\n\tvar3 = max(var1)\n\tvar4 = 10000000\n\tfor var5 in range(var3, var2, 1):\n\t\tvar6 = 0\n\t\tfor i in var1:\n\t\t\tvar6 += (i - var5) ** 2\n\t\tif var4 > var6:\n\t\t\tvar4 = var6\n\tprint(var4)\nmethod0()",
      "fixed_code": "def method0():\n\tvar0 = int(input())\n\tvar1 = list(map(int, input().split()))\n\tvar2 = min(var1)\n\tvar3 = max(var1)\n\tvar4 = 10 ** 15\n\tfor var5 in range(100):\n\t\tvar6 = 0\n\t\tfor i in var1:\n\t\t\tvar6 += (i - var5) ** 2\n\t\tif var4 > var6:\n\t\t\tvar4 = var6\n\tprint(var4)\nmethod0()"
    }
  },
  {
    "p_name": "p03220",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1, var2 = map(int, input().split())\nvar3 = list(map(int, input().split()))\nvar4 = []\nfor i in range(var0):\n\tvar4.append(var1 - var3[i] * 0.006)\nprint(var4.index(min(var4)))",
      "fixed_code": "var0 = int(input())\nvar1, var2 = map(int, input().split())\nvar3 = list(map(int, input().split()))\nvar4 = []\nfor i in range(var0):\n\tvar4.append(abs(var1 - var3[i] * 0.006 - var2))\nprint(var4.index(min(var4)) + 1)"
    }
  },
  {
    "p_name": "p02607",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = 0\nvar2 = [int(var3) for var3 in input().split()]\nfor i, var4 in enumerate(var2):\n\tif i % 2 == 1:\n\t\tif var4 % 2 == 1:\n\t\t\tvar1 += 1\nprint(var1)",
      "fixed_code": "var0 = int(input())\nvar1 = 0\nvar2 = [int(var3) for var3 in input().split()]\nfor i, var4 in enumerate(var2):\n\tif i % 2 == 0:\n\t\tif var4 % 2 == 1:\n\t\t\tvar1 += 1\nprint(var1)"
    }
  },
  {
    "p_name": "p03101",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2, var3 = map(int, input().split())\nprint(var0 * var1 - var0 * var3 - var2 * var1 - var2 * var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2, var3 = map(int, input().split())\nprint(var0 * var1 - var0 * var3 - var2 * var1 + var2 * var3)"
    }
  },
  {
    "p_name": "p03437",
    "code": {
      "buggy_code": "import fractions\nvar0, var1 = map(int, input().split())\nif var1 % var0 == 0:\n\tprint(-1)\nelse:\n\tprint(var0)",
      "fixed_code": "var2, var3 = map(int, input().split())\nvar4 = var2 if var2 % var3 else -1\nprint(var4)"
    }
  },
  {
    "p_name": "p03437",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var0 % var1 == 0 or var1 % var0 == 0:\n\tprint(-1)\n\texit()\nelse:\n\tvar2 = False\n\tvar3 = 2\n\twhile True:\n\t\tif var0 * var3 % var1 != 0:\n\t\t\tbreak\n\t\tvar3 += 1\nprint(var0 * var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 % var1 == 0:\n\tprint(-1)\n\texit()\nelse:\n\tprint(var0)"
    }
  },
  {
    "p_name": "p02640",
    "code": {
      "buggy_code": "input = input()\nvar0 = input.split(' ')\nvar1 = int(var0[0])\nvar2 = int(var0[1])\nvar3 = (4 * var1 - var2) / 2.0\nvar4 = (var2 - 2 * var1) / 2.0\nif var3.is_integer() and var4.is_integer() and (var3 > 0) and (var4 > 0):\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "input = input()\nvar0 = input.split(' ')\nvar1 = int(var0[0])\nvar2 = int(var0[1])\nvar3 = (4 * var1 - var2) / 2.0\nvar4 = (var2 - 2 * var1) / 2.0\nif var3.is_integer() and var4.is_integer() and (var3 >= 0) and (var4 >= 0):\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02953",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nfor i in range(var0 - 1, 0, -1):\n\tvar2 = var1[i] - var1[i - 1]\n\tprint(var2)\n\tif var2 >= 0:\n\t\tcontinue\n\telif var2 == -1:\n\t\tvar1[i - 1] -= 1\n\telif var2 < -1:\n\t\tprint('No')\n\t\tbreak\nelse:\n\tprint('Yes')",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nfor i in range(var0 - 1, 0, -1):\n\tvar2 = var1[i] - var1[i - 1]\n\tif var2 >= 0:\n\t\tcontinue\n\telif var2 == -1:\n\t\tvar1[i - 1] -= 1\n\telif var2 < -1:\n\t\tprint('No')\n\t\tbreak\nelse:\n\tprint('Yes')"
    }
  },
  {
    "p_name": "p03360",
    "code": {
      "buggy_code": "var0 = list(map(int, input().split()))\nvar1 = int(input())\nprint(max(var0) * (2 * var1) + sum(var0) - max(var0))",
      "fixed_code": "var0 = list(map(int, input().split()))\nvar1 = int(input())\nfor i in range(var1):\n\tvar0 = sorted(var0)\n\tvar0[-1] *= 2\nprint(sum(var0))"
    }
  },
  {
    "p_name": "p03543",
    "code": {
      "buggy_code": "if len(set(input().rstrip())) <= 2:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = input().rstrip()\nif len(set(var0[:3])) == 1 or len(set(var0[1:])) == 1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02659",
    "code": {
      "buggy_code": "import math\nvar0, var1 = input().split()\nvar0 = int(var0)\nvar1 = int(var1[0]) * 100 + int(var1[2]) * 10 + int(var1[3])\nprint(math.floor(var0 * var1 / 100))",
      "fixed_code": "import math\nvar0, var1 = input().split()\nvar0 = int(var0)\nvar1 = int(var1[0]) * 100 + int(var1[2]) * 10 + int(var1[3])\nvar2 = str(var0 * var1)\nif len(var2) < 3:\n\tprint(0)\nelse:\n\tprint(var2[:-2])"
    }
  },
  {
    "p_name": "p02946",
    "code": {
      "buggy_code": "var0, var1 = (int(var2) for var2 in input().split())\nprint(range(var0 - var1, var0 + var1))",
      "fixed_code": "var0, var1 = (int(var2) for var2 in input().split())\nfor var3 in range(var1 - var0 + 1, var1 + var0):\n\tprint(var3, var4=' ')"
    }
  },
  {
    "p_name": "p03730",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = 'NO'\nfor i in range(10 ** 8):\n\tif (var0 - var1 * i) % var2 == 0:\n\t\tvar3 = 'YES'\n\t\tbreak\nprint(var3)",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = 0\nfor i in range(100):\n\tif var0 * i % var1 == var2:\n\t\tvar3 = 1\nprint('YES' if var3 == 1 else 'NO')"
    }
  },
  {
    "p_name": "p02817",
    "code": {
      "buggy_code": "var0 = input().split()\nvar1 = var0[0]\nvar2 = var0[1]\nvar3 = var1 + var2\nprint(var3)",
      "fixed_code": "var0 = input().split()\nvar1 = var0[0]\nvar2 = var0[1]\nvar3 = var2 + var1\nprint(var3)"
    }
  },
  {
    "p_name": "p02723",
    "code": {
      "buggy_code": "var0 = input()\nif var0[4] == var0[5]:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = input()\nif (var0[4] == var0[5]) & (var0[2] == var0[3]):\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "import sys\n\ndef method0():\n\tinput = sys.stdin.readline\n\tvar0, var1 = map(int, input().split())\n\tvar2 = (var1 + 1) // 2\n\tvar3 = var1 // 2\n\tvar4 = (var0 + 1) // 2 * var2\n\tif var0 % 2 == 1:\n\t\tvar4 += var3 * (var0 - 1) // 2\n\telse:\n\t\tvar4 += var3 * var0 // 2\n\tprint(var4)\n\treturn 0\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "import sys\n\ndef method0():\n\tinput = sys.stdin.readline\n\tvar0, var1 = map(int, input().split())\n\tif var0 == 1 or var1 == 1:\n\t\tprint(1)\n\telse:\n\t\tvar4 = (var0 // 2 + var0 % 2) * (var1 // 2 + var1 % 2) + var0 // 2 * (var1 // 2)\n\t\tprint(var4)\n\treturn 0\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02842",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = int((var0 + 1 / 2) // 1.08) - 1\nvar2 = int(-(-(var0 - 1 + 1 / 2) // 1.08))\nif int(var1 * 1.08) == var0:\n\tprint(var1)\nelif int(var2 * 1.08) == var0:\n\tprint(var2)\nelse:\n\tprint(':(')",
      "fixed_code": "var0 = int(input())\nvar1 = int((var0 + 1) // 1.08)\nvar2 = int(--(var0 // 1.08))\nif int(var1 * 1.08) == var0:\n\tprint(var1)\nelif int(var2 * 1.08) == var0:\n\tprint(var2)\nelse:\n\tprint(':(')"
    }
  },
  {
    "p_name": "p03264",
    "code": {
      "buggy_code": "k = int(input())\nprint(k + 1 >> 1 * (k + 1 >> 1 - 1) if k % 2 else k ** 2 >> 2)",
      "fixed_code": "k = int(input())\nprint(k // 2 * (k // 2 + k % 2))"
    }
  },
  {
    "p_name": "p03657",
    "code": {
      "buggy_code": "def method0(var0, var1):\n\tif var0 % 3 == 0 & var0 != 0:\n\t\treturn 'possible'\n\telif var1 % 3 == 0:\n\t\treturn 'possible'\n\telif var0 + var1 % 3 == 0 & var1 != 0:\n\t\treturn 'possible'\n\telse:\n\t\treturn 'impossible'\nvar2 = input()\nvar3 = var2.split()\nprint(method0(int(var3[0]), int(var3[1])))",
      "fixed_code": "var2 = input()\nvar3 = var2.split()\nvar0 = int(var3[0])\nvar1 = int(var3[1])\nif var0 % 3 == 0:\n\tprint('Possible')\nelif var1 % 3 == 0:\n\tprint('Possible')\nelif (var0 + var1) % 3 == 0:\n\tprint('Possible')\nelse:\n\tprint('Impossible')"
    }
  },
  {
    "p_name": "p03107",
    "code": {
      "buggy_code": "import re\nvar0 = input()\nvar1 = 0\nwhile True:\n\tvar2 = var0.count('11')\n\tvar0 = re.sub('11', '', var0)\n\tvar3 = var0.count('00')\n\tvar0 = re.sub('00', '', var0)\n\tvar1 += 2 * (var2 + var3)\n\tif var2 + var3 == 0:\n\t\tprint(var1)\n\t\tbreak",
      "fixed_code": "import re\nvar0 = input()\nprint(2 * min(var0.count('0'), var0.count('1')))"
    }
  },
  {
    "p_name": "p03861",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\n\ndef method0(var3, var2):\n\tif var3 == -1:\n\t\treturn 0\n\treturn int(var3 / var2 + 1)\nprint(method0(var1, var2) - method0(var0 - 1, var2))",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\n\ndef method0(var3, var2):\n\tif var3 == -1:\n\t\treturn 0\n\treturn var3 // var2 + 1\nprint(method0(var1, var2) - method0(var0 - 1, var2))"
    }
  },
  {
    "p_name": "p03086",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 0\nvar2 = 0\nfor i in range(len(var0)):\n\tif var0[i] == 'A' or var0[i] == 'G' or var0[i] == 'C' or (var0[i] == 'T'):\n\t\tvar1 += 1\n\telse:\n\t\tvar2 = max(var2, var1)\n\t\tvar1 = 0\nprint(var2, var1)",
      "fixed_code": "var0 = input()\nvar1 = 0\nvar2 = 0\nfor i in range(len(var0)):\n\tif var0[i] == 'A' or var0[i] == 'G' or var0[i] == 'C' or (var0[i] == 'T'):\n\t\tvar1 += 1\n\telse:\n\t\tvar2 = max(var2, var1)\n\t\tvar1 = 0\nprint(max(var2, var1))"
    }
  },
  {
    "p_name": "p02693",
    "code": {
      "buggy_code": "k = int(input())\nvar0, var1 = map(int, input().split())\nvar2 = False\nfor i in range(var0, var1 + 1):\n\tif i % k == 0:\n\t\tvar2 = True\nif var2:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "k = int(input())\nvar0, var1 = map(int, input().split())\nvar2 = False\nfor i in range(var0, var1 + 1):\n\tif i % k == 0:\n\t\tvar2 = True\nif var2:\n\tprint('OK')\nelse:\n\tprint('NG')"
    }
  },
  {
    "p_name": "p03814",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 0\nvar2 = 0\nvar3 = True\nfor i in range(len(var0)):\n\tprint(var1, var2)\n\tif var3:\n\t\tif var0[i] == 'A':\n\t\t\tvar1 = i\n\t\t\tvar3 = False\n\telif var0[i] == 'Z':\n\t\tvar2 = i\nprint(var2 - var1 + 1)",
      "fixed_code": "var0 = input()\nvar1 = 0\nvar2 = 0\nvar3 = True\nfor i in range(len(var0)):\n\tif var3:\n\t\tif var0[i] == 'A':\n\t\t\tvar1 = i\n\t\t\tvar3 = False\n\telif var0[i] == 'Z':\n\t\tvar2 = i\nprint(var2 - var1 + 1)"
    }
  },
  {
    "p_name": "p02705",
    "code": {
      "buggy_code": "var0 = int(input())\nprint(var0 * 3.14159265358979)",
      "fixed_code": "var0 = int(input())\nprint(var0 * 3.14159265358979 * 2)"
    }
  },
  {
    "p_name": "p03543",
    "code": {
      "buggy_code": "var0 = list(map(int, input()))\nif var0[0] == var0[1] and var0[1] == var0[2]:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = list(map(int, input()))\nvar1 = 0\nfor i in range(2):\n\tif var0[i] == var0[i + 1] == var0[i + 2]:\n\t\tvar1 += 1\nif var1 > 0:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03611",
    "code": {
      "buggy_code": "import sys\nvar0 = sys.stdin.var0\nvar1 = sys.stdin.var1\nfrom collections import Counter\n\ndef method0():\n\tvar2, *var3 = map(int, var0().split())\n\tvar4 = Counter(var3)\n\tvar5 = sorted(var4.items())\n\tvar6 = var4.most_common()[0][1]\n\tfor var7 in range(1, len(var5) - 1):\n\t\tif abs(var5[var7 - 1][0] - var5[var7 + 1][0]) <= 2:\n\t\t\tvar6 = max(var6, var5[var7 - 1][1] + var5[var7][1] + var5[var7 + 1][1])\n\t\telif abs(var5[var7 - 1][0] - var5[var7][0]) <= 1:\n\t\t\tvar6 = max(var6, var5[var7 - 1][1] + var5[var7][1])\n\t\telif abs(var5[var7 + 1][0] - var5[var7][0]) <= 1:\n\t\t\tvar6 = max(var6, var5[var7 + 1][1] + var5[var7][1])\n\tprint(var6)\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "from collections import Counter\n\ndef method0():\n\tvar2 = int(input())\n\tvar3 = list(map(int, input().split()))\n\tvar8 = [i + 1 for i in var3]\n\tvar9 = [i - 1 for i in var3]\n\tvar3 = var3 + var8 + var9\n\tvar4 = Counter(var3)\n\tprint(var4.most_common()[0][1])\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02988",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nfor i in range(0, var0 - 2):\n\tif var1[i] * var1[i + 2] < var1[i + 1] ** 2:\n\t\tvar2 += 1\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nfor i in range(0, var0 - 2):\n\tif var1[i] < var1[i + 1] < var1[i + 2] or var1[i] > var1[i + 1] > var1[i + 2]:\n\t\tvar2 += 1\nprint(var2)"
    }
  },
  {
    "p_name": "p03438",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar3 = sum([var2[i] - var1[i] for i in range(var0)])\ni = 0\nwhile i < 50:\n\tif bin(var3 + i).count('1') == i:\n\t\tprint(i)\n\t\tprint('Yes')\n\t\tbreak\n\ti += 1\nelse:\n\tprint('No')",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar4 = var5 = 0\nfor i in range(var0):\n\tvar4 += var2[i] - var1[i]\n\tif var1[i] < var2[i]:\n\t\tvar5 += (var2[i] - var1[i] + 1) // 2\nprint('YNeos'[var5 > var4::2])"
    }
  },
  {
    "p_name": "p02693",
    "code": {
      "buggy_code": "k = int(input())\nvar0, var1 = map(int, input().split())\nvar2 = var0 % k\nvar3 = 'NG'\nif var1 - var0 >= var2:\n\tvar3 = 'OK'\nprint(var3)",
      "fixed_code": "k = int(input())\nvar0, var1 = map(int, input().split())\nvar2 = var1 % k\nvar3 = 'NG'\nif k <= var1:\n\tif var1 - var0 >= var2:\n\t\tvar3 = 'OK'\nprint(var3)"
    }
  },
  {
    "p_name": "p02601",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = int(input())\nvar4 = 0\nif var0 < var1 and var1 < var2:\n\tprint('Yes')\n\texit()\nwhile var3 > 0:\n\tif var4 == 0:\n\t\tvar1 = var1 * 2\n\t\tvar3 = var3 - 1\n\t\tif var0 < var1:\n\t\t\tvar4 = 1\n\t\t\tif var1 < var2:\n\t\t\t\tprint('Yes')\n\t\t\t\texit()\n\telse:\n\t\tvar2 = var2 * 2\n\t\tvar3 = var3 - 1\n\t\tif var1 < var2:\n\t\t\tprint('Yes')\n\t\t\texit()\nprint('No')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = int(input())\nvar4 = 0\nif var0 < var1 and var1 < var2:\n\tprint('Yes')\n\texit()\nif var0 < var1:\n\tvar4 = 1\nwhile var3 > 0:\n\tif var4 == 0:\n\t\tvar1 = var1 * 2\n\t\tvar3 = var3 - 1\n\t\tif var0 < var1:\n\t\t\tvar4 = 1\n\t\t\tif var1 < var2:\n\t\t\t\tprint('Yes')\n\t\t\t\texit()\n\telse:\n\t\tvar2 = var2 * 2\n\t\tvar3 = var3 - 1\n\t\tif var1 < var2:\n\t\t\tprint('Yes')\n\t\t\texit()\nprint('No')"
    }
  },
  {
    "p_name": "p03447",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = int(input())\nvar2 = int(input())\nvar0 = var0 - var1\nvar0 = var0 - var0 % var2 * var2\nprint(int(var0))",
      "fixed_code": "var0 = int(input())\nvar1 = int(input())\nvar2 = int(input())\nvar0 = var0 - var1\nvar0 = var0 - var0 // var2 * var2\nprint(int(var0))"
    }
  },
  {
    "p_name": "p03807",
    "code": {
      "buggy_code": "var0 = map(int, input().split())\nvar1 = [int(i) for i in input().split()]\nvar2 = 0\nfor var3 in var1:\n\tif var3 % 2:\n\t\tvar2 += 1\nprint('YES' if var2 % 2 == 0 else 'No')",
      "fixed_code": "var0 = map(int, input().split())\nvar1 = [int(i) for i in input().split()]\nvar2 = 0\nfor var3 in var1:\n\tif var3 % 2:\n\t\tvar2 += 1\nprint('YES' if var2 % 2 == 0 else 'NO')"
    }
  },
  {
    "p_name": "p02641",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = []\nif var1 != 0:\n\tvar2 = list(map(int, input().split()))\nvar3 = -10000\nfor i in range(1, 101):\n\tif i in var2:\n\t\tcontinue\n\tif abs(i - var0) < abs(var3 - var0):\n\t\tvar3 = i\nprint(var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = []\nif var1 != 0:\n\tvar2 = list(map(int, input().split()))\nvar3 = 0\nfor i in range(0, 102):\n\tif i in var2:\n\t\tcontinue\n\tif abs(i - var0) < abs(var3 - var0):\n\t\tvar3 = i\nprint(var3)"
    }
  },
  {
    "p_name": "p03150",
    "code": {
      "buggy_code": "import sys\nimport collections\n\ndef method0():\n\tinput = sys.stdin.readline\n\tvar0 = 10 ** 9 + 7\n\tvar1 = collections.deque(list('keyence'))\n\tvar2 = str(input().rstrip('\\n'))\n\tfor i in range(len(var2)):\n\t\tif len(var1) == 0:\n\t\t\tbreak\n\t\telse:\n\t\t\tvar3 = var1.popleft()\n\t\t\tif var3 != var2[i]:\n\t\t\t\tvar1.appendleft(var3)\n\tprint('YES' if len(var1) == 0 else 'NO')\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "import sys\n\ndef method0():\n\tinput = sys.stdin.readline\n\tvar0 = 10 ** 9 + 7\n\tvar2 = list(str(input().rstrip('\\n')))\n\tfor i in range(len(var2)):\n\t\tfor j in range(i + 1, len(var2)):\n\t\t\tif ''.join(var2[:i + 1] + var2[j:]) == 'keyence':\n\t\t\t\tprint('YES')\n\t\t\t\texit()\n\tprint('NO')\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p02612",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = var0 % 1000\nprint(1000 - var1)",
      "fixed_code": "var0 = int(input())\nvar1 = var0 % 1000\nif var1 == 0:\n\tprint(0)\nelse:\n\tprint(1000 - var1)"
    }
  },
  {
    "p_name": "p02707",
    "code": {
      "buggy_code": "from typing import *\nimport collections\nimport itertools\nimport math\nimport sys\nvar0 = float('inf')\n\ndef method0(var1: int, var2: 'List[int]'):\n\tvar3 = collections.Counter(var2 + [i + 1 for i in range(var1)])\n\treturn '\\n'.join([str(var4 - 1) for var4 in var3.values()])\n\ndef method1():\n\tsys.setrecursionlimit(10 ** 6)\n\n\tdef method2():\n\t\tfor var5 in sys.stdin:\n\t\t\tfor var6 in var5.split():\n\t\t\t\tyield var6\n\tvar7 = method2()\n\tvar1 = int(next(var7))\n\tvar2 = [int(next(var7)) for _ in range(var1 - 2 + 1)]\n\tprint(method0(var1, var2))\nif __name__ == '__main__':\n\tmethod1()",
      "fixed_code": "from typing import *\nimport collections\nimport itertools\nimport math\nimport sys\nvar0 = float('inf')\n\ndef method0(var1: int, var2: 'List[int]'):\n\tvar3 = collections.Counter(var2 + [i + 1 for i in range(var1)])\n\treturn '\\n'.join([f'{var3[i + 1] - 1}' for i in range(var1)])\n\ndef method1():\n\tsys.setrecursionlimit(10 ** 6)\n\n\tdef method2():\n\t\tfor var5 in sys.stdin:\n\t\t\tfor var6 in var5.split():\n\t\t\t\tyield var6\n\tvar7 = method2()\n\tvar1 = int(next(var7))\n\tvar2 = [int(next(var7)) for _ in range(var1 - 2 + 1)]\n\tprint(method0(var1, var2))\nif __name__ == '__main__':\n\tmethod1()"
    }
  },
  {
    "p_name": "p02959",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar3 = 0\nvar4 = 0\nvar5 = 0\nfor i in range(0, var0):\n\tvar4 = min(var2[i], var1[i] - var5)\n\tvar5 = max(0, var2[i] - var4)\n\tvar3 += var4\nvar3 += min(var5, var1[-1])\nprint(var3)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = list(map(int, input().split()))\nvar3 = 0\nvar4 = 0\nvar5 = 0\nfor i in range(0, var0):\n\tvar4 = min(var2[i] + var5, var1[i])\n\tvar5 = max(0, min(var2[i] + var5 - var4, var2[i]))\n\tvar3 += var4\nvar3 += min(var5, var1[-1])\nprint(var3)"
    }
  },
  {
    "p_name": "p03012",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = sum(var1)\nvar3 = [0] * (var0 - 1)\nvar4 = [0] * (var0 - 1)\nfor i in range(var0 - 1):\n\tvar3[i] = sum(var1[0:i])\n\tvar4[i] = var2 - var3[i]\nvar5 = [0] * (var0 - 1)\nfor i in range(var0 - 1):\n\tvar5[i] = abs(var3[i] - var4[i])\nprint(min(var5))",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = sum(var1)\nvar3 = [0] * (var0 - 1)\nvar4 = [0] * (var0 - 1)\nfor i in range(var0 - 1):\n\tvar3[i] = sum(var1[:i + 1])\n\tvar4[i] = var2 - var3[i]\nvar5 = [0] * (var0 - 1)\nfor i in range(var0 - 1):\n\tvar5[i] = abs(var3[i] - var4[i])\nprint(min(var5))"
    }
  },
  {
    "p_name": "p03001",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4 = var0 * var1\nif var2 == var0 and var3 == var1:\n\tprint(var4 / 2, ' ', 0)\n\texit()\nif var2 == 0 and var3 == 0:\n\tprint(var4 / 2, ' ', 0)\n\texit()\nif var2 == var0 and var3 == 0:\n\tprint(var4 / 2, ' ', 0)\n\texit()\nif var3 == var1 and var2 == 0:\n\tprint(var4 / 2, ' ', 0)\n\texit()\nif var3 == 0:\n\tprint(max(var3, var1 - var3) * var0 / 2, ' ', 0)\n\texit()\nif var2 == 0:\n\tprint(max(var2, var0 - var2) * var1 / 2, ' ', 0)\n\texit()\nvar5 = []\nvar5.append(var2 * var1)\nvar5.append((var0 - var2) * var1)\nvar5.append(var0 * var3)\nvar5.append(var0 * (var1 - var3))\nvar6 = min(var5[0], var5[1])\nvar7 = min(var5[2], var5[3])\nif var6 == var7:\n\tprint(var6, ' ', 1)\nelse:\n\tprint(max(var6, var7), ' ', 0)",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nif var0 / 2 == var2 and var1 / 2 == var3:\n\tprint(var1 * var0 / 2, '1')\nelse:\n\tprint(var1 * var0 / 2, '0')"
    }
  },
  {
    "p_name": "p02394",
    "code": {
      "buggy_code": "var0 = []\nvar0 = input().split()\nfor i in range(5):\n\tvar0[i] = int(var0[i])\nvar1 = []\nvar1.append([0, 0])\nvar1.append([var0[0], var0[1]])\nfor i in range(0, 2, 1):\n\tfor j in range(0, 2, 1):\n\t\tif abs(var1[i][j] - var0[2 + j]) > var0[4]:\n\t\t\tprint('No')\n\t\t\tvar2\nprint('Yes')",
      "fixed_code": "def method0(input):\n\tvar0 = []\n\tvar0 = input.split()\n\tfor i in range(5):\n\t\tvar0[i] = int(var0[i])\n\tvar1 = []\n\tvar1.append([0, 0])\n\tvar1.append([var0[0], var0[1]])\n\tfor i in range(0, 2, 1):\n\t\tfor j in range(0, 2, 1):\n\t\t\tif (-1) ** (i - 1) * (var1[i][j] - var0[2 + j]) < var0[4]:\n\t\t\t\tprint('No')\n\t\t\t\treturn\n\tprint('Yes')\nmethod0(input())"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = [tuple(map(int, input().split())) for _ in range(var1)]\nvar3 = '1'\nfor i in range(var0 - 1):\n\tvar3 += '0'\nwhile len(var3) == var0:\n\tif all([var3[var4 - 1] == str(var5) for var4, var5 in var2]):\n\t\tprint(var3)\n\t\texit()\n\tvar3 = str(int(var3) + 1)\nprint(-1)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = [tuple(map(int, input().split())) for _ in range(var1)]\nvar3 = '1'\nif var0 == 1:\n\tvar3 = '0'\nfor i in range(var0 - 1):\n\tvar3 += '0'\nwhile len(var3) == var0:\n\tif all([var3[var4 - 1] == str(var5) for var4, var5 in var2]):\n\t\tprint(var3)\n\t\texit()\n\tvar3 = str(int(var3) + 1)\nprint(-1)"
    }
  },
  {
    "p_name": "p02258",
    "code": {
      "buggy_code": "def method0(var0, var1):\n\tvar2 = var0[1] - var0[0]\n\tvar3 = var0[1]\n\tfor i in range(2, var1):\n\t\tvar4 = var0[i] - var3\n\t\tif var2 < var4:\n\t\t\tvar2 = var4\n\t\tif var3 > var0[i]:\n\t\t\tvar3 = var0[i]\n\treturn var2\nvar0 = []\nvar1 = int(input())\nfor i in range(var1):\n\tvar0.append(int(input()))\nvar2 = method0(var0, var1)\nprint(var2)",
      "fixed_code": "def method0(var0, var1):\n\tvar2 = -10 ** 9\n\tvar3 = var0[0]\n\tfor i in range(1, var1):\n\t\tvar4 = var0[i] - var3\n\t\tif var2 < var4:\n\t\t\tvar2 = var4\n\t\tif var3 > var0[i]:\n\t\t\tvar3 = var0[i]\n\treturn var2\nvar0 = []\nvar1 = int(input())\nfor i in range(var1):\n\tvar0.append(int(input()))\nvar2 = method0(var0, var1)\nprint(var2)"
    }
  },
  {
    "p_name": "p02983",
    "code": {
      "buggy_code": "from math import sqrt\nvar0, var1 = map(int, input().split())\nif var1 - var0 >= 2019:\n\tprint(0)\nelse:\n\tvar2 = 2019\n\tfor var3 in range(var0, var1):\n\t\tvar4 = var3 % 2019\n\t\tif var4 < var2:\n\t\t\tvar2 = var4\n\t\tif var4 == 2018:\n\t\t\tif var3 + 1 <= var1:\n\t\t\t\tvar2 = 0\n\t\t\telse:\n\t\t\t\tpass\n\tprint(var2 * (var2 + 1))",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var1 - var0 >= 2019:\n\tprint(0)\nelse:\n\tvar5 = 2018 ** 2\n\tfor i in range(var0, var1):\n\t\tfor j in range(i + 1, var1 + 1):\n\t\t\tvar4 = i * j % 2019\n\t\t\tif var4 < var5:\n\t\t\t\tvar5 = var4\n\tprint(var5)"
    }
  },
  {
    "p_name": "p03957",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = 0\nvar2 = 0\nfor var3 in var0:\n\tif var3 == 'C':\n\t\tvar1 = 1\n\tif var3 == 'F':\n\t\tvar2 = 1\nif var1 == 1 and var2 == 1:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = input()\nvar1 = 0\nvar2 = 0\nfor var3 in var0:\n\tif var3 == 'C':\n\t\tvar1 = 1\n\tif var3 == 'F' and var1 == 1:\n\t\tvar2 = 1\nif var1 == 1 and var2 == 1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03125",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var0 % var1 == 0:\n\tprint(str(var0 + var1))\nelse:\n\tprint(str(var0 - var1))",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var1 % var0 == 0:\n\tprint(str(var0 + var1))\nelse:\n\tprint(str(var1 - var0))"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "import math\nvar0, var1, var2 = map(int, input().split())\nif math.sqrt(var0) + math.sqrt(var1) < math.sqrt(var2):\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "import math\nimport numpy\nvar0, var1, var2 = map(int, input().split())\nif var2 - var0 - var1 <= 0:\n\tprint('No')\nelif 0 < (var2 - var0 - var1) ** 2 - 4 * var0 * var1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03760",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = input() + ''\nprint(*[var2 + var3 for var2, var3 in zip(var0, var1)], var4='')",
      "fixed_code": "var0 = list(input())\nvar1 = list(input()) + ['']\nprint(*[var2 + var3 for var2, var3 in zip(var0, var1)], var4='')"
    }
  },
  {
    "p_name": "p02687",
    "code": {
      "buggy_code": "var0 = input()\nif var0 == 'ABC':\n\tprint('ARC')\nelse:\n\tprint('ARC')",
      "fixed_code": "var0 = input()\nif var0 == 'ABC':\n\tprint('ARC')\nelse:\n\tprint('ABC')"
    }
  },
  {
    "p_name": "p02995",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nimport math\n\ndef method0(var4, var5):\n\twhile var5:\n\t\tvar4, var5 = (var5, var4 % var5)\n\treturn var4\n\ndef method1(var4, var5):\n\treturn int(var4 / method0(var4, var5) * var5)\n\ndef method2(var6, var7, var8):\n\tvar9 = method1(var7, var8)\n\treturn var6 - math.floor(var6 / var7) - math.floor(var6 / var8) + math.floor(var6 / var9)\nprint(method2(var1, var2, var3) - method2(var0 - 1, var2, var3))",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nimport math\n\ndef method0(var4, var5):\n\twhile var5:\n\t\tvar4, var5 = (var5, var4 % var5)\n\treturn var4\n\ndef method1(var4, var5):\n\treturn int(var4 / method0(var4, var5) * var5)\n\ndef method2(var6, var7, var8):\n\tvar9 = method1(var7, var8)\n\treturn var6 - var6 // var7 - var6 // var8 + var6 // var9\nprint(method2(var1, var2, var3) - method2(var0 - 1, var2, var3))"
    }
  },
  {
    "p_name": "p02995",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nimport fractions\nvar4 = var1 - var0 - (var1 - var0 + 1) // var2 - (var1 - var0 + 1) // var3 + (var1 - var0 + 1) // (var2 * var3 // fractions.gcd(var2, var3))\nprint(var4)",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\nimport fractions\nvar4 = var1 - var1 // var2 - var1 // var3 + var1 // (var2 * var3 // fractions.gcd(var2, var3)) - (var0 - 1 - (var0 - 1) // var2 - (var0 - 1) // var3 + (var0 - 1) // (var2 * var3 // fractions.gcd(var2, var3)))\nprint(var4)"
    }
  },
  {
    "p_name": "p03861",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nvar3 = 0\nvar3 = (var1 - var0 + 1) // var2\nif var0 + var3 * (var2 + 1) <= var1:\n\tvar3 += 1\nprint(var3)",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = 0\nif var1 - var0 + 1 >= var2:\n\tif var0 % var2 == 0 and var1 % var2 == 0:\n\t\tvar3 = (var1 - var0) // var2 + 1\n\telif not var0 % var2 == 0 and (not var1 % var2 == 0):\n\t\tvar0 = var0 + var2 - var0 % var2\n\t\tvar1 = var1 - var1 % var2\n\t\tvar3 = (var1 - var0) // var2 + 1\n\telif not var0 % var2 == 0 and var1 % var2 == 0:\n\t\tvar0 = var0 + var2 - var0 % var2\n\t\tvar3 = (var1 - var0) // var2 + 1\n\telif var0 % var2 == 0 and (not var1 % var2 == 0):\n\t\tvar1 = var1 - var1 % var2\n\t\tvar3 = (var1 - var0) // var2 + 1\nelif var0 % var2 == 0:\n\tvar3 = 1\nelif var0 + var2 - var0 % var2 <= var1:\n\tvar3 = 1\nelse:\n\tvar3 = 0\nprint(var3)"
    }
  },
  {
    "p_name": "p02641",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar2.sort()\nvar3 = abs(10000000)\nfor i in range(-101, 101):\n\tif not i in var2:\n\t\tvar3 = min(var3, abs(i - var0))\nif not var0 - var3 in var2:\n\tprint(var0 - var3)\nelse:\n\tprint(var0 + var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar2.sort()\nvar3 = abs(10000000)\nfor i in range(-101, 102):\n\tif not i in var2:\n\t\tvar3 = min(var3, abs(i - var0))\nif not var0 - var3 in var2:\n\tprint(var0 - var3)\nelse:\n\tprint(var0 + var3)"
    }
  },
  {
    "p_name": "p02553",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = map(int, input().split())\nvar4, var5 = (0, 0)\nif var0 > var1:\n\tvar4 = var0\nelse:\n\tvar4 = var1\nif var2 > var3:\n\tvar5 = var2\nelse:\n\tvar5 = var3\nprint(var4 * var5)",
      "fixed_code": "var0, var1, var2, var3 = map(int, input().split())\n'\\nif var0>var1:\\n  var4=var0\\nelse:\\n  var4=var1\\nif var2>var3:\\n  var5=var2\\nelse:\\n  var5=var3\\nprint(var4*var5)\\n'\nprint(max(var0 * var2, var0 * var3, var1 * var2, var1 * var3))"
    }
  },
  {
    "p_name": "p02694",
    "code": {
      "buggy_code": "var0 = int(input())\ni = 0\nvar1 = 100\nwhile var1 <= var0:\n\tvar1 *= 1.01\n\ti += 1\nprint(i)",
      "fixed_code": "var0 = int(input())\nvar1 = 100\ni = 0\nwhile var1 < var0:\n\tvar1 += var1 // 100\n\ti += 1\nprint(i)"
    }
  },
  {
    "p_name": "p02773",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = []\nimport collections as var2\nvar1 = [input() for i in range(var0)]\nvar3 = var2.Counter(var1)\nvar4 = max(var3.values())\nvar5 = []\nfor i in var1:\n\tif var3[i] == var4:\n\t\tvar5.append(i)\nvar5.sort()\nfor i in set(var5):\n\tprint(i)",
      "fixed_code": "var0 = int(input())\nvar1 = []\nimport collections as var2\nvar1 = [input() for i in range(var0)]\nvar3 = var2.Counter(var1)\nvar4 = max(var3.values())\nvar5 = []\nfor i in var1:\n\tif var3[i] == var4:\n\t\tvar5.append(i)\nvar5 = list(set(var5))\nvar5.sort()\nfor i in var5:\n\tprint(i)"
    }
  },
  {
    "p_name": "p03262",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar2.sort()\nvar3 = 10 ** 9\nfor var4 in var2:\n\tif abs(var4 - var1) != 0:\n\t\tvar3 = min(var3, abs(var4 - var1))\nprint(var3)",
      "fixed_code": "import fractions\nvar0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar5 = []\nfor var4 in var2:\n\tvar5.append(abs(var4 - var1))\nvar6 = var5[0]\nfor i in range(1, var0):\n\tvar6 = fractions.var6(var6, var5[i])\nprint(var6)"
    }
  },
  {
    "p_name": "p02755",
    "code": {
      "buggy_code": "var0 = input().split(' ')\nvar1 = int(var0[0])\nvar2 = int(var0[1])\nvar3 = var1 / 0.08\nvar1 += 0.99\nvar4 = var1 / 0.08\nvar5 = var2 / 0.1\nvar2 += 0.99\nvar6 = var2 / 0.1\nif var4 < var5 or var6 < var3:\n\tprint(-1)\nelif var3 >= var5:\n\tprint(int(var3))\nelse:\n\tprint(int(var5))",
      "fixed_code": "import math\nvar0 = input().split(' ')\nvar1 = int(var0[0])\nvar2 = int(var0[1])\nvar3 = var1 / 0.08\nvar1 += 0.9999\nvar4 = var1 / 0.08\nvar5 = var2 / 0.1\nvar2 += 0.9999\nvar6 = var2 / 0.1\nif var4 < var5 or var6 < var3:\n\tprint(-1)\nelif var3 >= var5:\n\tprint(int(math.ceil(var3)))\nelse:\n\tprint(int(math.ceil(var5)))"
    }
  },
  {
    "p_name": "p02891",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = int(input())\nvar2 = len(var0)\nvar3 = 0\nvar4 = var0[0]\nvar5 = var0[0]\nfor i in range(1, var2):\n\tvar6 = var0[i]\n\tif var4 == var6:\n\t\tvar3 += 1\n\t\tvar4 = '-'\n\telse:\n\t\tvar4 = var6\n\tvar5 += var4\nif var2 == 1:\n\tvar7 = var1 // 2\nelif var5[0] == var5[var2 - 1]:\n\tvar8 = 1\n\tvar9 = var0[0]\n\tfor i in range(1, var2):\n\t\tvar6 = var0[i]\n\t\tif var6 != var9:\n\t\t\tbreak\n\t\tvar8 += 1\n\tvar10 = 1\n\tvar11 = var0[var2 - 1]\n\tfor i in range(1, var2):\n\t\tvar6 = var0[var2 - 1 - i]\n\t\tif var6 != var11:\n\t\t\tbreak\n\t\tvar10 += 1\n\tif var2 == var8 == var10:\n\t\tvar7 = var3 * var1 + (var1 - 1)\n\telse:\n\t\tvar7 = var1 * var3 + (var1 - 1) * (var8 // 2 + var10 // 2 - (var8 + var10) // 2)\nelse:\n\tvar7 = var3 * var1\nprint(var7)",
      "fixed_code": "var0 = input()\nvar1 = int(input())\nvar2 = len(var0)\nvar12 = 0\nvar4 = ''\nvar13 = 0\nfor i in range(var2):\n\tvar6 = var0[i]\n\tif var4 != var6:\n\t\tvar12 += var13 // 2\n\t\tvar13 = 0\n\tvar13 += 1\n\tvar4 = var6\nvar12 += var13 // 2\nif var0[0] == var0[var2 - 1]:\n\tvar8 = 1\n\tvar9 = var0[0]\n\tfor i in range(1, var2):\n\t\tvar6 = var0[i]\n\t\tif var6 != var9:\n\t\t\tbreak\n\t\tvar8 += 1\n\tvar10 = 1\n\tvar11 = var0[var2 - 1]\n\tfor i in range(1, var2):\n\t\tvar6 = var0[var2 - 1 - i]\n\t\tif var6 != var11:\n\t\t\tbreak\n\t\tvar10 += 1\n\tif var2 == var8 == var10:\n\t\tvar7 = var2 * var1 // 2\n\telse:\n\t\tvar7 = var1 * var12 - (var1 - 1) * (var8 // 2 + var10 // 2 - (var8 + var10) // 2)\nelse:\n\tvar7 = var12 * var1\nprint(var7)"
    }
  },
  {
    "p_name": "p02396",
    "code": {
      "buggy_code": "var0 = 1\nwhile True:\n\ti = int(input())\n\tprint('case {}: {}'.format(var0, i))\n\tvar0 += 1\n\tif i == 0:\n\t\tbreak",
      "fixed_code": "import sys\ni = 1\nfor var1 in sys.stdin:\n\tvar2 = int(var1)\n\tif var2 == 0:\n\t\tbreak\n\tprint('Case ', i, ': ', var2, var3='')\n\ti += 1"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "import numpy as var0\nimport sys\nimport math\nvar1, var2, var3 = map(int, input().split())\nvar4 = var1 + var2\nvar5 = var1 * var2\nvar6 = 2 * math.sqrt(var5)\nvar4 = var4 + var6\nvar7 = max(var4, var3)\nvar4 = var4 - var7\nvar3 = var3 - var7\nif var4 < var3:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "import numpy as var0\nimport sys\nimport math\nvar1, var2, var3 = map(int, input().split())\nif 4 * var1 * var2 < (var3 - var1 - var2) ** 2 and var3 - var1 - var2 > 0:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02417",
    "code": {
      "buggy_code": "import sys\nvar0 = sys.stdin.readlines()\nfor i in range(26):\n\tvar0.count(chr(97 + i))\n\tprint(chr(97 + i) + ' : ' + str(var0.count(chr(97 + i))))",
      "fixed_code": "import sys\nvar0 = sys.stdin.read().lower()\nfor i in range(26):\n\tvar0.count(chr(97 + i))\n\tprint(chr(97 + i) + ' : ' + str(var0.count(chr(97 + i))))"
    }
  },
  {
    "p_name": "p02693",
    "code": {
      "buggy_code": "import sys\nvar0 = int(input())\nvar1, var2 = map(int, input().split())\nfor i in range(var1, var2):\n\tif i % var0 == 0:\n\t\tprint('OK')\n\t\tsys.exit()\nprint('NG')",
      "fixed_code": "import sys\nvar0 = int(input())\nvar1, var2 = map(int, input().split())\nfor i in range(var1, var2 + 1):\n\tif i % var0 == 0:\n\t\tprint('OK')\n\t\tsys.exit()\nprint('NG')"
    }
  },
  {
    "p_name": "p04043",
    "code": {
      "buggy_code": "var0 = input().split()\nprint(var0)\nif int(var0[0]) == 5:\n\tif int(var0[1]) == 5:\n\t\tif int(var0[2]) == 7:\n\t\t\tprint('YES')\n\telif int(var0[1]) == 7:\n\t\tif int(var0[1]) == 5:\n\t\t\tprint('YES')\nelif int(var0[0]) == 7:\n\tif int(var0[1]) == 5:\n\t\tif int(var0[2]) == 5:\n\t\t\tprint('YES')\nelse:\n\tprint('NO')",
      "fixed_code": "def method0(var0):\n\tfor i in range(3):\n\t\tif 0 > int(var0[i]) or int(var0[i]) > 10:\n\t\t\tprint('NO')\n\t\t\treturn 0\n\tif int(var0[0]) == 5:\n\t\tif int(var0[1]) == 5:\n\t\t\tif int(var0[2]) == 7:\n\t\t\t\tprint('YES')\n\t\t\telse:\n\t\t\t\tprint('NO')\n\t\telif int(var0[1]) == 7:\n\t\t\tif int(var0[2]) == 5:\n\t\t\t\tprint('YES')\n\t\t\telse:\n\t\t\t\tprint('NO')\n\telif int(var0[0]) == 7:\n\t\tif int(var0[1]) == 5:\n\t\t\tif int(var0[2]) == 5:\n\t\t\t\tprint('YES')\n\t\t\telse:\n\t\t\t\tprint('NO')\n\t\telse:\n\t\t\tprint('NO')\n\telse:\n\t\tprint('NO')\n\treturn 0\nvar0 = input().split()\nif len(var0) == 3:\n\tmethod0(var0)\nelse:\n\tprint('NO')"
    }
  },
  {
    "p_name": "p03471",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nfor i in range(var0 + 1):\n\tfor j in range(var0 + 1):\n\t\tfor k in range(var0 + 1):\n\t\t\tif 10000 * i + 5000 * j + 1000 * k == var1 and i + j + k == var0:\n\t\t\t\tprint(i, j, k)\n\t\t\t\tvar2 += 1\n\t\t\t\tbreak\n\t\telse:\n\t\t\tcontinue\n\t\tbreak\nif var2 == 0:\n\tprint('-1 -1 -1')",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nfor i in range(var0 + 1):\n\tfor j in range(var0 + 1):\n\t\tk = var0 - i - j\n\t\tif 10000 * i + 5000 * j + 1000 * k == var1 and 0 <= k:\n\t\t\tprint(i, j, k)\n\t\t\tvar2 += 1\n\t\t\texit(0)\n\t\telse:\n\t\t\tcontinue\nif var2 == 0:\n\tprint('-1 -1 -1')"
    }
  },
  {
    "p_name": "p04011",
    "code": {
      "buggy_code": "var0 = int(input())\nk = int(input())\nvar1 = int(input())\nvar2 = int(input())\nif var0 > k:\n\tprint(var1 * k + var2 * (var0 - k))\nelse:\n\tprint(var1 * k)",
      "fixed_code": "var0 = int(input())\nk = int(input())\nvar1 = int(input())\nvar2 = int(input())\nif var0 > k:\n\tprint(var1 * k + var2 * (var0 - k))\nelse:\n\tprint(var1 * var0)"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nprint(-(-(var0 * var1) // 2))",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 == 1 or var1 == 1:\n\tprint(1)\nelse:\n\tprint(-(-(var0 * var1) // 2))"
    }
  },
  {
    "p_name": "p02917",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = var1[0]\nfor i in range(var0 - 1):\n\tvar2 += min(var1[i:var0 - 1])\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar3 = []\nvar3.append(var1[0])\nfor i in range(1, var0 - 1):\n\tif var1[i - 1] < var1[i]:\n\t\tvar3.append(var1[i - 1])\n\telse:\n\t\tvar3.append(var1[i])\nvar3.append(var1[var0 - 2])\nprint(sum(var3))"
    }
  },
  {
    "p_name": "p03254",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = sorted(map(int, input().split()))\nvar3 = 0\nfor i in range(var0):\n\tvar1 -= var2[i]\n\tif var1 < 0:\n\t\tbreak\n\telse:\n\t\tvar3 += 1\nprint(var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = sorted(map(int, input().split()))\nvar3 = 0\nfor i in range(var0):\n\tvar1 -= var2[i]\n\tif var1 < 0:\n\t\tbreak\n\telse:\n\t\tvar3 += 1\nprint(var3 if var1 <= 0 else var3 - 1)"
    }
  },
  {
    "p_name": "p02725",
    "code": {
      "buggy_code": "k, var0 = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nvar3 = var1[0]\nfor i in range(1, var0):\n\tvar4 = var1[i]\n\tvar2 = max(var2, var4 - var3)\n\tvar3 = var4\nvar4 = var1[0]\nvar2 = max(var2, var4 - var3)\nprint(k - var2)",
      "fixed_code": "k, var0 = map(int, input().split())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nvar3 = var1[0]\nfor i in range(1, var0):\n\tvar4 = var1[i]\n\tvar2 = max(var2, var4 - var3)\n\tvar3 = var4\nvar4 = var1[0]\nvar2 = max(var2, var4 + k - var3)\nprint(k - var2)"
    }
  },
  {
    "p_name": "p03264",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nif var0 % 2 == 0:\n\tprint((var0 / 2) ** 2)\nelse:\n\tprint(math.ceil(var0 / 2) * math.floor(var0 / 2))",
      "fixed_code": "var1 = int(input())\nvar2 = int(var1 / 2)\nif var1 % 2:\n\tvar3 = int(var1 / 2 + 1)\nelse:\n\tvar3 = int(var1 / 2)\nprint(var3 * var2)"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "import math\nvar0, var1, var2 = map(int, input().split())\nif math.sqrt(var0) + math.sqrt(var1) < math.sqrt(var2):\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "import math\nvar0, var1, var2 = map(int, input().split())\nif var2 - var0 - var1 > 0 and (var2 - var0 - var1) ** 2 > 4 * var0 * var1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02681",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = input()\nvar2 = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 'var0', 'var1', 'u', 'v', 'w', 'x', 'y', 'z']\nif 1 <= len(var0) <= 10 and len(var1) - len(var0) == 1:\n\tfor i in var2:\n\t\tif var0 + i == var1:\n\t\t\tprint('Yes')\n\t\t\tbreak\nelse:\n\tprint('No')",
      "fixed_code": "var0 = input()\nvar1 = input()\nvar3 = 0\nvar2 = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 'var0', 'var1', 'u', 'v', 'w', 'x', 'y', 'z']\nfor i in var2:\n\tif var0 + i == var1:\n\t\tprint('Yes')\n\t\tvar3 += 1\n\t\tbreak\nif var3 == 0:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02772",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = map(int, input().split())\nvar2 = []\nfor i in var1:\n\tif i % 2 == 0:\n\t\tvar2.append(i)\nvar3 = 0\nfor i in var2:\n\tif i % 3 == 0 or i % 5 == 0:\n\t\tvar3 = 'APPROVED'\n\telse:\n\t\tvar3 = 'DENIED'\n\t\tbreak\nprint(var3)",
      "fixed_code": "var0 = int(input())\nvar1 = map(int, input().split())\nfor i in var1:\n\tif i % 2 == 0 and (i % 3 != 0 and i % 5 != 0):\n\t\tprint('DENIED')\n\t\tbreak\nelse:\n\tprint('APPROVED')"
    }
  },
  {
    "p_name": "p02693",
    "code": {
      "buggy_code": "var0 = int(input().rstrip())\nvar1 = list(map(int, input().split()))\nif var1[1] // var0 * var0 >= var1[0]:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = int(input().rstrip())\nvar1 = list(map(int, input().split()))\nif var1[1] // var0 * var0 >= var1[0]:\n\tprint('OK')\nelse:\n\tprint('NG')"
    }
  },
  {
    "p_name": "p02641",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nif var0 in var2:\n\tprint(var0)\nelse:\n\tfor i in range(100):\n\t\tif var0 - i in var2:\n\t\t\tprint(var0 - i)\n\t\t\tbreak\n\t\tif var0 + i in var2:\n\t\t\tprint(var0 + i)\n\t\t\tbreak",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nif not var0 in var2:\n\tprint(var0)\nelse:\n\tfor i in range(100):\n\t\tif not var0 - i in var2:\n\t\t\tprint(var0 - i)\n\t\t\tbreak\n\t\tif not var0 + i in var2:\n\t\t\tprint(var0 + i)\n\t\t\tbreak"
    }
  },
  {
    "p_name": "p03564",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = int(input())\nvar2 = 1\nvar3 = 0\nwhile var2 < var1:\n\tvar2 *= 2\n\tvar3 += 1\nwhile var3 < var0:\n\tvar2 += var1\n\tvar3 += 1\nprint(var2)\nprint(var3)",
      "fixed_code": "var0 = int(input())\nvar1 = int(input())\nvar2 = 1\nfor i in range(var0):\n\tif var2 * 2 < var2 + var1:\n\t\tvar2 *= 2\n\telse:\n\t\tvar2 += var1\nprint(var2)"
    }
  },
  {
    "p_name": "p03494",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nfor var3 in var1:\n\ti = 0\n\twhile var3 % 2 == 0:\n\t\tvar3 = var3 // 2\n\t\ti += 1\n\tvar2 = min(var2, i)\nprint(var2)",
      "fixed_code": "var2 = 10 ** 9\nvar4 = int(input())\nvar5 = list(map(int, input().split()))\nfor i in var5:\n\tvar6 = 0\n\twhile i % 2 == 0:\n\t\ti //= 2\n\t\tvar6 += 1\n\tif var6 < var2:\n\t\tvar2 = var6\nprint(var2)"
    }
  },
  {
    "p_name": "p02922",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nfor i in range(0, 21):\n\tvar2 = var0 * (i + 1) - i\n\tif var2 >= var1:\n\t\tprint(i + 1)\n\t\texit()",
      "fixed_code": "var0, var1 = map(int, input().split())\nfor i in range(21):\n\tif (var0 - 1) * (i - 1) + var0 >= var1:\n\t\tprint(i)\n\t\texit()"
    }
  },
  {
    "p_name": "p02712",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = []\nfor i in range(0, var0):\n\tif i % 3 == 0 or i % 5 == 0:\n\t\tpass\n\telse:\n\t\tvar1.append(int(i))\nprint(sum(var1))",
      "fixed_code": "var0 = int(input())\nvar1 = []\nfor i in range(1, var0 + 1):\n\tif i % 3 == 0 or i % 5 == 0:\n\t\tpass\n\telse:\n\t\tvar1.append(int(i))\nprint(sum(var1))"
    }
  },
  {
    "p_name": "p02761",
    "code": {
      "buggy_code": "import sys\n\ndef method0():\n\tvar0, var1 = map(int, input().split())\n\tvar2 = [tuple(map(int, input().split())) for _ in range(var1)]\n\tvar2 = set(var2)\n\tvar3 = len(var2)\n\tif var3 != len(set([var4[0] for var4 in var2])):\n\t\tprint(-1)\n\t\tsys.exit()\n\t'\\var0\tif var1 == 0 and var0 == 1:\\var0\t\tprint(0)\\var0\t\tsys.exit()\\var0\t'\n\tvar5 = -1\n\tfor i in range(10 ** var0):\n\t\tvar6 = str(i)\n\t\tvar6 = var6.zfill(var0)\n\t\tvar7 = True\n\t\tif var0 == 2 and var6[0] == 0 and (var6[1] == 0):\n\t\t\tvar7 = False\n\t\telif var0 == 3 and var6[0] == 0:\n\t\t\tvar7 = False\n\t\tfor var4 in var2:\n\t\t\tif var6[var4[0] - 1] != str(var4[1]):\n\t\t\t\tvar7 = False\n\t\tif var7:\n\t\t\tvar5 = i\n\t\t\tbreak\n\tprint(var5)\nmethod0()",
      "fixed_code": "import sys\n\ndef method0():\n\tvar0, var1 = map(int, input().split())\n\tvar2 = [tuple(map(int, input().split())) for _ in range(var1)]\n\tvar2 = set(var2)\n\tvar3 = len(var2)\n\tif var3 != len(set([var4[0] for var4 in var2])):\n\t\tprint(-1)\n\t\tsys.exit()\n\tif var1 == 0 and var0 == 1:\n\t\tprint(0)\n\t\tsys.exit()\n\tvar5 = -1\n\tfor i in range(10 ** var0):\n\t\tvar6 = str(i)\n\t\tvar6 = var6.zfill(var0)\n\t\tvar7 = True\n\t\tfor var4 in var2:\n\t\t\tif var6[var4[0] - 1] != str(var4[1]):\n\t\t\t\tvar7 = False\n\t\t\t\tcontinue\n\t\tif var0 == 3 and var6[0] == '0':\n\t\t\tvar7 = False\n\t\telif var0 == 3 and var6[0] == '0' and (var6[1] == '0'):\n\t\t\tvar7 = False\n\t\telif var0 == 2 and var6[0] == '0':\n\t\t\tvar7 = False\n\t\tif var7:\n\t\t\tvar5 = i\n\t\t\tbreak\n\tprint(var5)\nmethod0()"
    }
  },
  {
    "p_name": "p02818",
    "code": {
      "buggy_code": "def method0():\n\tvar0, var1, var2 = map(int, input().split(' '))\n\tif var2 <= var0:\n\t\tvar0 = var2 - var0\n\t\tvar1 = var1\n\telif var0 < var2 <= var0 + var1:\n\t\tvar1 = var1 - (var2 - var0)\n\t\tvar0 = 0\n\telse:\n\t\tvar0 = 0\n\t\tvar1 = 0\n\tprint(var0, var1)\n\treturn 0\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "def method0():\n\tvar3 = list(map(int, input().split(' ')))\n\tvar4, var5, k = var3\n\tif var4 > k:\n\t\tvar4 = var4 - k\n\telif var4 + var5 >= k:\n\t\tvar5 = var5 - (k - var4)\n\t\tvar4 = 0\n\telse:\n\t\tvar4 = 0\n\t\tvar5 = 0\n\tprint(var4, var5)\n\treturn 0\nif __name__ == '__main__':\n\tmethod0()"
    }
  },
  {
    "p_name": "p03352",
    "code": {
      "buggy_code": "import math\nvar0 = int(input())\nvar1 = []\nvar2 = []\nfor i in range(8):\n\tvar1.append(math.floor(math.pow(var0, 1.0 / (i + 2))))\nfor i in range(8):\n\tvar2.append(math.pow(var1[i], i + 2))\nvar3 = 0\nfor i in range(8):\n\tif var3 < var2[i]:\n\t\tvar3 = var2[i]\nprint(math.floor(var3))",
      "fixed_code": "import math\nvar0 = int(input())\nvar1 = []\nvar2 = []\nfor i in range(8):\n\tvar1.append(math.floor(math.pow(var0, 1.0 / (i + 2))))\nfor i in range(8):\n\tvar2.append(math.pow(var1[i], i + 2))\nvar3 = 0\nfor i in range(8):\n\tif var3 < var2[i]:\n\t\tvar3 = var2[i]\nif var0 != 1000:\n\tprint(math.floor(var3))\nelse:\n\tprint(1000)"
    }
  },
  {
    "p_name": "p02640",
    "code": {
      "buggy_code": "var0, var1 = list(map(int, input().split()))\nvar2 = 2 * var0 - var1 / 2\nvar3 = var1 / 2 - var0\nif var2 > 0 and var3 > 0 and (type(var2) is int) and (type(var3) is int):\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1 = list(map(int, input().split()))\nvar2 = 2 * var0 - var1 / 2\nvar3 = var1 / 2 - var0\nif var2 >= 0 and var3 >= 0 and (var1 % 2 == 0):\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03125",
    "code": {
      "buggy_code": "var0, var1 = [int(i) for i in input().split()]\nif var0 % var1 == 0:\n\tprint(var0 % var1)\nelse:\n\tprint(var0 - var1)",
      "fixed_code": "var0, var1 = [int(i) for i in input().split()]\nif var0 - var1 > 0:\n\tvar2 = var0\n\tvar3 = var1\nelse:\n\tvar2 = var1\n\tvar3 = var0\nif var2 % var3 == 0:\n\tprint(var2 + var3)\nelse:\n\tprint(var2 - var3)"
    }
  },
  {
    "p_name": "p03986",
    "code": {
      "buggy_code": "var0 = input().rstrip() + '#'\nvar1 = var0[0]\nvar2 = []\nvar3 = 1\nfor var4 in var0[1:]:\n\tif var4 == var1:\n\t\tvar3 += 1\n\telse:\n\t\tvar2.append(var3)\n\t\tvar3 = 1\n\tvar1 = var4\nvar5 = 0\nif var0[0] == 'T':\n\tvar5 = var2[0] * 2\nif var0[-2] == 'S':\n\tvar5 = max(var2[-1] * 2, var5)\nprint(var5)",
      "fixed_code": "var0 = input().rstrip()\nvar3 = 0\nvar5 = len(var0)\nfor var6 in var0:\n\tif var6 == 'S':\n\t\tvar3 += 1\n\telif var3 > 0:\n\t\tvar5 -= 2\n\t\tvar3 -= 1\nprint(var5)"
    }
  },
  {
    "p_name": "p02407",
    "code": {
      "buggy_code": "input()\nvar0 = input().split()\nvar0.sort(var1=True)\nprint(' '.join(var0))",
      "fixed_code": "input()\nvar0 = [var2 for var2 in input().split()]\nvar0.var1()\nprint(' '.join(var0))"
    }
  },
  {
    "p_name": "p03543",
    "code": {
      "buggy_code": "1",
      "fixed_code": "var0 = input()\nvar1 = var0[0]\nvar2 = var0[1]\nvar3 = var0[2]\nvar4 = var0[3]\nif var1 == var2 and var2 == var3:\n\tprint('Yes')\nelif var2 == var3 and var3 == var4:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02718",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 0\nfor i in range(var0):\n\tvar3 += var2[i]\nvar4 = var3 / (4 * var1)\nvar5 = 0\nfor i in range(var0):\n\tif var2[i] > var4:\n\t\tvar5 += 1\nif var5 >= var1:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 0\nfor i in range(var0):\n\tvar3 += var2[i]\nvar4 = var3 / (4 * var1)\nvar5 = 0\nfor i in range(var0):\n\tif var2[i] >= var4:\n\t\tvar5 += 1\nif var5 >= var1:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02953",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(int, input().split()))\nvar2 = 0\nif var0 == 1:\n\tprint('Yes')\nelse:\n\tfor i in range(1, var0):\n\t\tif -1 > var1[i] - var1[i - 1]:\n\t\t\tprint('No')\n\t\t\texit()\n\t\telif 0 <= var1[i] - var1[i - 1]:\n\t\t\tcontinue\n\t\telse:\n\t\t\tvar1[i - 1] -= 1\n\t\t\tvar2 += 1\n\t\t\tif var2 == 2:\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tcontinue\n\tif 0 > var1[-1] - var1[-2]:\n\t\tvar2 += 1\n\tif var2 <= 1:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')",
      "fixed_code": "var3 = int(input())\nvar4 = list(map(int, input().split()))\nvar5 = -1\nfor var6 in var4:\n\tif var5 > var6:\n\t\tif var5 != var6 + 1:\n\t\t\tprint('No')\n\t\t\texit()\n\t\telse:\n\t\t\tvar5 = var6 + 1\n\telse:\n\t\tvar5 = var6\nprint('Yes')"
    }
  },
  {
    "p_name": "p03797",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = var1 / 2\nvar3 = int((var0 + var2) // 2)\nprint(var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var1 > var0 * 2:\n\tvar3 = var0\n\tvar2 = var1 - var0 * 2\n\tvar3 += var2 // 4\nelse:\n\tvar3 = var1 // 2\nprint(var3)"
    }
  },
  {
    "p_name": "p02693",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1, var2 = list(map(int, input().split()))\nvar3 = 'No'\nfor i in range(var1, var2 + 1):\n\tif not i % var0:\n\t\tvar3 = 'Yes'\n\t\tbreak\nprint(var3)",
      "fixed_code": "var0 = int(input())\nvar1, var2 = list(map(int, input().split()))\nvar3 = 'NG'\nfor i in range(var1, var2 + 1):\n\tif not i % var0:\n\t\tvar3 = 'OK'\n\t\tbreak\nprint(var3)"
    }
  },
  {
    "p_name": "p02935",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(map(float, input().split()))\nvar2 = var1[0]\nfor i, var3 in enumerate(var1):\n\tif i > 0:\n\t\tvar2 = (var2 + var3) / 2\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = sorted(list(map(float, input().split())))\nvar2 = var1[0]\nfor i, var3 in enumerate(var1):\n\tif i > 0:\n\t\tvar2 = (var2 + var3) / 2\nprint(var2)"
    }
  },
  {
    "p_name": "p03455",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nif var0 * var1 // 2 == 0:\n\tprint('Even')\nelse:\n\tprint('Odd')",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 * var1 % 2 == 0:\n\tprint('Even')\nelse:\n\tprint('Odd')"
    }
  },
  {
    "p_name": "p03106",
    "code": {
      "buggy_code": "var0, var1, k = map(int, input().split())\nvar2 = []\nfor i in range(1, 101):\n\tif var0 % i == 0 and var1 % i == 0:\n\t\tvar2.append(i)\nprint(var2[k - 1])",
      "fixed_code": "var0, var1, k = map(int, input().split())\nvar2 = []\nfor i in range(1, 101):\n\tif var0 % i == 0 and var1 % i == 0:\n\t\tvar2.append(i)\nprint(var2[-1 * k])"
    }
  },
  {
    "p_name": "p02742",
    "code": {
      "buggy_code": "var0, var1 = input().split()\nint(var1)\nint(var0)\nif int(var0) * int(var1) / 2 % 2 == 0:\n\tprint(int(var0) * int(var1) // 2)\nelse:\n\tprint((int(var0) * int(var1) - 1) // 2 + 1)",
      "fixed_code": "var0, var1 = input().split()\nvar1 = int(var1)\nvar0 = int(var0)\nvar2 = int(0)\nif var1 == 1 or var0 == 1:\n\tvar2 = 1\nelif var1 % 2 == 0:\n\tvar2 = var1 // 2 * var0\nelif var1 % 2 == 1 and var0 % 2 == 1:\n\tvar2 = (var1 + 1) // 2 * ((var0 + 1) // 2) + (var1 - 1) // 2 * ((var0 - 1) // 2)\nelif var1 % 2 == 1 and var0 % 2 == 0:\n\tvar2 = (var1 + 1) // 2 * (var0 // 2) + (var1 - 1) // 2 * (var0 // 2)\nprint(var2)"
    }
  },
  {
    "p_name": "p03697",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nprint(['error', var0 + var1], [var0 + var1 < 10])",
      "fixed_code": "var0, var1 = map(int, input().split())\nif var0 + var1 < 10:\n\tprint(var0 + var1)\nelse:\n\tprint('error')"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "var0, var1, var2 = map(float, input().split())\nif 2 * (var0 * var1) ** (1 / 2) < var2 - var0 - var1:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nif (var2 - var0 - var1) ** 2 > 4 * var0 * var1 and var2 - var0 - var1 > 0:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03288",
    "code": {
      "buggy_code": "var0 = int(input())\nif var0 >= 1199:\n\tprint('ABC')\nelif var0 >= 2800:\n\tprint('ARC')\nelse:\n\tprint('AGC')",
      "fixed_code": "var0 = int(input())\nif var0 <= 1199:\n\tprint('ABC')\nelif var0 <= 2799:\n\tprint('ARC')\nelse:\n\tprint('AGC')"
    }
  },
  {
    "p_name": "p02717",
    "code": {
      "buggy_code": "print(' '.join(reversed(input().split())))",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nprint(var2, var0, var1)"
    }
  },
  {
    "p_name": "p03075",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = int(input())\nvar2 = int(input())\nvar3 = int(input())\nvar4 = int(input())\nvar5 = [var0, var1, var2, var3, var4]\nk = int(input())\nvar6 = []\nfor i in range(1, 5):\n\tvar6.append(var5[i] - var5[i - 1])\nfor var3 in var6:\n\tif var3 > k:\n\t\tprint(':(')\n\t\texit(0)\nprint('Yay!')",
      "fixed_code": "var0 = int(input())\nvar1 = int(input())\nvar2 = int(input())\nvar3 = int(input())\nvar4 = int(input())\nvar5 = [var0, var1, var2, var3, var4]\nk = int(input())\nvar6 = []\nfor i in range(5):\n\tfor j in range(5):\n\t\tif i == j:\n\t\t\tcontinue\n\t\telse:\n\t\t\tvar6.append(abs(var5[i] - var5[j]))\nfor var3 in var6:\n\tif var3 > k:\n\t\tprint(':(')\n\t\texit(0)\nprint('Yay!')"
    }
  },
  {
    "p_name": "p02987",
    "code": {
      "buggy_code": "var0 = input()\nvar1 = var0\nvar0 = sorted(var0)\nif var0[0] == var0[1] and var0[2] == var0[3]:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0 = input()\nvar1 = var0\nvar0 = sorted(var0)\nif var0[0] == var0[1] and var0[2] == var0[3] and (var0[0] != var0[3]):\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p02700",
    "code": {
      "buggy_code": "var0, var1, var2, var3 = input().split()\nvar0 = int(var0)\nvar1 = int(var1)\nvar2 = int(var2)\nvar3 = int(var3)\nif int(var2 / var1) - 1 > int(var0 / var3):\n\tprint('No')\nelse:\n\tprint('Yes')",
      "fixed_code": "var0, var1, var2, var3 = input().split()\nvar0 = int(var0)\nvar1 = int(var1)\nvar2 = int(var2)\nvar3 = int(var3)\nvar4 = 0\nwhile var4 == 0:\n\tvar2 = var2 - var1\n\tif var2 <= 0:\n\t\tprint('Yes')\n\t\tbreak\n\tvar0 = var0 - var3\n\tif var0 <= 0:\n\t\tprint('No')\n\t\tbreak"
    }
  },
  {
    "p_name": "p03145",
    "code": {
      "buggy_code": "var0, var1, var2 = map(int, input().split())\nprint(var0 * var1 / 2)",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar3 = int(var0 * var1 / 2)\nprint(var3)"
    }
  },
  {
    "p_name": "p03126",
    "code": {
      "buggy_code": "from collections import defaultdict\n\ndef method0():\n\tvar0, var1 = map(int, input().split())\n\tvar2 = defaultdict(int)\n\tfor var3 in range(var0):\n\t\tvar3, *var4 = map(int, input().split())\n\t\tfor var5 in var4:\n\t\t\tvar2[var5] += 1\n\tvar6 = sum((i == var0 for i in var2.values()))\nif __name__ == '__main__':\n\tmethod0()",
      "fixed_code": "var7, var8 = list(map(int, input().rstrip().split()))\nvar9 = [list(map(int, input().rstrip().split())) for var3 in range(var7)]\nvar10 = [0] * var8\nvar11 = 0\nfor i in range(var7):\n\tfor j in range(1, var9[i][0] + 1):\n\t\tvar10[var9[i][j] - 1] += 1\nfor k in range(var8):\n\tif var10[k] == var7:\n\t\tvar11 += 1\nprint(var11)"
    }
  },
  {
    "p_name": "p02718",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 'Yes'\nvar2.sort(var4=True)\nprint(var2)\nfor i in range(var1):\n\tif var2[i] < sum(var2) / (4 * var1):\n\t\tvar3 = 'No'\n\t\tbreak\nprint(var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = list(map(int, input().split()))\nvar3 = 'Yes'\nvar2.sort(var4=True)\nfor i in range(var1):\n\tif var2[i] < sum(var2) / (4 * var1):\n\t\tvar3 = 'No'\n\t\tbreak\nprint(var3)"
    }
  },
  {
    "p_name": "p02879",
    "code": {
      "buggy_code": "import sys\ninput = sys.stdin.readline().split()\nvar0 = 1\nfor var1 in input:\n\tvar1 = int(var1)\n\tif var1 < 10:\n\t\tvar0 = var0 * var1\n\telse:\n\t\tprint('-1')\nprint(var0)",
      "fixed_code": "import sys\ninput = sys.stdin.readline().split()\nvar0 = 1\nfor var1 in input:\n\tvar1 = int(var1)\n\tif var0 == -1:\n\t\tbreak\n\tif var1 < 10:\n\t\tvar0 = var0 * var1\n\telse:\n\t\tvar0 = -1\nprint(var0)"
    }
  },
  {
    "p_name": "p03075",
    "code": {
      "buggy_code": "var0 = []\nfor i in range(6):\n\tvar0.append(int(input()))\nfor i in range(5):\n\tfor j in range(5):\n\t\tif abs(var0[i] - var0[j]) > var0[5]:\n\t\t\tprint(':(')\n\t\t\texit()\nprint('Yey!')",
      "fixed_code": "var0 = []\nfor i in range(5):\n\tvar0.append(int(input()))\nk = int(input())\nvar0.sort()\nif var0[4] - var0[0] > k:\n\tprint(':(')\nelse:\n\tprint('Yay!')"
    }
  },
  {
    "p_name": "p03087",
    "code": {
      "buggy_code": "import sys\nimport numpy as var0\ninput = sys.stdin.readline\nvar1, var2 = [int(i) for i in input().split()]\nvar3 = input()\nvar4 = [var3[i:i + 2] == 'AC' for i in range(var1)]\nvar5 = var0.cumsum(var4)\nfor i in range(var2):\n\tvar6, var7 = [int(i) for i in input().split()]\n\tvar8 = var5[var7 - 1] - var5[var6 - 1] - var4[var7 - 1]\n\tif var8 > 0:\n\t\tvar8 += 1\n\tprint(var8)",
      "fixed_code": "import sys\nimport numpy as var0\ninput = sys.stdin.readline\nvar1, var2 = [int(i) for i in input().split()]\nvar3 = input()\nvar4 = [False] * var1\nvar5 = [0] * var1\nfor i in range(var1):\n\tvar4[i] = var3[i:i + 2] == 'AC'\n\tvar5[i] = var5[i - 1] + var4[i]\nfor i in range(var2):\n\tvar6, var7 = [int(i) for i in input().split()]\n\tvar8 = var5[var7 - 1] - var5[var6 - 1] - var4[var7 - 1] + var4[var6 - 1]\n\tprint(var8)"
    }
  },
  {
    "p_name": "p02922",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = var0 + var1\nif var2 % var0 == 0:\n\tprint(var2 // var0 - 1)\nelse:\n\tprint(var2 // var0)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = 0\nvar3 = 1\nwhile var3 < var1:\n\tvar3 += var0 - 1\n\tvar2 += 1\nprint(var2)"
    }
  },
  {
    "p_name": "p03005",
    "code": {
      "buggy_code": "var0, k = map(int, input().split())\nprint((1, var0 - k)[k > 1])",
      "fixed_code": "var0, k = map(int, input().split())\nprint((0, var0 - k)[k > 1])"
    }
  },
  {
    "p_name": "p02922",
    "code": {
      "buggy_code": "var0, var1 = map(int, input().split())\nvar2 = var0\nvar3 = 1\nif var1 == 1:\n\tprint(0)\nelse:\n\twhile var2 < var1:\n\t\tvar3 += 1\n\t\tvar2 += var3 * (var0 - 1)\n\tprint(var3)",
      "fixed_code": "var0, var1 = map(int, input().split())\nvar2 = var0\nvar3 = 1\nif var1 == 1:\n\tprint(0)\nelse:\n\twhile var2 < var1:\n\t\tvar2 = var0 + var3 * (var0 - 1)\n\t\tvar3 += 1\n\tprint(var3)"
    }
  },
  {
    "p_name": "p02952",
    "code": {
      "buggy_code": "var0 = input()\nvar0 = int(var0)\nif var0 < 10:\n\tk = var0\nif 10 <= var0 < 100:\n\tk = 9\nif 100 <= var0 < 1000:\n\tk = var0 - 90\nif 1000 <= var0 < 10000:\n\tk = 900\nif 10000 <= var0 < 100000:\n\tk = var0 - 9090\nif var0 == 100000:\n\tk = var0 - 9091\nprint(k)",
      "fixed_code": "var0 = input()\nvar0 = int(var0)\nif var0 < 10:\n\tk = var0\nif 10 <= var0 < 100:\n\tk = 9\nif 100 <= var0 < 1000:\n\tk = var0 - 90\nif 1000 <= var0 < 10000:\n\tk = 909\nif 10000 <= var0 < 100000:\n\tk = var0 - 9090\nif var0 == 100000:\n\tk = var0 - 9091\nprint(k)"
    }
  },
  {
    "p_name": "p02743",
    "code": {
      "buggy_code": "import math\nvar0, var1, var2 = map(int, input().split())\nvar3 = [2, 3, 5, 7, 11]\nfor i in range(5):\n\twhile var0 % var3[i] == 0 and var1 % var3[i] == 0 and (var2 % var3[i] == 0):\n\t\tif var0 == var3[i] or var1 == var3[i] or var2 == var3[i]:\n\t\t\tbreak\n\t\tvar0 /= var3[i]\n\t\tvar1 /= var3[i]\n\t\tvar2 /= var3[i]\nvar4 = var0 * var1\nvar5 = (var2 - (var0 + var1)) / 2\nvar5 = var5 ** 2\nif var4 < var5:\n\tprint('Yes')\nelse:\n\tprint('No')",
      "fixed_code": "var0, var1, var2 = map(int, input().split())\nvar4 = 4 * var0 * var1\nvar5 = var2 - (var0 + var1)\nif var5 < 0:\n\tprint('No')\n\texit()\nvar5 = var5 ** 2\nif var4 < var5:\n\tprint('Yes')\nelse:\n\tprint('No')"
    }
  },
  {
    "p_name": "p03338",
    "code": {
      "buggy_code": "var0 = int(input())\nvar1 = list(input())\nvar2 = 0\nfor i in range(var0):\n\tvar3 = 0\n\tvar4 = list(set(var1[i:]))\n\tvar5 = list(set(var1[:i + 1]))\n\tvar6 = len(var5)\n\tfor j in range(var6):\n\t\tif var5[j] in var4:\n\t\t\tvar3 += 1\n\t\telse:\n\t\t\tcontinue\n\tif var2 <= var3:\n\t\tvar2 = var3\n\telse:\n\t\tcontinue\nprint(var2)",
      "fixed_code": "var0 = int(input())\nvar1 = list(input())\nvar2 = 0\nvar7 = []\nfor i in range(var0):\n\tvar3 = 0\n\tvar4 = list(set(var1[i + 1:]))\n\tvar5 = list(set(var1[:i + 1]))\n\tvar6 = len(var5)\n\tfor j in range(var6):\n\t\tif var5[j] in var4:\n\t\t\tvar3 += 1\n\t\telse:\n\t\t\tcontinue\n\tif var2 <= var3:\n\t\tvar2 = var3\n\t\tvar7.append(var2)\n\telse:\n\t\tcontinue\nprint(max(var7))"
    }
  }
]